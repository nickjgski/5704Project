fix missing toString | 2020-01-04 01:28:33 | 47bad9fec441ea462129ece0c4f1125f578ba1ec

Use "x minutes ago" format for dates (#1675)

Also fixed some of the ordering (leaks types by counts desc, leaks by date desc)

Fixes #1672 | 2019-12-16 23:56:38 | 9fae7ed497e1760abe74cf2c22535fbd51f16331

Gradle plugin that puts proguard mapping file in the apk as an asset (#1589)

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Add unit tests for copy obfuscation file task

* Add recipe describing how to use the plugin

* Add plugin usage instruction

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Rebased onto master

* Add missing test dependencies

* Use lambda function instead of a collection for plugin configuration

* Post code review fixups

* Rename according to code review suggestions

* Fix detekt warning

* Pass empty file if mapping doesn't exist

* Improved recipe

* Code review fixups

* Fix CopyObfuscationMappingFileTask tests

* Code review fixes

* Fix detekt issues

* Add plugin tests

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Rebased onto master

* Use lambda function instead of a collection for plugin configuration

* Post code review fixups

* Rename according to code review suggestions

* Fix detekt warning

* Pass empty file if mapping doesn't exist

* Improved recipe

* Code review fixups

* Fix CopyObfuscationMappingFileTask tests

* Code review fixes

* Fix detekt issues

* Add plugin tests

* Rebased onto master

* Add one more test for plugin

* Try fixing CI tests by reading $ANDROID_HOME value

* Try fixing CI tests by hardcoding android sdk path

* Debugging CI failing test

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Post review fixes

* Debugging failing test on CI

* Try fixing CI tests by hardcoding android sdk path

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debug failing test on CI

* Debug failing test on CI

* Debug failing test on CI

* Debug failing test on CI

* Debug failing test on CI

* Debug failing test on CI

* Use trusty dist in travis config

* Debug failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debug failing CI test

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Prevent GradleRunner from running builds in a separate process

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* sni: modernize travis script. Solve emulator issue.
The build now uses build tools 28 which requires little adjustments
from the original recipe. In the future we can just use the original recipe
Original recipe: https://docs.travis-ci.com/user/languages/android/ | 2019-12-10 06:48:02 | 25a10fcd9f405235de63bd791ea4ae4eb5453924

Fix emulators  (#1667)

* Revert "Fix travis (#1665)"

This reverts commit 00b9bd32d535022800153f34916d4c4667d2a5cd.

* Fix emulators

A recent emulator update breaks a few CI projects.  This PR applies
a fix suggested by Google.

https://issuetracker.google.com/issues/145622251#comment33 | 2019-12-10 05:43:06 | b678e1508e9ef3618ce2c44d44ff733f350d4185

Fix travis (#1665)

According to [this tweet](https://twitter.com/colinwhi/status/1204102384458194944) from @colinrtwhite, Travis is failing due to a bug in the most recent version of the emulator. Pinning the emulator to an older version works around it. This commit steals the fix from https://github.com/coil-kt/coil/pull/195 . | 2019-12-09 19:54:40 | 00b9bd32d535022800153f34916d4c4667d2a5cd

Add ability to customize class used to detect tests (#1654)

Developers should not ship JUnit in their app, even in debug. However, some debug libraries unfortunately ship with JUnit as a dependency (e.g. see https://github.com/square/okhttp/issues/4667).

Developers can change the default to target a different class (e.g assertj) to help LeakCanary detect unit tests, by overriding a public string:

```
  <string name="leak_canary_test_class_name">org.assertj.core.api.Assertions</string>
```

Fixes #1649 | 2019-12-03 02:35:07 | dbbb969d59b066c3f9197ebc3863cc4f54dae5d2

fix changelog | 2019-11-25 19:32:41 | 50ae3ba7558e5a3f83fc11b4d17a281f072ff078

Fix bug in handling JNI roots (#1636)

* When adding support for native reference leaks (879ab7c) there was a missing bracket in an if/else branch that led to all native gc roots being ignored.

Fixes #1634 | 2019-11-25 19:00:23 | aff338544b5eebbb0b3c792c628cca11fa888373

fix typos | 2019-11-19 03:58:07 | 25b0df0da4f6e93dedcd90342c9cd1d0eab080ed

Merge pull request #1596 from fernandospr/patch-1

Update blog-articles.md | 2019-10-04 16:35:24 | e65236dae7c5827b7c9f64c19c8b1a16ea19e5a7

Merge pull request #1598 from PaulWoitaschek/patch-1

Fixed the german string placeholder for sharing the heap dump | 2019-10-03 16:16:23 | 029f28eefd7aa966520ac3649fd2688732c02867

Fix crash when pressing home from root screen (#1578)

This bug only happens on older Android devices.

Fixes #1555 | 2019-09-11 01:51:06 | 274f58f96e8de7dcd3000c06ba3e2b50e427747d

Merge pull request #1559 from bric3/fix-primitive-array-dump-skip

Fixes the primitive array dump record skipping | 2019-09-09 22:16:57 | c0fd4d812cb8d6c5723231e501c121da2af86f06

Parsing and applying proguard mapping during heap analysis (#1542)

* Parsing and applying proguard mapping during heap analysis

* Parsing and applying proguard mapping during heap analysis

* Rebased onto master

* Post review changes and updated shark-cli to support mapping files

* Post review fixes

* Moving proguard mapping reader out of the analyzer and formatting fixes | 2019-08-30 16:54:20 | 66182a52069d9be59d0af6220aa9afd74218aa9b

fix images | 2019-08-27 20:02:50 | 8f5030e9faa8690217e1bd436274a3de5b9d3fb3

fix image links in docs | 2019-08-27 19:59:20 | edca56a947278508350bfa5dd33d3fa10699001f

Merge pull request #1549 from Armaxis/patch-1

Added section about using Detekt to Contributing | 2019-08-24 22:16:26 | c923d14909888860a99d5899af17f5b52c9b000f

Revert "Replaced accessor with a call to setter to fix the build issue"

This reverts commit 82db0398 | 2019-08-17 02:21:08 | c570cb9b0fd7bd7fcc88c4d3b529df8837e98fdc

Replaced accessor with a call to setter to fix the build issue | 2019-08-16 04:32:25 | 82db039843303044f91d36ba7c43595ab59bacd5

fix typo | 2019-08-02 15:31:17 | a2452f61e78e689efb59adaf71384d74447578b0

Add / fix android inspectors (#1491)

* Added MortarScope and ViewRootImpl inspectors
* Fixed the ContextWrapper inspector

Fixes #1490
Fixes #1389 | 2019-07-25 22:50:48 | 915f8359690a016a09e66608a041454b9c8c52cb

Documenting public APIs (#1476)

Also fixed naming and other things that weren't right.

Fixes #1474 | 2019-07-19 06:57:25 | 41c69a5d424b4236114c5ce1b077afdad38e57a5

Adding CLI for LeakCanary (#1456)

Example usage:
```
./gradlew leakcanary-cli:run --args='analyze-process com.example.leakcanary'

./gradlew leakcanary-cli:run --args='dump-process com.example.leakcanary'

./gradlew leakcanary-cli:run --args='analyze-file /path/to/heapdump.hprof'
```

Also fixed a bug in ShortestPathFinder which did not ignore null references in object arrays | 2019-07-11 19:11:30 | eded1c96e84f37393857ba4de2580aec784b2391

Behavior change & bugfixes for retained count notification (#1433)

* Bugfix: when tapping the "dump heap" notification, if the GC found no retained instance we didn't use a distinct notification id to communicate that, and then soon after we'd dismiss the notification that let's the user know there is no retained instances on tap.
* Bugfix: we weren't running the GC when checking for retained instances and the count was under the threshold
* Change: we now update the notification and keep it around for 30 seconds when the count goes to 0
* Change: the "no retained instance" notification that shows on tap is identical and also auto dismisses after 30 seconds.
* Change: we're checking for retained references (and running the GC) every 2 seconds instead of 5.

Fixes #1427 | 2019-07-03 20:55:47 | 968083a915343d881bd63e40587c070fde543732

Update how to fix a leak | 2019-06-25 05:46:56 | 177e7fd12933d99eca7a526851c53e598a03bf90

Text rendering tests (#1378)

* Added test coverage for text rendering
* Fixed bug: labels were not rendered on the last node (leaking instance)
* Matched exclusions are now rendered on their own line

Fixes #1375
Fixes #1350 | 2019-06-04 09:32:11 | 1926cb1db73f9583e11c557dbf2e5d46e3896a6e

Thread name based exclusions (#1353)

* Readded support for exclusions of local variable based on thread names
* Renamed ThreadExclusion to JavaLocalExclusion
* Fixed bug: KeyedWeakReference was not always ignored because its superclass is has a weakly reachable exclusion.
* Fixed bug: all root nodes had the same visit order as the first non root enqueued item, making it possible for a non root node to be dequeued before we're done with all roots.
* Redded gc root sorting
* Added tests to cover all uncovered bugs
* Added support for parsing StackFrameRecord

Fixes #1339 | 2019-05-20 13:17:18 | 6c2ee609efda323e88a4964d31fc5a5f0532f776

Reachability => LeakStatus (#1340)

* Combined leaking information from inspectors to solving conflicts while keeping all reasons
* Made reason from view leak inspector more obvious, and added label data about internals
* Moved reachability into LeakTraceElement
* Reachability renamed to LeakNodeStatus and leaking / not leaking
* ReachabilityInspector and Labeler are now functions with type aliases

Related to #1336: should fix the crash, though it's still unclear why AppCompatButton was a gc root there. | 2019-05-07 14:56:59 | 01210bbbfaecb3bcb6057c62b2195366d3bfa4f9

Revamp notifications (#1335)

* New notification that shows the count of retained instances. Tapping it triggers a heap dump. Fixes #1325
* Notifications are now split into two channels: default for results, and low for everything else.
* New config options: LeakCanary.config.dumpHeapWhenDebugging (default false) and LeakCanary.config.retainedVisibleThreshold (default 5)
* Replaced notification int constants and timestamps with resource ids.
* Don't show background notifications in instant apps (#1197) | 2019-05-05 16:38:26 | b14d9bc9c0a87119137bc0998bdec9314186dfcf

Highlighting new leaks (#1334)

New leaks are leaks that have a leak group that doesn't exist in any prior analysis.

* The notification now reports the count of leaks, with a split of new, known, and won't fix.
* The analysis success screen shows new leaks
* Moved description prefixes to be computed rather than inserted in the DB

Fixes #1328 | 2019-05-05 09:37:38 | f9a0518d4ddd69b782b6302caa3e3039787038e4

LeakSentry can be disabled (#1332)

LeakCanary has an enabled config option. Default is on in debug builds off in release builds.

Fixes #1327 | 2019-05-04 17:52:47 | f74f60901f34c751e8b8798d626678aa6233c893

Revert "fix trailing spaces per checkstyle"

This reverts commit ff17f879ec92ec326f8b1c6b7b8d77a5266d6622. | 2019-05-04 08:04:21 | 03136ca7dc1680299d710f79ca885412a1564144

Add test coverage for heap analysis (#1329)

* Fixed bug when reachability inspectors conflicts (reachable should win and erase unreachable)
* Added back support for leaking instances being empty objects, strings, primitive arrays or any object that we otherwise don't follow to find shortest paths. | 2019-05-04 07:51:02 | 59558e655d537c7654c411eebfd840773a8b77c9

Introducing exclusion priority (#1317)

* Add segmented FIFO queue

Unified several queues into one segmented FIFO queue. This will enable us to add several levels of priority.

* Introducing exclusion priority

* "excludedLeak" is now known as "won't fix leak", which matches its reality better. It's a leak that is known and real yet we're not fixing.
* Exclusion.alwaysExclude is replaced with Exclusion.status, with 3 possible values: NEVER_REACHABLE, WONT_FIX_LEAK, WEAKLY_REACHABLE.
* The shortest path finder will now follow weak references after all other paths have been exhausted.
* Removed class exclusion, was confusing, replaced with less lazy approach of listing fields to exclude
* VIEWLOCATIONHOLDER_ROOT should not have been always excluded, fixed.

Fixes #1173 ... well kinda. Instead of "non leaking retained instances", LeakCanary will report weakly reachable traces. Not sure if that'll help but it's a foundation we can build on. | 2019-04-30 17:44:15 | b0eedc553995e354e2382b3378bf0348801cd3c5

AllFieldsLabeler & cleanups (#1316)

* Add new optional labeler that prints all fields (useful for debugging)
* Move deprecated AnalysisResult to perflib
* Made DefaultAnalysisResultListener an object | 2019-04-30 07:08:29 | b9ee5356db265412db39c4c341880f305fbf2c76

fix format | 2019-04-22 06:25:09 | 4a2b158913e5a9eb0d5c6fdfbf949a80fc1b2c6b

Rename default to perflib and experimental to default (#1282)

* Remove experimental from module names

* Remove experimental prefix, add perflib prefix:

* update docs | 2019-04-19 06:01:39 | 425a9f24deb72691b02cdc85f80d177c05afebc5

fix list | 2019-04-18 21:55:43 | 8e3f9d26e8d3555bf934b99ac062aabc3aba528f

fix broken master | 2019-04-10 15:00:30 | f067ae53e050c5f52f47237440a6ac7eee3ca94c

fix broken build due to typo | 2019-04-10 05:44:19 | 7d4ddb4ffe3c9b0f30a84848675452dded0d4115

Leaking information aligned below simple class name. (#1258)

Also fixed issue where extraString + exclusionString were showing after the squiggly line.

Before: 
``` 
┬
├─ java.lang.Thread
│                 Leaking: NO (it's a GC root)
│                 ↓ thread Thread.<Java Local>
│                                ~~~~~~~~~~~~~ (named 'Thread-4')
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                 Leaking: UNKNOWN
│                 ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                     ~~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) 
```
After: 
``` 
┬
├─ java.lang.Thread
│            Leaking: NO (it's a GC root)
│            ↓ thread Thread.<Java Local> (named 'Thread-4')
│                            ~~~~~~~~~~~~
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                         Leaking: UNKNOWN
│                         ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                              ~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) ``` | 2019-04-05 20:11:47 | a938855585c7cf2522ffbd143d4bb66a234eea66

Add share to Stack Overflow button when viewing a leak (#1252)

* Add share to Stack Overflow button when viewing a leak

* Add question tag, lengthen toast and fix build failure. | 2019-04-04 20:49:50 | 8724d2aaffc07904517a3b823867802ca43233ae

Check if serviceInfo.processName is null. When LeakCanary runs on a seperate process and that process for some reason does not have a assigned processName, then we will crash on a NullPointerException. Also a debug log explaining this. (#1225) | 2019-04-01 19:20:40 | 3efc43608ed71dc20b0ad1e0e80e33d15249666f

fix master broken | 2019-04-01 19:07:27 | fe42130029174681a708b7d8622412efbaf81e73

fix trailing spaces per checkstyle | 2019-03-29 22:34:58 | ff17f879ec92ec326f8b1c6b7b8d77a5266d6622

Fix GC Root bugs that missed leaks (#1168)

In Perflib, Snapshot.getGcRoots() only returns the GC roots from the first heap. Based on empirical evidence, it seems like Android has 4 heaps, and the GC Roots used to only be in the first heap, but more recent versions of Android have GC Roots in other heaps as well.

This means LeakCanary would sometimes show "No Leak Found" when there actually was a leak.

Fixes #1163 | 2019-01-10 23:32:27 | 64b6e5a41796ae1587c50c8cc860cea25f28f382

fix typo | 2018-10-17 00:43:01 | 044b1e4827bc71ec008dc3f7e43c78f58885f1e1

Fix LeakCanary toasting (#1116)

- Prior attempts to get it to work with the application context turned out to be buggy.
- This makes LeakCanary use whatever the current resumed activity is, if any.
- If there is no resumed activity, then the toast isn't displayed.

This supersedes #1080 | 2018-10-16 13:23:14 | 0e39e2eea79bc05bf7147a4074dd7163f7c401ff

fix the wrong word (#1111) | 2018-10-16 01:25:28 | 636b9b6c2b39c0c887c9ed78e904239db9bc131e

Merge pull request #1104 from IlyaGulya/bug/travis-ci-cache-fix

Fix travis caching and improve build time. | 2018-09-22 21:25:59 | 344728b906daf6d010f66bdf4ccc29ad8fedede5

Error prone 2.3.1 + suggested fix and specify version

See http://errorprone.info/bugpattern/StringSplitter | 2018-08-22 07:37:33 | a6b6960d73a1da9661f4e85254570bf5f867f954

Merge pull request #1089 from hzsweers/z/fixAnother

Quick followup to #1088 | 2018-08-22 03:15:15 | be973f5f5da6a3516aedab98e639690697617747

Merge pull request #1087 from Goddchen/patch-2

Updated german translation | 2018-08-20 13:52:47 | b43c279b3e1623c193e1dc81955527f70e93f822

Merge pull request #1063 from javmarina/patch-1

Fixed wrong versions in AndroidExcludedRefs | 2018-07-25 18:31:55 | 3b4ebe3e2571377f93e9a6976e021324502a0f78

Fixed wrong versions in AndroidExcludedRefs

Commit https://android.googlesource.com/platform/frameworks/base/+/27db46850b708070452c0ce49daf5f79503fbde6 introduced this issue. This commit was first included in Jelly Bean 4.3 (JELLY_BEAN_MR2), not Jelly Bean 4.1 (JELLY_BEAN)
Commit https://android.googlesource.com/platform/frameworks/base/+/5200e1cb07190a1f6874d72a4561064cad3ee3e0 fixes this issue and was first included in Oreo 8.0 (O). Nougat still has this memory leak. | 2018-07-24 18:24:59 | e4778b25f2c6e65ebc485d255e38586c7d45ec97

Merge pull request #1057 from square/py/ui_bug

Fix drawing of start line | 2018-07-20 22:21:19 | af96577a7d19e4df9f63d95fd9c3bfd2adcddb5d

Avoid Toast crashes

Showing a toast can crash on API 25 because the Window Manager can throw a BadTokenException when addView is called.

This change fixes it by configuring the toast manually and calling the window manager directly. This is based on https://github.com/pyricau/frenchtoast/blob/master/frenchtoast/src/main/java/frenchtoast/Mixture.java#L49 .

Fixes #844 | 2018-07-20 16:11:22 | c9ebc5cf5099c093bde5d3309b2692cb0e2016d8

Fixing setup bug | 2018-06-28 04:07:09 | 505933817cf6e2eb0dad4a78d4c7c35a072b9868

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

Doc fixes and updates (#1744)

* Fixes to properly render recipes in MkDoc

* Bumped release date
Updated release doc | 2020-02-06 18:00:48 | 57057c636b816cd73f9b344a4201aa04a3a8cca8

[bugfix]AppWatcher manualInstall function not works bugfix (#1734)

* manualInstall config not enabled by default bugfix

* Make manualInstall config enable decided by isDebuggableBuild

* Make manualInstall config copy from existing customized config

* Make manualInstall config copy from existing customized config and set enabled to true forcely

* Make manualInstall config enable decided by InternalAppWatcher.isDebuggableBuild | 2020-02-04 03:30:50 | 00604fce8f86e3b8a9fe4ea2ea0e71fc1a74eb28

Merge pull request #1729 from square/py/fix_text

Fix helper text | 2020-01-24 19:53:15 | 825ac6242cde0a4c0488547d03e12a8df91a5f31

Fixed compilation issue by extracting example application to debug/release folders | 2019-10-09 01:29:24 | b9f1bf88c4b0ac9f0a91cc54638899d9c6ecb8e1

fix missing toString | 2020-01-04 01:28:33 | 47bad9fec441ea462129ece0c4f1125f578ba1ec

Use "x minutes ago" format for dates (#1675)

Also fixed some of the ordering (leaks types by counts desc, leaks by date desc)

Fixes #1672 | 2019-12-16 23:56:38 | 9fae7ed497e1760abe74cf2c22535fbd51f16331

Gradle plugin that puts proguard mapping file in the apk as an asset (#1589)

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Add unit tests for copy obfuscation file task

* Add recipe describing how to use the plugin

* Add plugin usage instruction

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Rebased onto master

* Add missing test dependencies

* Use lambda function instead of a collection for plugin configuration

* Post code review fixups

* Rename according to code review suggestions

* Fix detekt warning

* Pass empty file if mapping doesn't exist

* Improved recipe

* Code review fixups

* Fix CopyObfuscationMappingFileTask tests

* Code review fixes

* Fix detekt issues

* Add plugin tests

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Rebased onto master

* Use lambda function instead of a collection for plugin configuration

* Post code review fixups

* Rename according to code review suggestions

* Fix detekt warning

* Pass empty file if mapping doesn't exist

* Improved recipe

* Code review fixups

* Fix CopyObfuscationMappingFileTask tests

* Code review fixes

* Fix detekt issues

* Add plugin tests

* Rebased onto master

* Add one more test for plugin

* Try fixing CI tests by reading $ANDROID_HOME value

* Try fixing CI tests by hardcoding android sdk path

* Debugging CI failing test

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Post review fixes

* Debugging failing test on CI

* Try fixing CI tests by hardcoding android sdk path

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debug failing test on CI

* Debug failing test on CI

* Debug failing test on CI

* Debug failing test on CI

* Debug failing test on CI

* Debug failing test on CI

* Use trusty dist in travis config

* Debug failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debug failing CI test

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Prevent GradleRunner from running builds in a separate process

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* sni: modernize travis script. Solve emulator issue.
The build now uses build tools 28 which requires little adjustments
from the original recipe. In the future we can just use the original recipe
Original recipe: https://docs.travis-ci.com/user/languages/android/ | 2019-12-10 06:48:02 | 25a10fcd9f405235de63bd791ea4ae4eb5453924

Fix emulators  (#1667)

* Revert "Fix travis (#1665)"

This reverts commit 00b9bd32d535022800153f34916d4c4667d2a5cd.

* Fix emulators

A recent emulator update breaks a few CI projects.  This PR applies
a fix suggested by Google.

https://issuetracker.google.com/issues/145622251#comment33 | 2019-12-10 05:43:06 | b678e1508e9ef3618ce2c44d44ff733f350d4185

Fix travis (#1665)

According to [this tweet](https://twitter.com/colinwhi/status/1204102384458194944) from @colinrtwhite, Travis is failing due to a bug in the most recent version of the emulator. Pinning the emulator to an older version works around it. This commit steals the fix from https://github.com/coil-kt/coil/pull/195 . | 2019-12-09 19:54:40 | 00b9bd32d535022800153f34916d4c4667d2a5cd

Add ability to customize class used to detect tests (#1654)

Developers should not ship JUnit in their app, even in debug. However, some debug libraries unfortunately ship with JUnit as a dependency (e.g. see https://github.com/square/okhttp/issues/4667).

Developers can change the default to target a different class (e.g assertj) to help LeakCanary detect unit tests, by overriding a public string:

```
  <string name="leak_canary_test_class_name">org.assertj.core.api.Assertions</string>
```

Fixes #1649 | 2019-12-03 02:35:07 | dbbb969d59b066c3f9197ebc3863cc4f54dae5d2

fix changelog | 2019-11-25 19:32:41 | 50ae3ba7558e5a3f83fc11b4d17a281f072ff078

Fix bug in handling JNI roots (#1636)

* When adding support for native reference leaks (879ab7c) there was a missing bracket in an if/else branch that led to all native gc roots being ignored.

Fixes #1634 | 2019-11-25 19:00:23 | aff338544b5eebbb0b3c792c628cca11fa888373

fix typos | 2019-11-19 03:58:07 | 25b0df0da4f6e93dedcd90342c9cd1d0eab080ed

Merge pull request #1596 from fernandospr/patch-1

Update blog-articles.md | 2019-10-04 16:35:24 | e65236dae7c5827b7c9f64c19c8b1a16ea19e5a7

Merge pull request #1598 from PaulWoitaschek/patch-1

Fixed the german string placeholder for sharing the heap dump | 2019-10-03 16:16:23 | 029f28eefd7aa966520ac3649fd2688732c02867

Fix crash when pressing home from root screen (#1578)

This bug only happens on older Android devices.

Fixes #1555 | 2019-09-11 01:51:06 | 274f58f96e8de7dcd3000c06ba3e2b50e427747d

Merge pull request #1559 from bric3/fix-primitive-array-dump-skip

Fixes the primitive array dump record skipping | 2019-09-09 22:16:57 | c0fd4d812cb8d6c5723231e501c121da2af86f06

Parsing and applying proguard mapping during heap analysis (#1542)

* Parsing and applying proguard mapping during heap analysis

* Parsing and applying proguard mapping during heap analysis

* Rebased onto master

* Post review changes and updated shark-cli to support mapping files

* Post review fixes

* Moving proguard mapping reader out of the analyzer and formatting fixes | 2019-08-30 16:54:20 | 66182a52069d9be59d0af6220aa9afd74218aa9b

fix images | 2019-08-27 20:02:50 | 8f5030e9faa8690217e1bd436274a3de5b9d3fb3

fix image links in docs | 2019-08-27 19:59:20 | edca56a947278508350bfa5dd33d3fa10699001f

Merge pull request #1549 from Armaxis/patch-1

Added section about using Detekt to Contributing | 2019-08-24 22:16:26 | c923d14909888860a99d5899af17f5b52c9b000f

Revert "Replaced accessor with a call to setter to fix the build issue"

This reverts commit 82db0398 | 2019-08-17 02:21:08 | c570cb9b0fd7bd7fcc88c4d3b529df8837e98fdc

Replaced accessor with a call to setter to fix the build issue | 2019-08-16 04:32:25 | 82db039843303044f91d36ba7c43595ab59bacd5

fix typo | 2019-08-02 15:31:17 | a2452f61e78e689efb59adaf71384d74447578b0

Add / fix android inspectors (#1491)

* Added MortarScope and ViewRootImpl inspectors
* Fixed the ContextWrapper inspector

Fixes #1490
Fixes #1389 | 2019-07-25 22:50:48 | 915f8359690a016a09e66608a041454b9c8c52cb

Documenting public APIs (#1476)

Also fixed naming and other things that weren't right.

Fixes #1474 | 2019-07-19 06:57:25 | 41c69a5d424b4236114c5ce1b077afdad38e57a5

Adding CLI for LeakCanary (#1456)

Example usage:
```
./gradlew leakcanary-cli:run --args='analyze-process com.example.leakcanary'

./gradlew leakcanary-cli:run --args='dump-process com.example.leakcanary'

./gradlew leakcanary-cli:run --args='analyze-file /path/to/heapdump.hprof'
```

Also fixed a bug in ShortestPathFinder which did not ignore null references in object arrays | 2019-07-11 19:11:30 | eded1c96e84f37393857ba4de2580aec784b2391

Behavior change & bugfixes for retained count notification (#1433)

* Bugfix: when tapping the "dump heap" notification, if the GC found no retained instance we didn't use a distinct notification id to communicate that, and then soon after we'd dismiss the notification that let's the user know there is no retained instances on tap.
* Bugfix: we weren't running the GC when checking for retained instances and the count was under the threshold
* Change: we now update the notification and keep it around for 30 seconds when the count goes to 0
* Change: the "no retained instance" notification that shows on tap is identical and also auto dismisses after 30 seconds.
* Change: we're checking for retained references (and running the GC) every 2 seconds instead of 5.

Fixes #1427 | 2019-07-03 20:55:47 | 968083a915343d881bd63e40587c070fde543732

Update how to fix a leak | 2019-06-25 05:46:56 | 177e7fd12933d99eca7a526851c53e598a03bf90

Text rendering tests (#1378)

* Added test coverage for text rendering
* Fixed bug: labels were not rendered on the last node (leaking instance)
* Matched exclusions are now rendered on their own line

Fixes #1375
Fixes #1350 | 2019-06-04 09:32:11 | 1926cb1db73f9583e11c557dbf2e5d46e3896a6e

Thread name based exclusions (#1353)

* Readded support for exclusions of local variable based on thread names
* Renamed ThreadExclusion to JavaLocalExclusion
* Fixed bug: KeyedWeakReference was not always ignored because its superclass is has a weakly reachable exclusion.
* Fixed bug: all root nodes had the same visit order as the first non root enqueued item, making it possible for a non root node to be dequeued before we're done with all roots.
* Redded gc root sorting
* Added tests to cover all uncovered bugs
* Added support for parsing StackFrameRecord

Fixes #1339 | 2019-05-20 13:17:18 | 6c2ee609efda323e88a4964d31fc5a5f0532f776

Reachability => LeakStatus (#1340)

* Combined leaking information from inspectors to solving conflicts while keeping all reasons
* Made reason from view leak inspector more obvious, and added label data about internals
* Moved reachability into LeakTraceElement
* Reachability renamed to LeakNodeStatus and leaking / not leaking
* ReachabilityInspector and Labeler are now functions with type aliases

Related to #1336: should fix the crash, though it's still unclear why AppCompatButton was a gc root there. | 2019-05-07 14:56:59 | 01210bbbfaecb3bcb6057c62b2195366d3bfa4f9

Revamp notifications (#1335)

* New notification that shows the count of retained instances. Tapping it triggers a heap dump. Fixes #1325
* Notifications are now split into two channels: default for results, and low for everything else.
* New config options: LeakCanary.config.dumpHeapWhenDebugging (default false) and LeakCanary.config.retainedVisibleThreshold (default 5)
* Replaced notification int constants and timestamps with resource ids.
* Don't show background notifications in instant apps (#1197) | 2019-05-05 16:38:26 | b14d9bc9c0a87119137bc0998bdec9314186dfcf

Highlighting new leaks (#1334)

New leaks are leaks that have a leak group that doesn't exist in any prior analysis.

* The notification now reports the count of leaks, with a split of new, known, and won't fix.
* The analysis success screen shows new leaks
* Moved description prefixes to be computed rather than inserted in the DB

Fixes #1328 | 2019-05-05 09:37:38 | f9a0518d4ddd69b782b6302caa3e3039787038e4

LeakSentry can be disabled (#1332)

LeakCanary has an enabled config option. Default is on in debug builds off in release builds.

Fixes #1327 | 2019-05-04 17:52:47 | f74f60901f34c751e8b8798d626678aa6233c893

Revert "fix trailing spaces per checkstyle"

This reverts commit ff17f879ec92ec326f8b1c6b7b8d77a5266d6622. | 2019-05-04 08:04:21 | 03136ca7dc1680299d710f79ca885412a1564144

Add test coverage for heap analysis (#1329)

* Fixed bug when reachability inspectors conflicts (reachable should win and erase unreachable)
* Added back support for leaking instances being empty objects, strings, primitive arrays or any object that we otherwise don't follow to find shortest paths. | 2019-05-04 07:51:02 | 59558e655d537c7654c411eebfd840773a8b77c9

Introducing exclusion priority (#1317)

* Add segmented FIFO queue

Unified several queues into one segmented FIFO queue. This will enable us to add several levels of priority.

* Introducing exclusion priority

* "excludedLeak" is now known as "won't fix leak", which matches its reality better. It's a leak that is known and real yet we're not fixing.
* Exclusion.alwaysExclude is replaced with Exclusion.status, with 3 possible values: NEVER_REACHABLE, WONT_FIX_LEAK, WEAKLY_REACHABLE.
* The shortest path finder will now follow weak references after all other paths have been exhausted.
* Removed class exclusion, was confusing, replaced with less lazy approach of listing fields to exclude
* VIEWLOCATIONHOLDER_ROOT should not have been always excluded, fixed.

Fixes #1173 ... well kinda. Instead of "non leaking retained instances", LeakCanary will report weakly reachable traces. Not sure if that'll help but it's a foundation we can build on. | 2019-04-30 17:44:15 | b0eedc553995e354e2382b3378bf0348801cd3c5

AllFieldsLabeler & cleanups (#1316)

* Add new optional labeler that prints all fields (useful for debugging)
* Move deprecated AnalysisResult to perflib
* Made DefaultAnalysisResultListener an object | 2019-04-30 07:08:29 | b9ee5356db265412db39c4c341880f305fbf2c76

fix format | 2019-04-22 06:25:09 | 4a2b158913e5a9eb0d5c6fdfbf949a80fc1b2c6b

Rename default to perflib and experimental to default (#1282)

* Remove experimental from module names

* Remove experimental prefix, add perflib prefix:

* update docs | 2019-04-19 06:01:39 | 425a9f24deb72691b02cdc85f80d177c05afebc5

fix list | 2019-04-18 21:55:43 | 8e3f9d26e8d3555bf934b99ac062aabc3aba528f

fix broken master | 2019-04-10 15:00:30 | f067ae53e050c5f52f47237440a6ac7eee3ca94c

fix broken build due to typo | 2019-04-10 05:44:19 | 7d4ddb4ffe3c9b0f30a84848675452dded0d4115

Leaking information aligned below simple class name. (#1258)

Also fixed issue where extraString + exclusionString were showing after the squiggly line.

Before: 
``` 
┬
├─ java.lang.Thread
│                 Leaking: NO (it's a GC root)
│                 ↓ thread Thread.<Java Local>
│                                ~~~~~~~~~~~~~ (named 'Thread-4')
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                 Leaking: UNKNOWN
│                 ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                     ~~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) 
```
After: 
``` 
┬
├─ java.lang.Thread
│            Leaking: NO (it's a GC root)
│            ↓ thread Thread.<Java Local> (named 'Thread-4')
│                            ~~~~~~~~~~~~
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                         Leaking: UNKNOWN
│                         ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                              ~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) ``` | 2019-04-05 20:11:47 | a938855585c7cf2522ffbd143d4bb66a234eea66

Add share to Stack Overflow button when viewing a leak (#1252)

* Add share to Stack Overflow button when viewing a leak

* Add question tag, lengthen toast and fix build failure. | 2019-04-04 20:49:50 | 8724d2aaffc07904517a3b823867802ca43233ae

Check if serviceInfo.processName is null. When LeakCanary runs on a seperate process and that process for some reason does not have a assigned processName, then we will crash on a NullPointerException. Also a debug log explaining this. (#1225) | 2019-04-01 19:20:40 | 3efc43608ed71dc20b0ad1e0e80e33d15249666f

fix master broken | 2019-04-01 19:07:27 | fe42130029174681a708b7d8622412efbaf81e73

fix trailing spaces per checkstyle | 2019-03-29 22:34:58 | ff17f879ec92ec326f8b1c6b7b8d77a5266d6622

Fix GC Root bugs that missed leaks (#1168)

In Perflib, Snapshot.getGcRoots() only returns the GC roots from the first heap. Based on empirical evidence, it seems like Android has 4 heaps, and the GC Roots used to only be in the first heap, but more recent versions of Android have GC Roots in other heaps as well.

This means LeakCanary would sometimes show "No Leak Found" when there actually was a leak.

Fixes #1163 | 2019-01-10 23:32:27 | 64b6e5a41796ae1587c50c8cc860cea25f28f382

fix typo | 2018-10-17 00:43:01 | 044b1e4827bc71ec008dc3f7e43c78f58885f1e1

Fix LeakCanary toasting (#1116)

- Prior attempts to get it to work with the application context turned out to be buggy.
- This makes LeakCanary use whatever the current resumed activity is, if any.
- If there is no resumed activity, then the toast isn't displayed.

This supersedes #1080 | 2018-10-16 13:23:14 | 0e39e2eea79bc05bf7147a4074dd7163f7c401ff

fix the wrong word (#1111) | 2018-10-16 01:25:28 | 636b9b6c2b39c0c887c9ed78e904239db9bc131e

Merge pull request #1104 from IlyaGulya/bug/travis-ci-cache-fix

Fix travis caching and improve build time. | 2018-09-22 21:25:59 | 344728b906daf6d010f66bdf4ccc29ad8fedede5

Error prone 2.3.1 + suggested fix and specify version

See http://errorprone.info/bugpattern/StringSplitter | 2018-08-22 07:37:33 | a6b6960d73a1da9661f4e85254570bf5f867f954

Merge pull request #1089 from hzsweers/z/fixAnother

Quick followup to #1088 | 2018-08-22 03:15:15 | be973f5f5da6a3516aedab98e639690697617747

Merge pull request #1087 from Goddchen/patch-2

Updated german translation | 2018-08-20 13:52:47 | b43c279b3e1623c193e1dc81955527f70e93f822

Merge pull request #1063 from javmarina/patch-1

Fixed wrong versions in AndroidExcludedRefs | 2018-07-25 18:31:55 | 3b4ebe3e2571377f93e9a6976e021324502a0f78

Fixed wrong versions in AndroidExcludedRefs

Commit https://android.googlesource.com/platform/frameworks/base/+/27db46850b708070452c0ce49daf5f79503fbde6 introduced this issue. This commit was first included in Jelly Bean 4.3 (JELLY_BEAN_MR2), not Jelly Bean 4.1 (JELLY_BEAN)
Commit https://android.googlesource.com/platform/frameworks/base/+/5200e1cb07190a1f6874d72a4561064cad3ee3e0 fixes this issue and was first included in Oreo 8.0 (O). Nougat still has this memory leak. | 2018-07-24 18:24:59 | e4778b25f2c6e65ebc485d255e38586c7d45ec97

Merge pull request #1057 from square/py/ui_bug

Fix drawing of start line | 2018-07-20 22:21:19 | af96577a7d19e4df9f63d95fd9c3bfd2adcddb5d

Avoid Toast crashes

Showing a toast can crash on API 25 because the Window Manager can throw a BadTokenException when addView is called.

This change fixes it by configuring the toast manually and calling the window manager directly. This is based on https://github.com/pyricau/frenchtoast/blob/master/frenchtoast/src/main/java/frenchtoast/Mixture.java#L49 .

Fixes #844 | 2018-07-20 16:11:22 | c9ebc5cf5099c093bde5d3309b2692cb0e2016d8

Fixing setup bug | 2018-06-28 04:07:09 | 505933817cf6e2eb0dad4a78d4c7c35a072b9868

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

Update fundamentals-fixing-a-memory-leak.md (#1775)

Fixed typo in  fundamentals-fixing-a-memory-leak.md | 2020-03-16 17:56:58 | 7e8aab836e57ce9c3fcff537f3df66542939137a

Doc fixes and updates (#1744)

* Fixes to properly render recipes in MkDoc

* Bumped release date
Updated release doc | 2020-02-06 18:00:48 | 57057c636b816cd73f9b344a4201aa04a3a8cca8

[bugfix]AppWatcher manualInstall function not works bugfix (#1734)

* manualInstall config not enabled by default bugfix

* Make manualInstall config enable decided by isDebuggableBuild

* Make manualInstall config copy from existing customized config

* Make manualInstall config copy from existing customized config and set enabled to true forcely

* Make manualInstall config enable decided by InternalAppWatcher.isDebuggableBuild | 2020-02-04 03:30:50 | 00604fce8f86e3b8a9fe4ea2ea0e71fc1a74eb28

Merge pull request #1729 from square/py/fix_text

Fix helper text | 2020-01-24 19:53:15 | 825ac6242cde0a4c0488547d03e12a8df91a5f31

Fixed compilation issue by extracting example application to debug/release folders | 2019-10-09 01:29:24 | b9f1bf88c4b0ac9f0a91cc54638899d9c6ecb8e1

fix missing toString | 2020-01-04 01:28:33 | 47bad9fec441ea462129ece0c4f1125f578ba1ec

Use "x minutes ago" format for dates (#1675)

Also fixed some of the ordering (leaks types by counts desc, leaks by date desc)

Fixes #1672 | 2019-12-16 23:56:38 | 9fae7ed497e1760abe74cf2c22535fbd51f16331

Gradle plugin that puts proguard mapping file in the apk as an asset (#1589)

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Add unit tests for copy obfuscation file task

* Add recipe describing how to use the plugin

* Add plugin usage instruction

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Rebased onto master

* Add missing test dependencies

* Use lambda function instead of a collection for plugin configuration

* Post code review fixups

* Rename according to code review suggestions

* Fix detekt warning

* Pass empty file if mapping doesn't exist

* Improved recipe

* Code review fixups

* Fix CopyObfuscationMappingFileTask tests

* Code review fixes

* Fix detekt issues

* Add plugin tests

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Rebased onto master

* Use lambda function instead of a collection for plugin configuration

* Post code review fixups

* Rename according to code review suggestions

* Fix detekt warning

* Pass empty file if mapping doesn't exist

* Improved recipe

* Code review fixups

* Fix CopyObfuscationMappingFileTask tests

* Code review fixes

* Fix detekt issues

* Add plugin tests

* Rebased onto master

* Add one more test for plugin

* Try fixing CI tests by reading $ANDROID_HOME value

* Try fixing CI tests by hardcoding android sdk path

* Debugging CI failing test

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Post review fixes

* Debugging failing test on CI

* Try fixing CI tests by hardcoding android sdk path

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debug failing test on CI

* Debug failing test on CI

* Debug failing test on CI

* Debug failing test on CI

* Debug failing test on CI

* Debug failing test on CI

* Use trusty dist in travis config

* Debug failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debug failing CI test

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Prevent GradleRunner from running builds in a separate process

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* sni: modernize travis script. Solve emulator issue.
The build now uses build tools 28 which requires little adjustments
from the original recipe. In the future we can just use the original recipe
Original recipe: https://docs.travis-ci.com/user/languages/android/ | 2019-12-10 06:48:02 | 25a10fcd9f405235de63bd791ea4ae4eb5453924

Fix emulators  (#1667)

* Revert "Fix travis (#1665)"

This reverts commit 00b9bd32d535022800153f34916d4c4667d2a5cd.

* Fix emulators

A recent emulator update breaks a few CI projects.  This PR applies
a fix suggested by Google.

https://issuetracker.google.com/issues/145622251#comment33 | 2019-12-10 05:43:06 | b678e1508e9ef3618ce2c44d44ff733f350d4185

Fix travis (#1665)

According to [this tweet](https://twitter.com/colinwhi/status/1204102384458194944) from @colinrtwhite, Travis is failing due to a bug in the most recent version of the emulator. Pinning the emulator to an older version works around it. This commit steals the fix from https://github.com/coil-kt/coil/pull/195 . | 2019-12-09 19:54:40 | 00b9bd32d535022800153f34916d4c4667d2a5cd

Add ability to customize class used to detect tests (#1654)

Developers should not ship JUnit in their app, even in debug. However, some debug libraries unfortunately ship with JUnit as a dependency (e.g. see https://github.com/square/okhttp/issues/4667).

Developers can change the default to target a different class (e.g assertj) to help LeakCanary detect unit tests, by overriding a public string:

```
  <string name="leak_canary_test_class_name">org.assertj.core.api.Assertions</string>
```

Fixes #1649 | 2019-12-03 02:35:07 | dbbb969d59b066c3f9197ebc3863cc4f54dae5d2

fix changelog | 2019-11-25 19:32:41 | 50ae3ba7558e5a3f83fc11b4d17a281f072ff078

Fix bug in handling JNI roots (#1636)

* When adding support for native reference leaks (879ab7c) there was a missing bracket in an if/else branch that led to all native gc roots being ignored.

Fixes #1634 | 2019-11-25 19:00:23 | aff338544b5eebbb0b3c792c628cca11fa888373

fix typos | 2019-11-19 03:58:07 | 25b0df0da4f6e93dedcd90342c9cd1d0eab080ed

Merge pull request #1596 from fernandospr/patch-1

Update blog-articles.md | 2019-10-04 16:35:24 | e65236dae7c5827b7c9f64c19c8b1a16ea19e5a7

Merge pull request #1598 from PaulWoitaschek/patch-1

Fixed the german string placeholder for sharing the heap dump | 2019-10-03 16:16:23 | 029f28eefd7aa966520ac3649fd2688732c02867

Fix crash when pressing home from root screen (#1578)

This bug only happens on older Android devices.

Fixes #1555 | 2019-09-11 01:51:06 | 274f58f96e8de7dcd3000c06ba3e2b50e427747d

Merge pull request #1559 from bric3/fix-primitive-array-dump-skip

Fixes the primitive array dump record skipping | 2019-09-09 22:16:57 | c0fd4d812cb8d6c5723231e501c121da2af86f06

Parsing and applying proguard mapping during heap analysis (#1542)

* Parsing and applying proguard mapping during heap analysis

* Parsing and applying proguard mapping during heap analysis

* Rebased onto master

* Post review changes and updated shark-cli to support mapping files

* Post review fixes

* Moving proguard mapping reader out of the analyzer and formatting fixes | 2019-08-30 16:54:20 | 66182a52069d9be59d0af6220aa9afd74218aa9b

fix images | 2019-08-27 20:02:50 | 8f5030e9faa8690217e1bd436274a3de5b9d3fb3

fix image links in docs | 2019-08-27 19:59:20 | edca56a947278508350bfa5dd33d3fa10699001f

Merge pull request #1549 from Armaxis/patch-1

Added section about using Detekt to Contributing | 2019-08-24 22:16:26 | c923d14909888860a99d5899af17f5b52c9b000f

Revert "Replaced accessor with a call to setter to fix the build issue"

This reverts commit 82db0398 | 2019-08-17 02:21:08 | c570cb9b0fd7bd7fcc88c4d3b529df8837e98fdc

Replaced accessor with a call to setter to fix the build issue | 2019-08-16 04:32:25 | 82db039843303044f91d36ba7c43595ab59bacd5

fix typo | 2019-08-02 15:31:17 | a2452f61e78e689efb59adaf71384d74447578b0

Add / fix android inspectors (#1491)

* Added MortarScope and ViewRootImpl inspectors
* Fixed the ContextWrapper inspector

Fixes #1490
Fixes #1389 | 2019-07-25 22:50:48 | 915f8359690a016a09e66608a041454b9c8c52cb

Documenting public APIs (#1476)

Also fixed naming and other things that weren't right.

Fixes #1474 | 2019-07-19 06:57:25 | 41c69a5d424b4236114c5ce1b077afdad38e57a5

Adding CLI for LeakCanary (#1456)

Example usage:
```
./gradlew leakcanary-cli:run --args='analyze-process com.example.leakcanary'

./gradlew leakcanary-cli:run --args='dump-process com.example.leakcanary'

./gradlew leakcanary-cli:run --args='analyze-file /path/to/heapdump.hprof'
```

Also fixed a bug in ShortestPathFinder which did not ignore null references in object arrays | 2019-07-11 19:11:30 | eded1c96e84f37393857ba4de2580aec784b2391

Behavior change & bugfixes for retained count notification (#1433)

* Bugfix: when tapping the "dump heap" notification, if the GC found no retained instance we didn't use a distinct notification id to communicate that, and then soon after we'd dismiss the notification that let's the user know there is no retained instances on tap.
* Bugfix: we weren't running the GC when checking for retained instances and the count was under the threshold
* Change: we now update the notification and keep it around for 30 seconds when the count goes to 0
* Change: the "no retained instance" notification that shows on tap is identical and also auto dismisses after 30 seconds.
* Change: we're checking for retained references (and running the GC) every 2 seconds instead of 5.

Fixes #1427 | 2019-07-03 20:55:47 | 968083a915343d881bd63e40587c070fde543732

Update how to fix a leak | 2019-06-25 05:46:56 | 177e7fd12933d99eca7a526851c53e598a03bf90

Text rendering tests (#1378)

* Added test coverage for text rendering
* Fixed bug: labels were not rendered on the last node (leaking instance)
* Matched exclusions are now rendered on their own line

Fixes #1375
Fixes #1350 | 2019-06-04 09:32:11 | 1926cb1db73f9583e11c557dbf2e5d46e3896a6e

Thread name based exclusions (#1353)

* Readded support for exclusions of local variable based on thread names
* Renamed ThreadExclusion to JavaLocalExclusion
* Fixed bug: KeyedWeakReference was not always ignored because its superclass is has a weakly reachable exclusion.
* Fixed bug: all root nodes had the same visit order as the first non root enqueued item, making it possible for a non root node to be dequeued before we're done with all roots.
* Redded gc root sorting
* Added tests to cover all uncovered bugs
* Added support for parsing StackFrameRecord

Fixes #1339 | 2019-05-20 13:17:18 | 6c2ee609efda323e88a4964d31fc5a5f0532f776

Reachability => LeakStatus (#1340)

* Combined leaking information from inspectors to solving conflicts while keeping all reasons
* Made reason from view leak inspector more obvious, and added label data about internals
* Moved reachability into LeakTraceElement
* Reachability renamed to LeakNodeStatus and leaking / not leaking
* ReachabilityInspector and Labeler are now functions with type aliases

Related to #1336: should fix the crash, though it's still unclear why AppCompatButton was a gc root there. | 2019-05-07 14:56:59 | 01210bbbfaecb3bcb6057c62b2195366d3bfa4f9

Revamp notifications (#1335)

* New notification that shows the count of retained instances. Tapping it triggers a heap dump. Fixes #1325
* Notifications are now split into two channels: default for results, and low for everything else.
* New config options: LeakCanary.config.dumpHeapWhenDebugging (default false) and LeakCanary.config.retainedVisibleThreshold (default 5)
* Replaced notification int constants and timestamps with resource ids.
* Don't show background notifications in instant apps (#1197) | 2019-05-05 16:38:26 | b14d9bc9c0a87119137bc0998bdec9314186dfcf

Highlighting new leaks (#1334)

New leaks are leaks that have a leak group that doesn't exist in any prior analysis.

* The notification now reports the count of leaks, with a split of new, known, and won't fix.
* The analysis success screen shows new leaks
* Moved description prefixes to be computed rather than inserted in the DB

Fixes #1328 | 2019-05-05 09:37:38 | f9a0518d4ddd69b782b6302caa3e3039787038e4

LeakSentry can be disabled (#1332)

LeakCanary has an enabled config option. Default is on in debug builds off in release builds.

Fixes #1327 | 2019-05-04 17:52:47 | f74f60901f34c751e8b8798d626678aa6233c893

Revert "fix trailing spaces per checkstyle"

This reverts commit ff17f879ec92ec326f8b1c6b7b8d77a5266d6622. | 2019-05-04 08:04:21 | 03136ca7dc1680299d710f79ca885412a1564144

Add test coverage for heap analysis (#1329)

* Fixed bug when reachability inspectors conflicts (reachable should win and erase unreachable)
* Added back support for leaking instances being empty objects, strings, primitive arrays or any object that we otherwise don't follow to find shortest paths. | 2019-05-04 07:51:02 | 59558e655d537c7654c411eebfd840773a8b77c9

Introducing exclusion priority (#1317)

* Add segmented FIFO queue

Unified several queues into one segmented FIFO queue. This will enable us to add several levels of priority.

* Introducing exclusion priority

* "excludedLeak" is now known as "won't fix leak", which matches its reality better. It's a leak that is known and real yet we're not fixing.
* Exclusion.alwaysExclude is replaced with Exclusion.status, with 3 possible values: NEVER_REACHABLE, WONT_FIX_LEAK, WEAKLY_REACHABLE.
* The shortest path finder will now follow weak references after all other paths have been exhausted.
* Removed class exclusion, was confusing, replaced with less lazy approach of listing fields to exclude
* VIEWLOCATIONHOLDER_ROOT should not have been always excluded, fixed.

Fixes #1173 ... well kinda. Instead of "non leaking retained instances", LeakCanary will report weakly reachable traces. Not sure if that'll help but it's a foundation we can build on. | 2019-04-30 17:44:15 | b0eedc553995e354e2382b3378bf0348801cd3c5

AllFieldsLabeler & cleanups (#1316)

* Add new optional labeler that prints all fields (useful for debugging)
* Move deprecated AnalysisResult to perflib
* Made DefaultAnalysisResultListener an object | 2019-04-30 07:08:29 | b9ee5356db265412db39c4c341880f305fbf2c76

fix format | 2019-04-22 06:25:09 | 4a2b158913e5a9eb0d5c6fdfbf949a80fc1b2c6b

Rename default to perflib and experimental to default (#1282)

* Remove experimental from module names

* Remove experimental prefix, add perflib prefix:

* update docs | 2019-04-19 06:01:39 | 425a9f24deb72691b02cdc85f80d177c05afebc5

fix list | 2019-04-18 21:55:43 | 8e3f9d26e8d3555bf934b99ac062aabc3aba528f

fix broken master | 2019-04-10 15:00:30 | f067ae53e050c5f52f47237440a6ac7eee3ca94c

fix broken build due to typo | 2019-04-10 05:44:19 | 7d4ddb4ffe3c9b0f30a84848675452dded0d4115

Leaking information aligned below simple class name. (#1258)

Also fixed issue where extraString + exclusionString were showing after the squiggly line.

Before: 
``` 
┬
├─ java.lang.Thread
│                 Leaking: NO (it's a GC root)
│                 ↓ thread Thread.<Java Local>
│                                ~~~~~~~~~~~~~ (named 'Thread-4')
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                 Leaking: UNKNOWN
│                 ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                     ~~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) 
```
After: 
``` 
┬
├─ java.lang.Thread
│            Leaking: NO (it's a GC root)
│            ↓ thread Thread.<Java Local> (named 'Thread-4')
│                            ~~~~~~~~~~~~
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                         Leaking: UNKNOWN
│                         ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                              ~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) ``` | 2019-04-05 20:11:47 | a938855585c7cf2522ffbd143d4bb66a234eea66

Add share to Stack Overflow button when viewing a leak (#1252)

* Add share to Stack Overflow button when viewing a leak

* Add question tag, lengthen toast and fix build failure. | 2019-04-04 20:49:50 | 8724d2aaffc07904517a3b823867802ca43233ae

Check if serviceInfo.processName is null. When LeakCanary runs on a seperate process and that process for some reason does not have a assigned processName, then we will crash on a NullPointerException. Also a debug log explaining this. (#1225) | 2019-04-01 19:20:40 | 3efc43608ed71dc20b0ad1e0e80e33d15249666f

fix master broken | 2019-04-01 19:07:27 | fe42130029174681a708b7d8622412efbaf81e73

fix trailing spaces per checkstyle | 2019-03-29 22:34:58 | ff17f879ec92ec326f8b1c6b7b8d77a5266d6622

Fix GC Root bugs that missed leaks (#1168)

In Perflib, Snapshot.getGcRoots() only returns the GC roots from the first heap. Based on empirical evidence, it seems like Android has 4 heaps, and the GC Roots used to only be in the first heap, but more recent versions of Android have GC Roots in other heaps as well.

This means LeakCanary would sometimes show "No Leak Found" when there actually was a leak.

Fixes #1163 | 2019-01-10 23:32:27 | 64b6e5a41796ae1587c50c8cc860cea25f28f382

fix typo | 2018-10-17 00:43:01 | 044b1e4827bc71ec008dc3f7e43c78f58885f1e1

Fix LeakCanary toasting (#1116)

- Prior attempts to get it to work with the application context turned out to be buggy.
- This makes LeakCanary use whatever the current resumed activity is, if any.
- If there is no resumed activity, then the toast isn't displayed.

This supersedes #1080 | 2018-10-16 13:23:14 | 0e39e2eea79bc05bf7147a4074dd7163f7c401ff

fix the wrong word (#1111) | 2018-10-16 01:25:28 | 636b9b6c2b39c0c887c9ed78e904239db9bc131e

Merge pull request #1104 from IlyaGulya/bug/travis-ci-cache-fix

Fix travis caching and improve build time. | 2018-09-22 21:25:59 | 344728b906daf6d010f66bdf4ccc29ad8fedede5

Error prone 2.3.1 + suggested fix and specify version

See http://errorprone.info/bugpattern/StringSplitter | 2018-08-22 07:37:33 | a6b6960d73a1da9661f4e85254570bf5f867f954

Merge pull request #1089 from hzsweers/z/fixAnother

Quick followup to #1088 | 2018-08-22 03:15:15 | be973f5f5da6a3516aedab98e639690697617747

Merge pull request #1087 from Goddchen/patch-2

Updated german translation | 2018-08-20 13:52:47 | b43c279b3e1623c193e1dc81955527f70e93f822

Merge pull request #1063 from javmarina/patch-1

Fixed wrong versions in AndroidExcludedRefs | 2018-07-25 18:31:55 | 3b4ebe3e2571377f93e9a6976e021324502a0f78

Fixed wrong versions in AndroidExcludedRefs

Commit https://android.googlesource.com/platform/frameworks/base/+/27db46850b708070452c0ce49daf5f79503fbde6 introduced this issue. This commit was first included in Jelly Bean 4.3 (JELLY_BEAN_MR2), not Jelly Bean 4.1 (JELLY_BEAN)
Commit https://android.googlesource.com/platform/frameworks/base/+/5200e1cb07190a1f6874d72a4561064cad3ee3e0 fixes this issue and was first included in Oreo 8.0 (O). Nougat still has this memory leak. | 2018-07-24 18:24:59 | e4778b25f2c6e65ebc485d255e38586c7d45ec97

Merge pull request #1057 from square/py/ui_bug

Fix drawing of start line | 2018-07-20 22:21:19 | af96577a7d19e4df9f63d95fd9c3bfd2adcddb5d

Avoid Toast crashes

Showing a toast can crash on API 25 because the Window Manager can throw a BadTokenException when addView is called.

This change fixes it by configuring the toast manually and calling the window manager directly. This is based on https://github.com/pyricau/frenchtoast/blob/master/frenchtoast/src/main/java/frenchtoast/Mixture.java#L49 .

Fixes #844 | 2018-07-20 16:11:22 | c9ebc5cf5099c093bde5d3309b2692cb0e2016d8

Fixing setup bug | 2018-06-28 04:07:09 | 505933817cf6e2eb0dad4a78d4c7c35a072b9868

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

Doc fixes and updates (#1744)

* Fixes to properly render recipes in MkDoc

* Bumped release date
Updated release doc | 2020-02-06 18:00:48 | 57057c636b816cd73f9b344a4201aa04a3a8cca8

[bugfix]AppWatcher manualInstall function not works bugfix (#1734)

* manualInstall config not enabled by default bugfix

* Make manualInstall config enable decided by isDebuggableBuild

* Make manualInstall config copy from existing customized config

* Make manualInstall config copy from existing customized config and set enabled to true forcely

* Make manualInstall config enable decided by InternalAppWatcher.isDebuggableBuild | 2020-02-04 03:30:50 | 00604fce8f86e3b8a9fe4ea2ea0e71fc1a74eb28

Merge pull request #1729 from square/py/fix_text

Fix helper text | 2020-01-24 19:53:15 | 825ac6242cde0a4c0488547d03e12a8df91a5f31

Fixed compilation issue by extracting example application to debug/release folders | 2019-10-09 01:29:24 | b9f1bf88c4b0ac9f0a91cc54638899d9c6ecb8e1

fix missing toString | 2020-01-04 01:28:33 | 47bad9fec441ea462129ece0c4f1125f578ba1ec

Use "x minutes ago" format for dates (#1675)

Also fixed some of the ordering (leaks types by counts desc, leaks by date desc)

Fixes #1672 | 2019-12-16 23:56:38 | 9fae7ed497e1760abe74cf2c22535fbd51f16331

Gradle plugin that puts proguard mapping file in the apk as an asset (#1589)

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Add unit tests for copy obfuscation file task

* Add recipe describing how to use the plugin

* Add plugin usage instruction

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Rebased onto master

* Add missing test dependencies

* Use lambda function instead of a collection for plugin configuration

* Post code review fixups

* Rename according to code review suggestions

* Fix detekt warning

* Pass empty file if mapping doesn't exist

* Improved recipe

* Code review fixups

* Fix CopyObfuscationMappingFileTask tests

* Code review fixes

* Fix detekt issues

* Add plugin tests

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Rebased onto master

* Use lambda function instead of a collection for plugin configuration

* Post code review fixups

* Rename according to code review suggestions

* Fix detekt warning

* Pass empty file if mapping doesn't exist

* Improved recipe

* Code review fixups

* Fix CopyObfuscationMappingFileTask tests

* Code review fixes

* Fix detekt issues

* Add plugin tests

* Rebased onto master

* Add one more test for plugin

* Try fixing CI tests by reading $ANDROID_HOME value

* Try fixing CI tests by hardcoding android sdk path

* Debugging CI failing test

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Post review fixes

* Debugging failing test on CI

* Try fixing CI tests by hardcoding android sdk path

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debug failing test on CI

* Debug failing test on CI

* Debug failing test on CI

* Debug failing test on CI

* Debug failing test on CI

* Debug failing test on CI

* Use trusty dist in travis config

* Debug failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debug failing CI test

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Prevent GradleRunner from running builds in a separate process

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* sni: modernize travis script. Solve emulator issue.
The build now uses build tools 28 which requires little adjustments
from the original recipe. In the future we can just use the original recipe
Original recipe: https://docs.travis-ci.com/user/languages/android/ | 2019-12-10 06:48:02 | 25a10fcd9f405235de63bd791ea4ae4eb5453924

Fix emulators  (#1667)

* Revert "Fix travis (#1665)"

This reverts commit 00b9bd32d535022800153f34916d4c4667d2a5cd.

* Fix emulators

A recent emulator update breaks a few CI projects.  This PR applies
a fix suggested by Google.

https://issuetracker.google.com/issues/145622251#comment33 | 2019-12-10 05:43:06 | b678e1508e9ef3618ce2c44d44ff733f350d4185

Fix travis (#1665)

According to [this tweet](https://twitter.com/colinwhi/status/1204102384458194944) from @colinrtwhite, Travis is failing due to a bug in the most recent version of the emulator. Pinning the emulator to an older version works around it. This commit steals the fix from https://github.com/coil-kt/coil/pull/195 . | 2019-12-09 19:54:40 | 00b9bd32d535022800153f34916d4c4667d2a5cd

Add ability to customize class used to detect tests (#1654)

Developers should not ship JUnit in their app, even in debug. However, some debug libraries unfortunately ship with JUnit as a dependency (e.g. see https://github.com/square/okhttp/issues/4667).

Developers can change the default to target a different class (e.g assertj) to help LeakCanary detect unit tests, by overriding a public string:

```
  <string name="leak_canary_test_class_name">org.assertj.core.api.Assertions</string>
```

Fixes #1649 | 2019-12-03 02:35:07 | dbbb969d59b066c3f9197ebc3863cc4f54dae5d2

fix changelog | 2019-11-25 19:32:41 | 50ae3ba7558e5a3f83fc11b4d17a281f072ff078

Fix bug in handling JNI roots (#1636)

* When adding support for native reference leaks (879ab7c) there was a missing bracket in an if/else branch that led to all native gc roots being ignored.

Fixes #1634 | 2019-11-25 19:00:23 | aff338544b5eebbb0b3c792c628cca11fa888373

fix typos | 2019-11-19 03:58:07 | 25b0df0da4f6e93dedcd90342c9cd1d0eab080ed

Merge pull request #1596 from fernandospr/patch-1

Update blog-articles.md | 2019-10-04 16:35:24 | e65236dae7c5827b7c9f64c19c8b1a16ea19e5a7

Merge pull request #1598 from PaulWoitaschek/patch-1

Fixed the german string placeholder for sharing the heap dump | 2019-10-03 16:16:23 | 029f28eefd7aa966520ac3649fd2688732c02867

Fix crash when pressing home from root screen (#1578)

This bug only happens on older Android devices.

Fixes #1555 | 2019-09-11 01:51:06 | 274f58f96e8de7dcd3000c06ba3e2b50e427747d

Merge pull request #1559 from bric3/fix-primitive-array-dump-skip

Fixes the primitive array dump record skipping | 2019-09-09 22:16:57 | c0fd4d812cb8d6c5723231e501c121da2af86f06

Parsing and applying proguard mapping during heap analysis (#1542)

* Parsing and applying proguard mapping during heap analysis

* Parsing and applying proguard mapping during heap analysis

* Rebased onto master

* Post review changes and updated shark-cli to support mapping files

* Post review fixes

* Moving proguard mapping reader out of the analyzer and formatting fixes | 2019-08-30 16:54:20 | 66182a52069d9be59d0af6220aa9afd74218aa9b

fix images | 2019-08-27 20:02:50 | 8f5030e9faa8690217e1bd436274a3de5b9d3fb3

fix image links in docs | 2019-08-27 19:59:20 | edca56a947278508350bfa5dd33d3fa10699001f

Merge pull request #1549 from Armaxis/patch-1

Added section about using Detekt to Contributing | 2019-08-24 22:16:26 | c923d14909888860a99d5899af17f5b52c9b000f

Revert "Replaced accessor with a call to setter to fix the build issue"

This reverts commit 82db0398 | 2019-08-17 02:21:08 | c570cb9b0fd7bd7fcc88c4d3b529df8837e98fdc

Replaced accessor with a call to setter to fix the build issue | 2019-08-16 04:32:25 | 82db039843303044f91d36ba7c43595ab59bacd5

fix typo | 2019-08-02 15:31:17 | a2452f61e78e689efb59adaf71384d74447578b0

Add / fix android inspectors (#1491)

* Added MortarScope and ViewRootImpl inspectors
* Fixed the ContextWrapper inspector

Fixes #1490
Fixes #1389 | 2019-07-25 22:50:48 | 915f8359690a016a09e66608a041454b9c8c52cb

Documenting public APIs (#1476)

Also fixed naming and other things that weren't right.

Fixes #1474 | 2019-07-19 06:57:25 | 41c69a5d424b4236114c5ce1b077afdad38e57a5

Adding CLI for LeakCanary (#1456)

Example usage:
```
./gradlew leakcanary-cli:run --args='analyze-process com.example.leakcanary'

./gradlew leakcanary-cli:run --args='dump-process com.example.leakcanary'

./gradlew leakcanary-cli:run --args='analyze-file /path/to/heapdump.hprof'
```

Also fixed a bug in ShortestPathFinder which did not ignore null references in object arrays | 2019-07-11 19:11:30 | eded1c96e84f37393857ba4de2580aec784b2391

Behavior change & bugfixes for retained count notification (#1433)

* Bugfix: when tapping the "dump heap" notification, if the GC found no retained instance we didn't use a distinct notification id to communicate that, and then soon after we'd dismiss the notification that let's the user know there is no retained instances on tap.
* Bugfix: we weren't running the GC when checking for retained instances and the count was under the threshold
* Change: we now update the notification and keep it around for 30 seconds when the count goes to 0
* Change: the "no retained instance" notification that shows on tap is identical and also auto dismisses after 30 seconds.
* Change: we're checking for retained references (and running the GC) every 2 seconds instead of 5.

Fixes #1427 | 2019-07-03 20:55:47 | 968083a915343d881bd63e40587c070fde543732

Update how to fix a leak | 2019-06-25 05:46:56 | 177e7fd12933d99eca7a526851c53e598a03bf90

Text rendering tests (#1378)

* Added test coverage for text rendering
* Fixed bug: labels were not rendered on the last node (leaking instance)
* Matched exclusions are now rendered on their own line

Fixes #1375
Fixes #1350 | 2019-06-04 09:32:11 | 1926cb1db73f9583e11c557dbf2e5d46e3896a6e

Thread name based exclusions (#1353)

* Readded support for exclusions of local variable based on thread names
* Renamed ThreadExclusion to JavaLocalExclusion
* Fixed bug: KeyedWeakReference was not always ignored because its superclass is has a weakly reachable exclusion.
* Fixed bug: all root nodes had the same visit order as the first non root enqueued item, making it possible for a non root node to be dequeued before we're done with all roots.
* Redded gc root sorting
* Added tests to cover all uncovered bugs
* Added support for parsing StackFrameRecord

Fixes #1339 | 2019-05-20 13:17:18 | 6c2ee609efda323e88a4964d31fc5a5f0532f776

Reachability => LeakStatus (#1340)

* Combined leaking information from inspectors to solving conflicts while keeping all reasons
* Made reason from view leak inspector more obvious, and added label data about internals
* Moved reachability into LeakTraceElement
* Reachability renamed to LeakNodeStatus and leaking / not leaking
* ReachabilityInspector and Labeler are now functions with type aliases

Related to #1336: should fix the crash, though it's still unclear why AppCompatButton was a gc root there. | 2019-05-07 14:56:59 | 01210bbbfaecb3bcb6057c62b2195366d3bfa4f9

Revamp notifications (#1335)

* New notification that shows the count of retained instances. Tapping it triggers a heap dump. Fixes #1325
* Notifications are now split into two channels: default for results, and low for everything else.
* New config options: LeakCanary.config.dumpHeapWhenDebugging (default false) and LeakCanary.config.retainedVisibleThreshold (default 5)
* Replaced notification int constants and timestamps with resource ids.
* Don't show background notifications in instant apps (#1197) | 2019-05-05 16:38:26 | b14d9bc9c0a87119137bc0998bdec9314186dfcf

Highlighting new leaks (#1334)

New leaks are leaks that have a leak group that doesn't exist in any prior analysis.

* The notification now reports the count of leaks, with a split of new, known, and won't fix.
* The analysis success screen shows new leaks
* Moved description prefixes to be computed rather than inserted in the DB

Fixes #1328 | 2019-05-05 09:37:38 | f9a0518d4ddd69b782b6302caa3e3039787038e4

LeakSentry can be disabled (#1332)

LeakCanary has an enabled config option. Default is on in debug builds off in release builds.

Fixes #1327 | 2019-05-04 17:52:47 | f74f60901f34c751e8b8798d626678aa6233c893

Revert "fix trailing spaces per checkstyle"

This reverts commit ff17f879ec92ec326f8b1c6b7b8d77a5266d6622. | 2019-05-04 08:04:21 | 03136ca7dc1680299d710f79ca885412a1564144

Add test coverage for heap analysis (#1329)

* Fixed bug when reachability inspectors conflicts (reachable should win and erase unreachable)
* Added back support for leaking instances being empty objects, strings, primitive arrays or any object that we otherwise don't follow to find shortest paths. | 2019-05-04 07:51:02 | 59558e655d537c7654c411eebfd840773a8b77c9

Introducing exclusion priority (#1317)

* Add segmented FIFO queue

Unified several queues into one segmented FIFO queue. This will enable us to add several levels of priority.

* Introducing exclusion priority

* "excludedLeak" is now known as "won't fix leak", which matches its reality better. It's a leak that is known and real yet we're not fixing.
* Exclusion.alwaysExclude is replaced with Exclusion.status, with 3 possible values: NEVER_REACHABLE, WONT_FIX_LEAK, WEAKLY_REACHABLE.
* The shortest path finder will now follow weak references after all other paths have been exhausted.
* Removed class exclusion, was confusing, replaced with less lazy approach of listing fields to exclude
* VIEWLOCATIONHOLDER_ROOT should not have been always excluded, fixed.

Fixes #1173 ... well kinda. Instead of "non leaking retained instances", LeakCanary will report weakly reachable traces. Not sure if that'll help but it's a foundation we can build on. | 2019-04-30 17:44:15 | b0eedc553995e354e2382b3378bf0348801cd3c5

AllFieldsLabeler & cleanups (#1316)

* Add new optional labeler that prints all fields (useful for debugging)
* Move deprecated AnalysisResult to perflib
* Made DefaultAnalysisResultListener an object | 2019-04-30 07:08:29 | b9ee5356db265412db39c4c341880f305fbf2c76

fix format | 2019-04-22 06:25:09 | 4a2b158913e5a9eb0d5c6fdfbf949a80fc1b2c6b

Rename default to perflib and experimental to default (#1282)

* Remove experimental from module names

* Remove experimental prefix, add perflib prefix:

* update docs | 2019-04-19 06:01:39 | 425a9f24deb72691b02cdc85f80d177c05afebc5

fix list | 2019-04-18 21:55:43 | 8e3f9d26e8d3555bf934b99ac062aabc3aba528f

fix broken master | 2019-04-10 15:00:30 | f067ae53e050c5f52f47237440a6ac7eee3ca94c

fix broken build due to typo | 2019-04-10 05:44:19 | 7d4ddb4ffe3c9b0f30a84848675452dded0d4115

Leaking information aligned below simple class name. (#1258)

Also fixed issue where extraString + exclusionString were showing after the squiggly line.

Before: 
``` 
┬
├─ java.lang.Thread
│                 Leaking: NO (it's a GC root)
│                 ↓ thread Thread.<Java Local>
│                                ~~~~~~~~~~~~~ (named 'Thread-4')
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                 Leaking: UNKNOWN
│                 ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                     ~~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) 
```
After: 
``` 
┬
├─ java.lang.Thread
│            Leaking: NO (it's a GC root)
│            ↓ thread Thread.<Java Local> (named 'Thread-4')
│                            ~~~~~~~~~~~~
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                         Leaking: UNKNOWN
│                         ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                              ~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) ``` | 2019-04-05 20:11:47 | a938855585c7cf2522ffbd143d4bb66a234eea66

Add share to Stack Overflow button when viewing a leak (#1252)

* Add share to Stack Overflow button when viewing a leak

* Add question tag, lengthen toast and fix build failure. | 2019-04-04 20:49:50 | 8724d2aaffc07904517a3b823867802ca43233ae

Check if serviceInfo.processName is null. When LeakCanary runs on a seperate process and that process for some reason does not have a assigned processName, then we will crash on a NullPointerException. Also a debug log explaining this. (#1225) | 2019-04-01 19:20:40 | 3efc43608ed71dc20b0ad1e0e80e33d15249666f

fix master broken | 2019-04-01 19:07:27 | fe42130029174681a708b7d8622412efbaf81e73

fix trailing spaces per checkstyle | 2019-03-29 22:34:58 | ff17f879ec92ec326f8b1c6b7b8d77a5266d6622

Fix GC Root bugs that missed leaks (#1168)

In Perflib, Snapshot.getGcRoots() only returns the GC roots from the first heap. Based on empirical evidence, it seems like Android has 4 heaps, and the GC Roots used to only be in the first heap, but more recent versions of Android have GC Roots in other heaps as well.

This means LeakCanary would sometimes show "No Leak Found" when there actually was a leak.

Fixes #1163 | 2019-01-10 23:32:27 | 64b6e5a41796ae1587c50c8cc860cea25f28f382

fix typo | 2018-10-17 00:43:01 | 044b1e4827bc71ec008dc3f7e43c78f58885f1e1

Fix LeakCanary toasting (#1116)

- Prior attempts to get it to work with the application context turned out to be buggy.
- This makes LeakCanary use whatever the current resumed activity is, if any.
- If there is no resumed activity, then the toast isn't displayed.

This supersedes #1080 | 2018-10-16 13:23:14 | 0e39e2eea79bc05bf7147a4074dd7163f7c401ff

fix the wrong word (#1111) | 2018-10-16 01:25:28 | 636b9b6c2b39c0c887c9ed78e904239db9bc131e

Merge pull request #1104 from IlyaGulya/bug/travis-ci-cache-fix

Fix travis caching and improve build time. | 2018-09-22 21:25:59 | 344728b906daf6d010f66bdf4ccc29ad8fedede5

Error prone 2.3.1 + suggested fix and specify version

See http://errorprone.info/bugpattern/StringSplitter | 2018-08-22 07:37:33 | a6b6960d73a1da9661f4e85254570bf5f867f954

Merge pull request #1089 from hzsweers/z/fixAnother

Quick followup to #1088 | 2018-08-22 03:15:15 | be973f5f5da6a3516aedab98e639690697617747

Merge pull request #1087 from Goddchen/patch-2

Updated german translation | 2018-08-20 13:52:47 | b43c279b3e1623c193e1dc81955527f70e93f822

Merge pull request #1063 from javmarina/patch-1

Fixed wrong versions in AndroidExcludedRefs | 2018-07-25 18:31:55 | 3b4ebe3e2571377f93e9a6976e021324502a0f78

Fixed wrong versions in AndroidExcludedRefs

Commit https://android.googlesource.com/platform/frameworks/base/+/27db46850b708070452c0ce49daf5f79503fbde6 introduced this issue. This commit was first included in Jelly Bean 4.3 (JELLY_BEAN_MR2), not Jelly Bean 4.1 (JELLY_BEAN)
Commit https://android.googlesource.com/platform/frameworks/base/+/5200e1cb07190a1f6874d72a4561064cad3ee3e0 fixes this issue and was first included in Oreo 8.0 (O). Nougat still has this memory leak. | 2018-07-24 18:24:59 | e4778b25f2c6e65ebc485d255e38586c7d45ec97

Merge pull request #1057 from square/py/ui_bug

Fix drawing of start line | 2018-07-20 22:21:19 | af96577a7d19e4df9f63d95fd9c3bfd2adcddb5d

Avoid Toast crashes

Showing a toast can crash on API 25 because the Window Manager can throw a BadTokenException when addView is called.

This change fixes it by configuring the toast manually and calling the window manager directly. This is based on https://github.com/pyricau/frenchtoast/blob/master/frenchtoast/src/main/java/frenchtoast/Mixture.java#L49 .

Fixes #844 | 2018-07-20 16:11:22 | c9ebc5cf5099c093bde5d3309b2692cb0e2016d8

Fixing setup bug | 2018-06-28 04:07:09 | 505933817cf6e2eb0dad4a78d4c7c35a072b9868

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

Check if serviceInfo.processName is null. When LeakCanary runs on a seperate process and that process for some reason does not have a assigned processName, then we will crash on a NullPointerException. Also a debug log explaining this. (#1225) | 2019-04-01 19:20:40 | 3efc43608ed71dc20b0ad1e0e80e33d15249666f

fix master broken | 2019-04-01 19:07:27 | fe42130029174681a708b7d8622412efbaf81e73

Fix GC Root bugs that missed leaks (#1168)

In Perflib, Snapshot.getGcRoots() only returns the GC roots from the first heap. Based on empirical evidence, it seems like Android has 4 heaps, and the GC Roots used to only be in the first heap, but more recent versions of Android have GC Roots in other heaps as well.

This means LeakCanary would sometimes show "No Leak Found" when there actually was a leak.

Fixes #1163 | 2019-01-10 23:32:27 | 64b6e5a41796ae1587c50c8cc860cea25f28f382

fix typo | 2018-10-17 00:43:01 | 044b1e4827bc71ec008dc3f7e43c78f58885f1e1

Fix LeakCanary toasting (#1116)

- Prior attempts to get it to work with the application context turned out to be buggy.
- This makes LeakCanary use whatever the current resumed activity is, if any.
- If there is no resumed activity, then the toast isn't displayed.

This supersedes #1080 | 2018-10-16 13:23:14 | 0e39e2eea79bc05bf7147a4074dd7163f7c401ff

fix the wrong word (#1111) | 2018-10-16 01:25:28 | 636b9b6c2b39c0c887c9ed78e904239db9bc131e

Merge pull request #1104 from IlyaGulya/bug/travis-ci-cache-fix

Fix travis caching and improve build time. | 2018-09-22 21:25:59 | 344728b906daf6d010f66bdf4ccc29ad8fedede5

Error prone 2.3.1 + suggested fix and specify version

See http://errorprone.info/bugpattern/StringSplitter | 2018-08-22 07:37:33 | a6b6960d73a1da9661f4e85254570bf5f867f954

Merge pull request #1089 from hzsweers/z/fixAnother

Quick followup to #1088 | 2018-08-22 03:15:15 | be973f5f5da6a3516aedab98e639690697617747

Merge pull request #1087 from Goddchen/patch-2

Updated german translation | 2018-08-20 13:52:47 | b43c279b3e1623c193e1dc81955527f70e93f822

Merge pull request #1063 from javmarina/patch-1

Fixed wrong versions in AndroidExcludedRefs | 2018-07-25 18:31:55 | 3b4ebe3e2571377f93e9a6976e021324502a0f78

Fixed wrong versions in AndroidExcludedRefs

Commit https://android.googlesource.com/platform/frameworks/base/+/27db46850b708070452c0ce49daf5f79503fbde6 introduced this issue. This commit was first included in Jelly Bean 4.3 (JELLY_BEAN_MR2), not Jelly Bean 4.1 (JELLY_BEAN)
Commit https://android.googlesource.com/platform/frameworks/base/+/5200e1cb07190a1f6874d72a4561064cad3ee3e0 fixes this issue and was first included in Oreo 8.0 (O). Nougat still has this memory leak. | 2018-07-24 18:24:59 | e4778b25f2c6e65ebc485d255e38586c7d45ec97

Merge pull request #1057 from square/py/ui_bug

Fix drawing of start line | 2018-07-20 22:21:19 | af96577a7d19e4df9f63d95fd9c3bfd2adcddb5d

Avoid Toast crashes

Showing a toast can crash on API 25 because the Window Manager can throw a BadTokenException when addView is called.

This change fixes it by configuring the toast manually and calling the window manager directly. This is based on https://github.com/pyricau/frenchtoast/blob/master/frenchtoast/src/main/java/frenchtoast/Mixture.java#L49 .

Fixes #844 | 2018-07-20 16:11:22 | c9ebc5cf5099c093bde5d3309b2692cb0e2016d8

Fixing setup bug | 2018-06-28 04:07:09 | 505933817cf6e2eb0dad4a78d4c7c35a072b9868

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

fix broken master | 2019-04-10 15:00:30 | f067ae53e050c5f52f47237440a6ac7eee3ca94c

fix broken build due to typo | 2019-04-10 05:44:19 | 7d4ddb4ffe3c9b0f30a84848675452dded0d4115

Leaking information aligned below simple class name. (#1258)

Also fixed issue where extraString + exclusionString were showing after the squiggly line.

Before: 
``` 
┬
├─ java.lang.Thread
│                 Leaking: NO (it's a GC root)
│                 ↓ thread Thread.<Java Local>
│                                ~~~~~~~~~~~~~ (named 'Thread-4')
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                 Leaking: UNKNOWN
│                 ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                     ~~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) 
```
After: 
``` 
┬
├─ java.lang.Thread
│            Leaking: NO (it's a GC root)
│            ↓ thread Thread.<Java Local> (named 'Thread-4')
│                            ~~~~~~~~~~~~
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                         Leaking: UNKNOWN
│                         ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                              ~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) ``` | 2019-04-05 20:11:47 | a938855585c7cf2522ffbd143d4bb66a234eea66

Add share to Stack Overflow button when viewing a leak (#1252)

* Add share to Stack Overflow button when viewing a leak

* Add question tag, lengthen toast and fix build failure. | 2019-04-04 20:49:50 | 8724d2aaffc07904517a3b823867802ca43233ae

Check if serviceInfo.processName is null. When LeakCanary runs on a seperate process and that process for some reason does not have a assigned processName, then we will crash on a NullPointerException. Also a debug log explaining this. (#1225) | 2019-04-01 19:20:40 | 3efc43608ed71dc20b0ad1e0e80e33d15249666f

fix master broken | 2019-04-01 19:07:27 | fe42130029174681a708b7d8622412efbaf81e73

Fix GC Root bugs that missed leaks (#1168)

In Perflib, Snapshot.getGcRoots() only returns the GC roots from the first heap. Based on empirical evidence, it seems like Android has 4 heaps, and the GC Roots used to only be in the first heap, but more recent versions of Android have GC Roots in other heaps as well.

This means LeakCanary would sometimes show "No Leak Found" when there actually was a leak.

Fixes #1163 | 2019-01-10 23:32:27 | 64b6e5a41796ae1587c50c8cc860cea25f28f382

fix typo | 2018-10-17 00:43:01 | 044b1e4827bc71ec008dc3f7e43c78f58885f1e1

Fix LeakCanary toasting (#1116)

- Prior attempts to get it to work with the application context turned out to be buggy.
- This makes LeakCanary use whatever the current resumed activity is, if any.
- If there is no resumed activity, then the toast isn't displayed.

This supersedes #1080 | 2018-10-16 13:23:14 | 0e39e2eea79bc05bf7147a4074dd7163f7c401ff

fix the wrong word (#1111) | 2018-10-16 01:25:28 | 636b9b6c2b39c0c887c9ed78e904239db9bc131e

Merge pull request #1104 from IlyaGulya/bug/travis-ci-cache-fix

Fix travis caching and improve build time. | 2018-09-22 21:25:59 | 344728b906daf6d010f66bdf4ccc29ad8fedede5

Error prone 2.3.1 + suggested fix and specify version

See http://errorprone.info/bugpattern/StringSplitter | 2018-08-22 07:37:33 | a6b6960d73a1da9661f4e85254570bf5f867f954

Merge pull request #1089 from hzsweers/z/fixAnother

Quick followup to #1088 | 2018-08-22 03:15:15 | be973f5f5da6a3516aedab98e639690697617747

Merge pull request #1087 from Goddchen/patch-2

Updated german translation | 2018-08-20 13:52:47 | b43c279b3e1623c193e1dc81955527f70e93f822

Merge pull request #1063 from javmarina/patch-1

Fixed wrong versions in AndroidExcludedRefs | 2018-07-25 18:31:55 | 3b4ebe3e2571377f93e9a6976e021324502a0f78

Fixed wrong versions in AndroidExcludedRefs

Commit https://android.googlesource.com/platform/frameworks/base/+/27db46850b708070452c0ce49daf5f79503fbde6 introduced this issue. This commit was first included in Jelly Bean 4.3 (JELLY_BEAN_MR2), not Jelly Bean 4.1 (JELLY_BEAN)
Commit https://android.googlesource.com/platform/frameworks/base/+/5200e1cb07190a1f6874d72a4561064cad3ee3e0 fixes this issue and was first included in Oreo 8.0 (O). Nougat still has this memory leak. | 2018-07-24 18:24:59 | e4778b25f2c6e65ebc485d255e38586c7d45ec97

Merge pull request #1057 from square/py/ui_bug

Fix drawing of start line | 2018-07-20 22:21:19 | af96577a7d19e4df9f63d95fd9c3bfd2adcddb5d

Avoid Toast crashes

Showing a toast can crash on API 25 because the Window Manager can throw a BadTokenException when addView is called.

This change fixes it by configuring the toast manually and calling the window manager directly. This is based on https://github.com/pyricau/frenchtoast/blob/master/frenchtoast/src/main/java/frenchtoast/Mixture.java#L49 .

Fixes #844 | 2018-07-20 16:11:22 | c9ebc5cf5099c093bde5d3309b2692cb0e2016d8

Fixing setup bug | 2018-06-28 04:07:09 | 505933817cf6e2eb0dad4a78d4c7c35a072b9868

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

Update fundamentals-fixing-a-memory-leak.md (#1775)

Fixed typo in  fundamentals-fixing-a-memory-leak.md | 2020-03-16 17:56:58 | 7e8aab836e57ce9c3fcff537f3df66542939137a

Doc fixes and updates (#1744)

* Fixes to properly render recipes in MkDoc

* Bumped release date
Updated release doc | 2020-02-06 18:00:48 | 57057c636b816cd73f9b344a4201aa04a3a8cca8

[bugfix]AppWatcher manualInstall function not works bugfix (#1734)

* manualInstall config not enabled by default bugfix

* Make manualInstall config enable decided by isDebuggableBuild

* Make manualInstall config copy from existing customized config

* Make manualInstall config copy from existing customized config and set enabled to true forcely

* Make manualInstall config enable decided by InternalAppWatcher.isDebuggableBuild | 2020-02-04 03:30:50 | 00604fce8f86e3b8a9fe4ea2ea0e71fc1a74eb28

Merge pull request #1729 from square/py/fix_text

Fix helper text | 2020-01-24 19:53:15 | 825ac6242cde0a4c0488547d03e12a8df91a5f31

Fixed compilation issue by extracting example application to debug/release folders | 2019-10-09 01:29:24 | b9f1bf88c4b0ac9f0a91cc54638899d9c6ecb8e1

fix missing toString | 2020-01-04 01:28:33 | 47bad9fec441ea462129ece0c4f1125f578ba1ec

Use "x minutes ago" format for dates (#1675)

Also fixed some of the ordering (leaks types by counts desc, leaks by date desc)

Fixes #1672 | 2019-12-16 23:56:38 | 9fae7ed497e1760abe74cf2c22535fbd51f16331

Gradle plugin that puts proguard mapping file in the apk as an asset (#1589)

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Add unit tests for copy obfuscation file task

* Add recipe describing how to use the plugin

* Add plugin usage instruction

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Rebased onto master

* Add missing test dependencies

* Use lambda function instead of a collection for plugin configuration

* Post code review fixups

* Rename according to code review suggestions

* Fix detekt warning

* Pass empty file if mapping doesn't exist

* Improved recipe

* Code review fixups

* Fix CopyObfuscationMappingFileTask tests

* Code review fixes

* Fix detekt issues

* Add plugin tests

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Rebased onto master

* Use lambda function instead of a collection for plugin configuration

* Post code review fixups

* Rename according to code review suggestions

* Fix detekt warning

* Pass empty file if mapping doesn't exist

* Improved recipe

* Code review fixups

* Fix CopyObfuscationMappingFileTask tests

* Code review fixes

* Fix detekt issues

* Add plugin tests

* Rebased onto master

* Add one more test for plugin

* Try fixing CI tests by reading $ANDROID_HOME value

* Try fixing CI tests by hardcoding android sdk path

* Debugging CI failing test

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Post review fixes

* Debugging failing test on CI

* Try fixing CI tests by hardcoding android sdk path

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debug failing test on CI

* Debug failing test on CI

* Debug failing test on CI

* Debug failing test on CI

* Debug failing test on CI

* Debug failing test on CI

* Use trusty dist in travis config

* Debug failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debug failing CI test

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Prevent GradleRunner from running builds in a separate process

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* sni: modernize travis script. Solve emulator issue.
The build now uses build tools 28 which requires little adjustments
from the original recipe. In the future we can just use the original recipe
Original recipe: https://docs.travis-ci.com/user/languages/android/ | 2019-12-10 06:48:02 | 25a10fcd9f405235de63bd791ea4ae4eb5453924

Fix emulators  (#1667)

* Revert "Fix travis (#1665)"

This reverts commit 00b9bd32d535022800153f34916d4c4667d2a5cd.

* Fix emulators

A recent emulator update breaks a few CI projects.  This PR applies
a fix suggested by Google.

https://issuetracker.google.com/issues/145622251#comment33 | 2019-12-10 05:43:06 | b678e1508e9ef3618ce2c44d44ff733f350d4185

Fix travis (#1665)

According to [this tweet](https://twitter.com/colinwhi/status/1204102384458194944) from @colinrtwhite, Travis is failing due to a bug in the most recent version of the emulator. Pinning the emulator to an older version works around it. This commit steals the fix from https://github.com/coil-kt/coil/pull/195 . | 2019-12-09 19:54:40 | 00b9bd32d535022800153f34916d4c4667d2a5cd

Add ability to customize class used to detect tests (#1654)

Developers should not ship JUnit in their app, even in debug. However, some debug libraries unfortunately ship with JUnit as a dependency (e.g. see https://github.com/square/okhttp/issues/4667).

Developers can change the default to target a different class (e.g assertj) to help LeakCanary detect unit tests, by overriding a public string:

```
  <string name="leak_canary_test_class_name">org.assertj.core.api.Assertions</string>
```

Fixes #1649 | 2019-12-03 02:35:07 | dbbb969d59b066c3f9197ebc3863cc4f54dae5d2

fix changelog | 2019-11-25 19:32:41 | 50ae3ba7558e5a3f83fc11b4d17a281f072ff078

Fix bug in handling JNI roots (#1636)

* When adding support for native reference leaks (879ab7c) there was a missing bracket in an if/else branch that led to all native gc roots being ignored.

Fixes #1634 | 2019-11-25 19:00:23 | aff338544b5eebbb0b3c792c628cca11fa888373

fix typos | 2019-11-19 03:58:07 | 25b0df0da4f6e93dedcd90342c9cd1d0eab080ed

Merge pull request #1596 from fernandospr/patch-1

Update blog-articles.md | 2019-10-04 16:35:24 | e65236dae7c5827b7c9f64c19c8b1a16ea19e5a7

Merge pull request #1598 from PaulWoitaschek/patch-1

Fixed the german string placeholder for sharing the heap dump | 2019-10-03 16:16:23 | 029f28eefd7aa966520ac3649fd2688732c02867

Fix crash when pressing home from root screen (#1578)

This bug only happens on older Android devices.

Fixes #1555 | 2019-09-11 01:51:06 | 274f58f96e8de7dcd3000c06ba3e2b50e427747d

Merge pull request #1559 from bric3/fix-primitive-array-dump-skip

Fixes the primitive array dump record skipping | 2019-09-09 22:16:57 | c0fd4d812cb8d6c5723231e501c121da2af86f06

Parsing and applying proguard mapping during heap analysis (#1542)

* Parsing and applying proguard mapping during heap analysis

* Parsing and applying proguard mapping during heap analysis

* Rebased onto master

* Post review changes and updated shark-cli to support mapping files

* Post review fixes

* Moving proguard mapping reader out of the analyzer and formatting fixes | 2019-08-30 16:54:20 | 66182a52069d9be59d0af6220aa9afd74218aa9b

fix images | 2019-08-27 20:02:50 | 8f5030e9faa8690217e1bd436274a3de5b9d3fb3

fix image links in docs | 2019-08-27 19:59:20 | edca56a947278508350bfa5dd33d3fa10699001f

Merge pull request #1549 from Armaxis/patch-1

Added section about using Detekt to Contributing | 2019-08-24 22:16:26 | c923d14909888860a99d5899af17f5b52c9b000f

Revert "Replaced accessor with a call to setter to fix the build issue"

This reverts commit 82db0398 | 2019-08-17 02:21:08 | c570cb9b0fd7bd7fcc88c4d3b529df8837e98fdc

Replaced accessor with a call to setter to fix the build issue | 2019-08-16 04:32:25 | 82db039843303044f91d36ba7c43595ab59bacd5

fix typo | 2019-08-02 15:31:17 | a2452f61e78e689efb59adaf71384d74447578b0

Add / fix android inspectors (#1491)

* Added MortarScope and ViewRootImpl inspectors
* Fixed the ContextWrapper inspector

Fixes #1490
Fixes #1389 | 2019-07-25 22:50:48 | 915f8359690a016a09e66608a041454b9c8c52cb

Documenting public APIs (#1476)

Also fixed naming and other things that weren't right.

Fixes #1474 | 2019-07-19 06:57:25 | 41c69a5d424b4236114c5ce1b077afdad38e57a5

Adding CLI for LeakCanary (#1456)

Example usage:
```
./gradlew leakcanary-cli:run --args='analyze-process com.example.leakcanary'

./gradlew leakcanary-cli:run --args='dump-process com.example.leakcanary'

./gradlew leakcanary-cli:run --args='analyze-file /path/to/heapdump.hprof'
```

Also fixed a bug in ShortestPathFinder which did not ignore null references in object arrays | 2019-07-11 19:11:30 | eded1c96e84f37393857ba4de2580aec784b2391

Behavior change & bugfixes for retained count notification (#1433)

* Bugfix: when tapping the "dump heap" notification, if the GC found no retained instance we didn't use a distinct notification id to communicate that, and then soon after we'd dismiss the notification that let's the user know there is no retained instances on tap.
* Bugfix: we weren't running the GC when checking for retained instances and the count was under the threshold
* Change: we now update the notification and keep it around for 30 seconds when the count goes to 0
* Change: the "no retained instance" notification that shows on tap is identical and also auto dismisses after 30 seconds.
* Change: we're checking for retained references (and running the GC) every 2 seconds instead of 5.

Fixes #1427 | 2019-07-03 20:55:47 | 968083a915343d881bd63e40587c070fde543732

Update how to fix a leak | 2019-06-25 05:46:56 | 177e7fd12933d99eca7a526851c53e598a03bf90

Text rendering tests (#1378)

* Added test coverage for text rendering
* Fixed bug: labels were not rendered on the last node (leaking instance)
* Matched exclusions are now rendered on their own line

Fixes #1375
Fixes #1350 | 2019-06-04 09:32:11 | 1926cb1db73f9583e11c557dbf2e5d46e3896a6e

Thread name based exclusions (#1353)

* Readded support for exclusions of local variable based on thread names
* Renamed ThreadExclusion to JavaLocalExclusion
* Fixed bug: KeyedWeakReference was not always ignored because its superclass is has a weakly reachable exclusion.
* Fixed bug: all root nodes had the same visit order as the first non root enqueued item, making it possible for a non root node to be dequeued before we're done with all roots.
* Redded gc root sorting
* Added tests to cover all uncovered bugs
* Added support for parsing StackFrameRecord

Fixes #1339 | 2019-05-20 13:17:18 | 6c2ee609efda323e88a4964d31fc5a5f0532f776

Reachability => LeakStatus (#1340)

* Combined leaking information from inspectors to solving conflicts while keeping all reasons
* Made reason from view leak inspector more obvious, and added label data about internals
* Moved reachability into LeakTraceElement
* Reachability renamed to LeakNodeStatus and leaking / not leaking
* ReachabilityInspector and Labeler are now functions with type aliases

Related to #1336: should fix the crash, though it's still unclear why AppCompatButton was a gc root there. | 2019-05-07 14:56:59 | 01210bbbfaecb3bcb6057c62b2195366d3bfa4f9

Revamp notifications (#1335)

* New notification that shows the count of retained instances. Tapping it triggers a heap dump. Fixes #1325
* Notifications are now split into two channels: default for results, and low for everything else.
* New config options: LeakCanary.config.dumpHeapWhenDebugging (default false) and LeakCanary.config.retainedVisibleThreshold (default 5)
* Replaced notification int constants and timestamps with resource ids.
* Don't show background notifications in instant apps (#1197) | 2019-05-05 16:38:26 | b14d9bc9c0a87119137bc0998bdec9314186dfcf

Highlighting new leaks (#1334)

New leaks are leaks that have a leak group that doesn't exist in any prior analysis.

* The notification now reports the count of leaks, with a split of new, known, and won't fix.
* The analysis success screen shows new leaks
* Moved description prefixes to be computed rather than inserted in the DB

Fixes #1328 | 2019-05-05 09:37:38 | f9a0518d4ddd69b782b6302caa3e3039787038e4

LeakSentry can be disabled (#1332)

LeakCanary has an enabled config option. Default is on in debug builds off in release builds.

Fixes #1327 | 2019-05-04 17:52:47 | f74f60901f34c751e8b8798d626678aa6233c893

Revert "fix trailing spaces per checkstyle"

This reverts commit ff17f879ec92ec326f8b1c6b7b8d77a5266d6622. | 2019-05-04 08:04:21 | 03136ca7dc1680299d710f79ca885412a1564144

Add test coverage for heap analysis (#1329)

* Fixed bug when reachability inspectors conflicts (reachable should win and erase unreachable)
* Added back support for leaking instances being empty objects, strings, primitive arrays or any object that we otherwise don't follow to find shortest paths. | 2019-05-04 07:51:02 | 59558e655d537c7654c411eebfd840773a8b77c9

Introducing exclusion priority (#1317)

* Add segmented FIFO queue

Unified several queues into one segmented FIFO queue. This will enable us to add several levels of priority.

* Introducing exclusion priority

* "excludedLeak" is now known as "won't fix leak", which matches its reality better. It's a leak that is known and real yet we're not fixing.
* Exclusion.alwaysExclude is replaced with Exclusion.status, with 3 possible values: NEVER_REACHABLE, WONT_FIX_LEAK, WEAKLY_REACHABLE.
* The shortest path finder will now follow weak references after all other paths have been exhausted.
* Removed class exclusion, was confusing, replaced with less lazy approach of listing fields to exclude
* VIEWLOCATIONHOLDER_ROOT should not have been always excluded, fixed.

Fixes #1173 ... well kinda. Instead of "non leaking retained instances", LeakCanary will report weakly reachable traces. Not sure if that'll help but it's a foundation we can build on. | 2019-04-30 17:44:15 | b0eedc553995e354e2382b3378bf0348801cd3c5

AllFieldsLabeler & cleanups (#1316)

* Add new optional labeler that prints all fields (useful for debugging)
* Move deprecated AnalysisResult to perflib
* Made DefaultAnalysisResultListener an object | 2019-04-30 07:08:29 | b9ee5356db265412db39c4c341880f305fbf2c76

fix format | 2019-04-22 06:25:09 | 4a2b158913e5a9eb0d5c6fdfbf949a80fc1b2c6b

Rename default to perflib and experimental to default (#1282)

* Remove experimental from module names

* Remove experimental prefix, add perflib prefix:

* update docs | 2019-04-19 06:01:39 | 425a9f24deb72691b02cdc85f80d177c05afebc5

fix list | 2019-04-18 21:55:43 | 8e3f9d26e8d3555bf934b99ac062aabc3aba528f

fix broken master | 2019-04-10 15:00:30 | f067ae53e050c5f52f47237440a6ac7eee3ca94c

fix broken build due to typo | 2019-04-10 05:44:19 | 7d4ddb4ffe3c9b0f30a84848675452dded0d4115

Leaking information aligned below simple class name. (#1258)

Also fixed issue where extraString + exclusionString were showing after the squiggly line.

Before: 
``` 
┬
├─ java.lang.Thread
│                 Leaking: NO (it's a GC root)
│                 ↓ thread Thread.<Java Local>
│                                ~~~~~~~~~~~~~ (named 'Thread-4')
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                 Leaking: UNKNOWN
│                 ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                     ~~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) 
```
After: 
``` 
┬
├─ java.lang.Thread
│            Leaking: NO (it's a GC root)
│            ↓ thread Thread.<Java Local> (named 'Thread-4')
│                            ~~~~~~~~~~~~
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                         Leaking: UNKNOWN
│                         ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                              ~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) ``` | 2019-04-05 20:11:47 | a938855585c7cf2522ffbd143d4bb66a234eea66

Add share to Stack Overflow button when viewing a leak (#1252)

* Add share to Stack Overflow button when viewing a leak

* Add question tag, lengthen toast and fix build failure. | 2019-04-04 20:49:50 | 8724d2aaffc07904517a3b823867802ca43233ae

Check if serviceInfo.processName is null. When LeakCanary runs on a seperate process and that process for some reason does not have a assigned processName, then we will crash on a NullPointerException. Also a debug log explaining this. (#1225) | 2019-04-01 19:20:40 | 3efc43608ed71dc20b0ad1e0e80e33d15249666f

fix master broken | 2019-04-01 19:07:27 | fe42130029174681a708b7d8622412efbaf81e73

fix trailing spaces per checkstyle | 2019-03-29 22:34:58 | ff17f879ec92ec326f8b1c6b7b8d77a5266d6622

Fix GC Root bugs that missed leaks (#1168)

In Perflib, Snapshot.getGcRoots() only returns the GC roots from the first heap. Based on empirical evidence, it seems like Android has 4 heaps, and the GC Roots used to only be in the first heap, but more recent versions of Android have GC Roots in other heaps as well.

This means LeakCanary would sometimes show "No Leak Found" when there actually was a leak.

Fixes #1163 | 2019-01-10 23:32:27 | 64b6e5a41796ae1587c50c8cc860cea25f28f382

fix typo | 2018-10-17 00:43:01 | 044b1e4827bc71ec008dc3f7e43c78f58885f1e1

Fix LeakCanary toasting (#1116)

- Prior attempts to get it to work with the application context turned out to be buggy.
- This makes LeakCanary use whatever the current resumed activity is, if any.
- If there is no resumed activity, then the toast isn't displayed.

This supersedes #1080 | 2018-10-16 13:23:14 | 0e39e2eea79bc05bf7147a4074dd7163f7c401ff

fix the wrong word (#1111) | 2018-10-16 01:25:28 | 636b9b6c2b39c0c887c9ed78e904239db9bc131e

Merge pull request #1104 from IlyaGulya/bug/travis-ci-cache-fix

Fix travis caching and improve build time. | 2018-09-22 21:25:59 | 344728b906daf6d010f66bdf4ccc29ad8fedede5

Error prone 2.3.1 + suggested fix and specify version

See http://errorprone.info/bugpattern/StringSplitter | 2018-08-22 07:37:33 | a6b6960d73a1da9661f4e85254570bf5f867f954

Merge pull request #1089 from hzsweers/z/fixAnother

Quick followup to #1088 | 2018-08-22 03:15:15 | be973f5f5da6a3516aedab98e639690697617747

Merge pull request #1087 from Goddchen/patch-2

Updated german translation | 2018-08-20 13:52:47 | b43c279b3e1623c193e1dc81955527f70e93f822

Merge pull request #1063 from javmarina/patch-1

Fixed wrong versions in AndroidExcludedRefs | 2018-07-25 18:31:55 | 3b4ebe3e2571377f93e9a6976e021324502a0f78

Fixed wrong versions in AndroidExcludedRefs

Commit https://android.googlesource.com/platform/frameworks/base/+/27db46850b708070452c0ce49daf5f79503fbde6 introduced this issue. This commit was first included in Jelly Bean 4.3 (JELLY_BEAN_MR2), not Jelly Bean 4.1 (JELLY_BEAN)
Commit https://android.googlesource.com/platform/frameworks/base/+/5200e1cb07190a1f6874d72a4561064cad3ee3e0 fixes this issue and was first included in Oreo 8.0 (O). Nougat still has this memory leak. | 2018-07-24 18:24:59 | e4778b25f2c6e65ebc485d255e38586c7d45ec97

Merge pull request #1057 from square/py/ui_bug

Fix drawing of start line | 2018-07-20 22:21:19 | af96577a7d19e4df9f63d95fd9c3bfd2adcddb5d

Avoid Toast crashes

Showing a toast can crash on API 25 because the Window Manager can throw a BadTokenException when addView is called.

This change fixes it by configuring the toast manually and calling the window manager directly. This is based on https://github.com/pyricau/frenchtoast/blob/master/frenchtoast/src/main/java/frenchtoast/Mixture.java#L49 .

Fixes #844 | 2018-07-20 16:11:22 | c9ebc5cf5099c093bde5d3309b2692cb0e2016d8

Fixing setup bug | 2018-06-28 04:07:09 | 505933817cf6e2eb0dad4a78d4c7c35a072b9868

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

AllFieldsLabeler & cleanups

* Add new optional labeler that prints all fields (useful for debugging)
* Move deprecated AnalysisResult to perflib
* Made DefaultAnalysisResultListener an object | 2019-04-30 07:07:40 | dbdf94905a65c5aae786604650aa40ae7df79948

fix format | 2019-04-22 06:25:09 | 4a2b158913e5a9eb0d5c6fdfbf949a80fc1b2c6b

Rename default to perflib and experimental to default (#1282)

* Remove experimental from module names

* Remove experimental prefix, add perflib prefix:

* update docs | 2019-04-19 06:01:39 | 425a9f24deb72691b02cdc85f80d177c05afebc5

fix list | 2019-04-18 21:55:43 | 8e3f9d26e8d3555bf934b99ac062aabc3aba528f

fix broken master | 2019-04-10 15:00:30 | f067ae53e050c5f52f47237440a6ac7eee3ca94c

fix broken build due to typo | 2019-04-10 05:44:19 | 7d4ddb4ffe3c9b0f30a84848675452dded0d4115

Leaking information aligned below simple class name. (#1258)

Also fixed issue where extraString + exclusionString were showing after the squiggly line.

Before: 
``` 
┬
├─ java.lang.Thread
│                 Leaking: NO (it's a GC root)
│                 ↓ thread Thread.<Java Local>
│                                ~~~~~~~~~~~~~ (named 'Thread-4')
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                 Leaking: UNKNOWN
│                 ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                     ~~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) 
```
After: 
``` 
┬
├─ java.lang.Thread
│            Leaking: NO (it's a GC root)
│            ↓ thread Thread.<Java Local> (named 'Thread-4')
│                            ~~~~~~~~~~~~
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                         Leaking: UNKNOWN
│                         ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                              ~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) ``` | 2019-04-05 20:11:47 | a938855585c7cf2522ffbd143d4bb66a234eea66

Add share to Stack Overflow button when viewing a leak (#1252)

* Add share to Stack Overflow button when viewing a leak

* Add question tag, lengthen toast and fix build failure. | 2019-04-04 20:49:50 | 8724d2aaffc07904517a3b823867802ca43233ae

Check if serviceInfo.processName is null. When LeakCanary runs on a seperate process and that process for some reason does not have a assigned processName, then we will crash on a NullPointerException. Also a debug log explaining this. (#1225) | 2019-04-01 19:20:40 | 3efc43608ed71dc20b0ad1e0e80e33d15249666f

fix master broken | 2019-04-01 19:07:27 | fe42130029174681a708b7d8622412efbaf81e73

Fix GC Root bugs that missed leaks (#1168)

In Perflib, Snapshot.getGcRoots() only returns the GC roots from the first heap. Based on empirical evidence, it seems like Android has 4 heaps, and the GC Roots used to only be in the first heap, but more recent versions of Android have GC Roots in other heaps as well.

This means LeakCanary would sometimes show "No Leak Found" when there actually was a leak.

Fixes #1163 | 2019-01-10 23:32:27 | 64b6e5a41796ae1587c50c8cc860cea25f28f382

fix typo | 2018-10-17 00:43:01 | 044b1e4827bc71ec008dc3f7e43c78f58885f1e1

Fix LeakCanary toasting (#1116)

- Prior attempts to get it to work with the application context turned out to be buggy.
- This makes LeakCanary use whatever the current resumed activity is, if any.
- If there is no resumed activity, then the toast isn't displayed.

This supersedes #1080 | 2018-10-16 13:23:14 | 0e39e2eea79bc05bf7147a4074dd7163f7c401ff

fix the wrong word (#1111) | 2018-10-16 01:25:28 | 636b9b6c2b39c0c887c9ed78e904239db9bc131e

Merge pull request #1104 from IlyaGulya/bug/travis-ci-cache-fix

Fix travis caching and improve build time. | 2018-09-22 21:25:59 | 344728b906daf6d010f66bdf4ccc29ad8fedede5

Error prone 2.3.1 + suggested fix and specify version

See http://errorprone.info/bugpattern/StringSplitter | 2018-08-22 07:37:33 | a6b6960d73a1da9661f4e85254570bf5f867f954

Merge pull request #1089 from hzsweers/z/fixAnother

Quick followup to #1088 | 2018-08-22 03:15:15 | be973f5f5da6a3516aedab98e639690697617747

Merge pull request #1087 from Goddchen/patch-2

Updated german translation | 2018-08-20 13:52:47 | b43c279b3e1623c193e1dc81955527f70e93f822

Merge pull request #1063 from javmarina/patch-1

Fixed wrong versions in AndroidExcludedRefs | 2018-07-25 18:31:55 | 3b4ebe3e2571377f93e9a6976e021324502a0f78

Fixed wrong versions in AndroidExcludedRefs

Commit https://android.googlesource.com/platform/frameworks/base/+/27db46850b708070452c0ce49daf5f79503fbde6 introduced this issue. This commit was first included in Jelly Bean 4.3 (JELLY_BEAN_MR2), not Jelly Bean 4.1 (JELLY_BEAN)
Commit https://android.googlesource.com/platform/frameworks/base/+/5200e1cb07190a1f6874d72a4561064cad3ee3e0 fixes this issue and was first included in Oreo 8.0 (O). Nougat still has this memory leak. | 2018-07-24 18:24:59 | e4778b25f2c6e65ebc485d255e38586c7d45ec97

Merge pull request #1057 from square/py/ui_bug

Fix drawing of start line | 2018-07-20 22:21:19 | af96577a7d19e4df9f63d95fd9c3bfd2adcddb5d

Avoid Toast crashes

Showing a toast can crash on API 25 because the Window Manager can throw a BadTokenException when addView is called.

This change fixes it by configuring the toast manually and calling the window manager directly. This is based on https://github.com/pyricau/frenchtoast/blob/master/frenchtoast/src/main/java/frenchtoast/Mixture.java#L49 .

Fixes #844 | 2018-07-20 16:11:22 | c9ebc5cf5099c093bde5d3309b2692cb0e2016d8

Fixing setup bug | 2018-06-28 04:07:09 | 505933817cf6e2eb0dad4a78d4c7c35a072b9868

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

fix typo | 2019-08-02 15:31:17 | a2452f61e78e689efb59adaf71384d74447578b0

Add / fix android inspectors (#1491)

* Added MortarScope and ViewRootImpl inspectors
* Fixed the ContextWrapper inspector

Fixes #1490
Fixes #1389 | 2019-07-25 22:50:48 | 915f8359690a016a09e66608a041454b9c8c52cb

Documenting public APIs (#1476)

Also fixed naming and other things that weren't right.

Fixes #1474 | 2019-07-19 06:57:25 | 41c69a5d424b4236114c5ce1b077afdad38e57a5

Adding CLI for LeakCanary (#1456)

Example usage:
```
./gradlew leakcanary-cli:run --args='analyze-process com.example.leakcanary'

./gradlew leakcanary-cli:run --args='dump-process com.example.leakcanary'

./gradlew leakcanary-cli:run --args='analyze-file /path/to/heapdump.hprof'
```

Also fixed a bug in ShortestPathFinder which did not ignore null references in object arrays | 2019-07-11 19:11:30 | eded1c96e84f37393857ba4de2580aec784b2391

Behavior change & bugfixes for retained count notification (#1433)

* Bugfix: when tapping the "dump heap" notification, if the GC found no retained instance we didn't use a distinct notification id to communicate that, and then soon after we'd dismiss the notification that let's the user know there is no retained instances on tap.
* Bugfix: we weren't running the GC when checking for retained instances and the count was under the threshold
* Change: we now update the notification and keep it around for 30 seconds when the count goes to 0
* Change: the "no retained instance" notification that shows on tap is identical and also auto dismisses after 30 seconds.
* Change: we're checking for retained references (and running the GC) every 2 seconds instead of 5.

Fixes #1427 | 2019-07-03 20:55:47 | 968083a915343d881bd63e40587c070fde543732

Update how to fix a leak | 2019-06-25 05:46:56 | 177e7fd12933d99eca7a526851c53e598a03bf90

Text rendering tests (#1378)

* Added test coverage for text rendering
* Fixed bug: labels were not rendered on the last node (leaking instance)
* Matched exclusions are now rendered on their own line

Fixes #1375
Fixes #1350 | 2019-06-04 09:32:11 | 1926cb1db73f9583e11c557dbf2e5d46e3896a6e

Thread name based exclusions (#1353)

* Readded support for exclusions of local variable based on thread names
* Renamed ThreadExclusion to JavaLocalExclusion
* Fixed bug: KeyedWeakReference was not always ignored because its superclass is has a weakly reachable exclusion.
* Fixed bug: all root nodes had the same visit order as the first non root enqueued item, making it possible for a non root node to be dequeued before we're done with all roots.
* Redded gc root sorting
* Added tests to cover all uncovered bugs
* Added support for parsing StackFrameRecord

Fixes #1339 | 2019-05-20 13:17:18 | 6c2ee609efda323e88a4964d31fc5a5f0532f776

Reachability => LeakStatus (#1340)

* Combined leaking information from inspectors to solving conflicts while keeping all reasons
* Made reason from view leak inspector more obvious, and added label data about internals
* Moved reachability into LeakTraceElement
* Reachability renamed to LeakNodeStatus and leaking / not leaking
* ReachabilityInspector and Labeler are now functions with type aliases

Related to #1336: should fix the crash, though it's still unclear why AppCompatButton was a gc root there. | 2019-05-07 14:56:59 | 01210bbbfaecb3bcb6057c62b2195366d3bfa4f9

Revamp notifications (#1335)

* New notification that shows the count of retained instances. Tapping it triggers a heap dump. Fixes #1325
* Notifications are now split into two channels: default for results, and low for everything else.
* New config options: LeakCanary.config.dumpHeapWhenDebugging (default false) and LeakCanary.config.retainedVisibleThreshold (default 5)
* Replaced notification int constants and timestamps with resource ids.
* Don't show background notifications in instant apps (#1197) | 2019-05-05 16:38:26 | b14d9bc9c0a87119137bc0998bdec9314186dfcf

Highlighting new leaks (#1334)

New leaks are leaks that have a leak group that doesn't exist in any prior analysis.

* The notification now reports the count of leaks, with a split of new, known, and won't fix.
* The analysis success screen shows new leaks
* Moved description prefixes to be computed rather than inserted in the DB

Fixes #1328 | 2019-05-05 09:37:38 | f9a0518d4ddd69b782b6302caa3e3039787038e4

LeakSentry can be disabled (#1332)

LeakCanary has an enabled config option. Default is on in debug builds off in release builds.

Fixes #1327 | 2019-05-04 17:52:47 | f74f60901f34c751e8b8798d626678aa6233c893

Revert "fix trailing spaces per checkstyle"

This reverts commit ff17f879ec92ec326f8b1c6b7b8d77a5266d6622. | 2019-05-04 08:04:21 | 03136ca7dc1680299d710f79ca885412a1564144

Add test coverage for heap analysis (#1329)

* Fixed bug when reachability inspectors conflicts (reachable should win and erase unreachable)
* Added back support for leaking instances being empty objects, strings, primitive arrays or any object that we otherwise don't follow to find shortest paths. | 2019-05-04 07:51:02 | 59558e655d537c7654c411eebfd840773a8b77c9

Introducing exclusion priority (#1317)

* Add segmented FIFO queue

Unified several queues into one segmented FIFO queue. This will enable us to add several levels of priority.

* Introducing exclusion priority

* "excludedLeak" is now known as "won't fix leak", which matches its reality better. It's a leak that is known and real yet we're not fixing.
* Exclusion.alwaysExclude is replaced with Exclusion.status, with 3 possible values: NEVER_REACHABLE, WONT_FIX_LEAK, WEAKLY_REACHABLE.
* The shortest path finder will now follow weak references after all other paths have been exhausted.
* Removed class exclusion, was confusing, replaced with less lazy approach of listing fields to exclude
* VIEWLOCATIONHOLDER_ROOT should not have been always excluded, fixed.

Fixes #1173 ... well kinda. Instead of "non leaking retained instances", LeakCanary will report weakly reachable traces. Not sure if that'll help but it's a foundation we can build on. | 2019-04-30 17:44:15 | b0eedc553995e354e2382b3378bf0348801cd3c5

AllFieldsLabeler & cleanups (#1316)

* Add new optional labeler that prints all fields (useful for debugging)
* Move deprecated AnalysisResult to perflib
* Made DefaultAnalysisResultListener an object | 2019-04-30 07:08:29 | b9ee5356db265412db39c4c341880f305fbf2c76

fix format | 2019-04-22 06:25:09 | 4a2b158913e5a9eb0d5c6fdfbf949a80fc1b2c6b

Rename default to perflib and experimental to default (#1282)

* Remove experimental from module names

* Remove experimental prefix, add perflib prefix:

* update docs | 2019-04-19 06:01:39 | 425a9f24deb72691b02cdc85f80d177c05afebc5

fix list | 2019-04-18 21:55:43 | 8e3f9d26e8d3555bf934b99ac062aabc3aba528f

fix broken master | 2019-04-10 15:00:30 | f067ae53e050c5f52f47237440a6ac7eee3ca94c

fix broken build due to typo | 2019-04-10 05:44:19 | 7d4ddb4ffe3c9b0f30a84848675452dded0d4115

Leaking information aligned below simple class name. (#1258)

Also fixed issue where extraString + exclusionString were showing after the squiggly line.

Before: 
``` 
┬
├─ java.lang.Thread
│                 Leaking: NO (it's a GC root)
│                 ↓ thread Thread.<Java Local>
│                                ~~~~~~~~~~~~~ (named 'Thread-4')
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                 Leaking: UNKNOWN
│                 ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                     ~~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) 
```
After: 
``` 
┬
├─ java.lang.Thread
│            Leaking: NO (it's a GC root)
│            ↓ thread Thread.<Java Local> (named 'Thread-4')
│                            ~~~~~~~~~~~~
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                         Leaking: UNKNOWN
│                         ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                              ~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) ``` | 2019-04-05 20:11:47 | a938855585c7cf2522ffbd143d4bb66a234eea66

Add share to Stack Overflow button when viewing a leak (#1252)

* Add share to Stack Overflow button when viewing a leak

* Add question tag, lengthen toast and fix build failure. | 2019-04-04 20:49:50 | 8724d2aaffc07904517a3b823867802ca43233ae

Check if serviceInfo.processName is null. When LeakCanary runs on a seperate process and that process for some reason does not have a assigned processName, then we will crash on a NullPointerException. Also a debug log explaining this. (#1225) | 2019-04-01 19:20:40 | 3efc43608ed71dc20b0ad1e0e80e33d15249666f

fix master broken | 2019-04-01 19:07:27 | fe42130029174681a708b7d8622412efbaf81e73

fix trailing spaces per checkstyle | 2019-03-29 22:34:58 | ff17f879ec92ec326f8b1c6b7b8d77a5266d6622

Fix GC Root bugs that missed leaks (#1168)

In Perflib, Snapshot.getGcRoots() only returns the GC roots from the first heap. Based on empirical evidence, it seems like Android has 4 heaps, and the GC Roots used to only be in the first heap, but more recent versions of Android have GC Roots in other heaps as well.

This means LeakCanary would sometimes show "No Leak Found" when there actually was a leak.

Fixes #1163 | 2019-01-10 23:32:27 | 64b6e5a41796ae1587c50c8cc860cea25f28f382

fix typo | 2018-10-17 00:43:01 | 044b1e4827bc71ec008dc3f7e43c78f58885f1e1

Fix LeakCanary toasting (#1116)

- Prior attempts to get it to work with the application context turned out to be buggy.
- This makes LeakCanary use whatever the current resumed activity is, if any.
- If there is no resumed activity, then the toast isn't displayed.

This supersedes #1080 | 2018-10-16 13:23:14 | 0e39e2eea79bc05bf7147a4074dd7163f7c401ff

fix the wrong word (#1111) | 2018-10-16 01:25:28 | 636b9b6c2b39c0c887c9ed78e904239db9bc131e

Merge pull request #1104 from IlyaGulya/bug/travis-ci-cache-fix

Fix travis caching and improve build time. | 2018-09-22 21:25:59 | 344728b906daf6d010f66bdf4ccc29ad8fedede5

Error prone 2.3.1 + suggested fix and specify version

See http://errorprone.info/bugpattern/StringSplitter | 2018-08-22 07:37:33 | a6b6960d73a1da9661f4e85254570bf5f867f954

Merge pull request #1089 from hzsweers/z/fixAnother

Quick followup to #1088 | 2018-08-22 03:15:15 | be973f5f5da6a3516aedab98e639690697617747

Merge pull request #1087 from Goddchen/patch-2

Updated german translation | 2018-08-20 13:52:47 | b43c279b3e1623c193e1dc81955527f70e93f822

Merge pull request #1063 from javmarina/patch-1

Fixed wrong versions in AndroidExcludedRefs | 2018-07-25 18:31:55 | 3b4ebe3e2571377f93e9a6976e021324502a0f78

Fixed wrong versions in AndroidExcludedRefs

Commit https://android.googlesource.com/platform/frameworks/base/+/27db46850b708070452c0ce49daf5f79503fbde6 introduced this issue. This commit was first included in Jelly Bean 4.3 (JELLY_BEAN_MR2), not Jelly Bean 4.1 (JELLY_BEAN)
Commit https://android.googlesource.com/platform/frameworks/base/+/5200e1cb07190a1f6874d72a4561064cad3ee3e0 fixes this issue and was first included in Oreo 8.0 (O). Nougat still has this memory leak. | 2018-07-24 18:24:59 | e4778b25f2c6e65ebc485d255e38586c7d45ec97

Merge pull request #1057 from square/py/ui_bug

Fix drawing of start line | 2018-07-20 22:21:19 | af96577a7d19e4df9f63d95fd9c3bfd2adcddb5d

Avoid Toast crashes

Showing a toast can crash on API 25 because the Window Manager can throw a BadTokenException when addView is called.

This change fixes it by configuring the toast manually and calling the window manager directly. This is based on https://github.com/pyricau/frenchtoast/blob/master/frenchtoast/src/main/java/frenchtoast/Mixture.java#L49 .

Fixes #844 | 2018-07-20 16:11:22 | c9ebc5cf5099c093bde5d3309b2692cb0e2016d8

Fixing setup bug | 2018-06-28 04:07:09 | 505933817cf6e2eb0dad4a78d4c7c35a072b9868

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

Leaking information aligned below simple class name. (#1258)

Also fixed issue where extraString + exclusionString were showing after the squiggly line.

Before: 
``` 
┬
├─ java.lang.Thread
│                 Leaking: NO (it's a GC root)
│                 ↓ thread Thread.<Java Local>
│                                ~~~~~~~~~~~~~ (named 'Thread-4')
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                 Leaking: UNKNOWN
│                 ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                     ~~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) 
```
After: 
``` 
┬
├─ java.lang.Thread
│            Leaking: NO (it's a GC root)
│            ↓ thread Thread.<Java Local> (named 'Thread-4')
│                            ~~~~~~~~~~~~
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                         Leaking: UNKNOWN
│                         ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                              ~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) ``` | 2019-04-05 20:11:47 | a938855585c7cf2522ffbd143d4bb66a234eea66

Add share to Stack Overflow button when viewing a leak (#1252)

* Add share to Stack Overflow button when viewing a leak

* Add question tag, lengthen toast and fix build failure. | 2019-04-04 20:49:50 | 8724d2aaffc07904517a3b823867802ca43233ae

Check if serviceInfo.processName is null. When LeakCanary runs on a seperate process and that process for some reason does not have a assigned processName, then we will crash on a NullPointerException. Also a debug log explaining this. (#1225) | 2019-04-01 19:20:40 | 3efc43608ed71dc20b0ad1e0e80e33d15249666f

fix master broken | 2019-04-01 19:07:27 | fe42130029174681a708b7d8622412efbaf81e73

Fix GC Root bugs that missed leaks (#1168)

In Perflib, Snapshot.getGcRoots() only returns the GC roots from the first heap. Based on empirical evidence, it seems like Android has 4 heaps, and the GC Roots used to only be in the first heap, but more recent versions of Android have GC Roots in other heaps as well.

This means LeakCanary would sometimes show "No Leak Found" when there actually was a leak.

Fixes #1163 | 2019-01-10 23:32:27 | 64b6e5a41796ae1587c50c8cc860cea25f28f382

fix typo | 2018-10-17 00:43:01 | 044b1e4827bc71ec008dc3f7e43c78f58885f1e1

Fix LeakCanary toasting (#1116)

- Prior attempts to get it to work with the application context turned out to be buggy.
- This makes LeakCanary use whatever the current resumed activity is, if any.
- If there is no resumed activity, then the toast isn't displayed.

This supersedes #1080 | 2018-10-16 13:23:14 | 0e39e2eea79bc05bf7147a4074dd7163f7c401ff

fix the wrong word (#1111) | 2018-10-16 01:25:28 | 636b9b6c2b39c0c887c9ed78e904239db9bc131e

Merge pull request #1104 from IlyaGulya/bug/travis-ci-cache-fix

Fix travis caching and improve build time. | 2018-09-22 21:25:59 | 344728b906daf6d010f66bdf4ccc29ad8fedede5

Error prone 2.3.1 + suggested fix and specify version

See http://errorprone.info/bugpattern/StringSplitter | 2018-08-22 07:37:33 | a6b6960d73a1da9661f4e85254570bf5f867f954

Merge pull request #1089 from hzsweers/z/fixAnother

Quick followup to #1088 | 2018-08-22 03:15:15 | be973f5f5da6a3516aedab98e639690697617747

Merge pull request #1087 from Goddchen/patch-2

Updated german translation | 2018-08-20 13:52:47 | b43c279b3e1623c193e1dc81955527f70e93f822

Merge pull request #1063 from javmarina/patch-1

Fixed wrong versions in AndroidExcludedRefs | 2018-07-25 18:31:55 | 3b4ebe3e2571377f93e9a6976e021324502a0f78

Fixed wrong versions in AndroidExcludedRefs

Commit https://android.googlesource.com/platform/frameworks/base/+/27db46850b708070452c0ce49daf5f79503fbde6 introduced this issue. This commit was first included in Jelly Bean 4.3 (JELLY_BEAN_MR2), not Jelly Bean 4.1 (JELLY_BEAN)
Commit https://android.googlesource.com/platform/frameworks/base/+/5200e1cb07190a1f6874d72a4561064cad3ee3e0 fixes this issue and was first included in Oreo 8.0 (O). Nougat still has this memory leak. | 2018-07-24 18:24:59 | e4778b25f2c6e65ebc485d255e38586c7d45ec97

Merge pull request #1057 from square/py/ui_bug

Fix drawing of start line | 2018-07-20 22:21:19 | af96577a7d19e4df9f63d95fd9c3bfd2adcddb5d

Avoid Toast crashes

Showing a toast can crash on API 25 because the Window Manager can throw a BadTokenException when addView is called.

This change fixes it by configuring the toast manually and calling the window manager directly. This is based on https://github.com/pyricau/frenchtoast/blob/master/frenchtoast/src/main/java/frenchtoast/Mixture.java#L49 .

Fixes #844 | 2018-07-20 16:11:22 | c9ebc5cf5099c093bde5d3309b2692cb0e2016d8

Fixing setup bug | 2018-06-28 04:07:09 | 505933817cf6e2eb0dad4a78d4c7c35a072b9868

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

Rename default to perflib and experimental to default (#1282)

* Remove experimental from module names

* Remove experimental prefix, add perflib prefix:

* update docs | 2019-04-19 06:01:39 | 425a9f24deb72691b02cdc85f80d177c05afebc5

fix list | 2019-04-18 21:55:43 | 8e3f9d26e8d3555bf934b99ac062aabc3aba528f

fix broken master | 2019-04-10 15:00:30 | f067ae53e050c5f52f47237440a6ac7eee3ca94c

fix broken build due to typo | 2019-04-10 05:44:19 | 7d4ddb4ffe3c9b0f30a84848675452dded0d4115

Leaking information aligned below simple class name. (#1258)

Also fixed issue where extraString + exclusionString were showing after the squiggly line.

Before: 
``` 
┬
├─ java.lang.Thread
│                 Leaking: NO (it's a GC root)
│                 ↓ thread Thread.<Java Local>
│                                ~~~~~~~~~~~~~ (named 'Thread-4')
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                 Leaking: UNKNOWN
│                 ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                     ~~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) 
```
After: 
``` 
┬
├─ java.lang.Thread
│            Leaking: NO (it's a GC root)
│            ↓ thread Thread.<Java Local> (named 'Thread-4')
│                            ~~~~~~~~~~~~
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                         Leaking: UNKNOWN
│                         ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                              ~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) ``` | 2019-04-05 20:11:47 | a938855585c7cf2522ffbd143d4bb66a234eea66

Add share to Stack Overflow button when viewing a leak (#1252)

* Add share to Stack Overflow button when viewing a leak

* Add question tag, lengthen toast and fix build failure. | 2019-04-04 20:49:50 | 8724d2aaffc07904517a3b823867802ca43233ae

Check if serviceInfo.processName is null. When LeakCanary runs on a seperate process and that process for some reason does not have a assigned processName, then we will crash on a NullPointerException. Also a debug log explaining this. (#1225) | 2019-04-01 19:20:40 | 3efc43608ed71dc20b0ad1e0e80e33d15249666f

fix master broken | 2019-04-01 19:07:27 | fe42130029174681a708b7d8622412efbaf81e73

Fix GC Root bugs that missed leaks (#1168)

In Perflib, Snapshot.getGcRoots() only returns the GC roots from the first heap. Based on empirical evidence, it seems like Android has 4 heaps, and the GC Roots used to only be in the first heap, but more recent versions of Android have GC Roots in other heaps as well.

This means LeakCanary would sometimes show "No Leak Found" when there actually was a leak.

Fixes #1163 | 2019-01-10 23:32:27 | 64b6e5a41796ae1587c50c8cc860cea25f28f382

fix typo | 2018-10-17 00:43:01 | 044b1e4827bc71ec008dc3f7e43c78f58885f1e1

Fix LeakCanary toasting (#1116)

- Prior attempts to get it to work with the application context turned out to be buggy.
- This makes LeakCanary use whatever the current resumed activity is, if any.
- If there is no resumed activity, then the toast isn't displayed.

This supersedes #1080 | 2018-10-16 13:23:14 | 0e39e2eea79bc05bf7147a4074dd7163f7c401ff

fix the wrong word (#1111) | 2018-10-16 01:25:28 | 636b9b6c2b39c0c887c9ed78e904239db9bc131e

Merge pull request #1104 from IlyaGulya/bug/travis-ci-cache-fix

Fix travis caching and improve build time. | 2018-09-22 21:25:59 | 344728b906daf6d010f66bdf4ccc29ad8fedede5

Error prone 2.3.1 + suggested fix and specify version

See http://errorprone.info/bugpattern/StringSplitter | 2018-08-22 07:37:33 | a6b6960d73a1da9661f4e85254570bf5f867f954

Merge pull request #1089 from hzsweers/z/fixAnother

Quick followup to #1088 | 2018-08-22 03:15:15 | be973f5f5da6a3516aedab98e639690697617747

Merge pull request #1087 from Goddchen/patch-2

Updated german translation | 2018-08-20 13:52:47 | b43c279b3e1623c193e1dc81955527f70e93f822

Merge pull request #1063 from javmarina/patch-1

Fixed wrong versions in AndroidExcludedRefs | 2018-07-25 18:31:55 | 3b4ebe3e2571377f93e9a6976e021324502a0f78

Fixed wrong versions in AndroidExcludedRefs

Commit https://android.googlesource.com/platform/frameworks/base/+/27db46850b708070452c0ce49daf5f79503fbde6 introduced this issue. This commit was first included in Jelly Bean 4.3 (JELLY_BEAN_MR2), not Jelly Bean 4.1 (JELLY_BEAN)
Commit https://android.googlesource.com/platform/frameworks/base/+/5200e1cb07190a1f6874d72a4561064cad3ee3e0 fixes this issue and was first included in Oreo 8.0 (O). Nougat still has this memory leak. | 2018-07-24 18:24:59 | e4778b25f2c6e65ebc485d255e38586c7d45ec97

Merge pull request #1057 from square/py/ui_bug

Fix drawing of start line | 2018-07-20 22:21:19 | af96577a7d19e4df9f63d95fd9c3bfd2adcddb5d

Avoid Toast crashes

Showing a toast can crash on API 25 because the Window Manager can throw a BadTokenException when addView is called.

This change fixes it by configuring the toast manually and calling the window manager directly. This is based on https://github.com/pyricau/frenchtoast/blob/master/frenchtoast/src/main/java/frenchtoast/Mixture.java#L49 .

Fixes #844 | 2018-07-20 16:11:22 | c9ebc5cf5099c093bde5d3309b2692cb0e2016d8

Fixing setup bug | 2018-06-28 04:07:09 | 505933817cf6e2eb0dad4a78d4c7c35a072b9868

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

Add / fix android inspectors (#1491)

* Added MortarScope and ViewRootImpl inspectors
* Fixed the ContextWrapper inspector

Fixes #1490
Fixes #1389 | 2019-07-25 22:50:48 | 915f8359690a016a09e66608a041454b9c8c52cb

Documenting public APIs (#1476)

Also fixed naming and other things that weren't right.

Fixes #1474 | 2019-07-19 06:57:25 | 41c69a5d424b4236114c5ce1b077afdad38e57a5

Adding CLI for LeakCanary (#1456)

Example usage:
```
./gradlew leakcanary-cli:run --args='analyze-process com.example.leakcanary'

./gradlew leakcanary-cli:run --args='dump-process com.example.leakcanary'

./gradlew leakcanary-cli:run --args='analyze-file /path/to/heapdump.hprof'
```

Also fixed a bug in ShortestPathFinder which did not ignore null references in object arrays | 2019-07-11 19:11:30 | eded1c96e84f37393857ba4de2580aec784b2391

Behavior change & bugfixes for retained count notification (#1433)

* Bugfix: when tapping the "dump heap" notification, if the GC found no retained instance we didn't use a distinct notification id to communicate that, and then soon after we'd dismiss the notification that let's the user know there is no retained instances on tap.
* Bugfix: we weren't running the GC when checking for retained instances and the count was under the threshold
* Change: we now update the notification and keep it around for 30 seconds when the count goes to 0
* Change: the "no retained instance" notification that shows on tap is identical and also auto dismisses after 30 seconds.
* Change: we're checking for retained references (and running the GC) every 2 seconds instead of 5.

Fixes #1427 | 2019-07-03 20:55:47 | 968083a915343d881bd63e40587c070fde543732

Update how to fix a leak | 2019-06-25 05:46:56 | 177e7fd12933d99eca7a526851c53e598a03bf90

Text rendering tests (#1378)

* Added test coverage for text rendering
* Fixed bug: labels were not rendered on the last node (leaking instance)
* Matched exclusions are now rendered on their own line

Fixes #1375
Fixes #1350 | 2019-06-04 09:32:11 | 1926cb1db73f9583e11c557dbf2e5d46e3896a6e

Thread name based exclusions (#1353)

* Readded support for exclusions of local variable based on thread names
* Renamed ThreadExclusion to JavaLocalExclusion
* Fixed bug: KeyedWeakReference was not always ignored because its superclass is has a weakly reachable exclusion.
* Fixed bug: all root nodes had the same visit order as the first non root enqueued item, making it possible for a non root node to be dequeued before we're done with all roots.
* Redded gc root sorting
* Added tests to cover all uncovered bugs
* Added support for parsing StackFrameRecord

Fixes #1339 | 2019-05-20 13:17:18 | 6c2ee609efda323e88a4964d31fc5a5f0532f776

Reachability => LeakStatus (#1340)

* Combined leaking information from inspectors to solving conflicts while keeping all reasons
* Made reason from view leak inspector more obvious, and added label data about internals
* Moved reachability into LeakTraceElement
* Reachability renamed to LeakNodeStatus and leaking / not leaking
* ReachabilityInspector and Labeler are now functions with type aliases

Related to #1336: should fix the crash, though it's still unclear why AppCompatButton was a gc root there. | 2019-05-07 14:56:59 | 01210bbbfaecb3bcb6057c62b2195366d3bfa4f9

Revamp notifications (#1335)

* New notification that shows the count of retained instances. Tapping it triggers a heap dump. Fixes #1325
* Notifications are now split into two channels: default for results, and low for everything else.
* New config options: LeakCanary.config.dumpHeapWhenDebugging (default false) and LeakCanary.config.retainedVisibleThreshold (default 5)
* Replaced notification int constants and timestamps with resource ids.
* Don't show background notifications in instant apps (#1197) | 2019-05-05 16:38:26 | b14d9bc9c0a87119137bc0998bdec9314186dfcf

Highlighting new leaks (#1334)

New leaks are leaks that have a leak group that doesn't exist in any prior analysis.

* The notification now reports the count of leaks, with a split of new, known, and won't fix.
* The analysis success screen shows new leaks
* Moved description prefixes to be computed rather than inserted in the DB

Fixes #1328 | 2019-05-05 09:37:38 | f9a0518d4ddd69b782b6302caa3e3039787038e4

LeakSentry can be disabled (#1332)

LeakCanary has an enabled config option. Default is on in debug builds off in release builds.

Fixes #1327 | 2019-05-04 17:52:47 | f74f60901f34c751e8b8798d626678aa6233c893

Revert "fix trailing spaces per checkstyle"

This reverts commit ff17f879ec92ec326f8b1c6b7b8d77a5266d6622. | 2019-05-04 08:04:21 | 03136ca7dc1680299d710f79ca885412a1564144

Add test coverage for heap analysis (#1329)

* Fixed bug when reachability inspectors conflicts (reachable should win and erase unreachable)
* Added back support for leaking instances being empty objects, strings, primitive arrays or any object that we otherwise don't follow to find shortest paths. | 2019-05-04 07:51:02 | 59558e655d537c7654c411eebfd840773a8b77c9

Introducing exclusion priority (#1317)

* Add segmented FIFO queue

Unified several queues into one segmented FIFO queue. This will enable us to add several levels of priority.

* Introducing exclusion priority

* "excludedLeak" is now known as "won't fix leak", which matches its reality better. It's a leak that is known and real yet we're not fixing.
* Exclusion.alwaysExclude is replaced with Exclusion.status, with 3 possible values: NEVER_REACHABLE, WONT_FIX_LEAK, WEAKLY_REACHABLE.
* The shortest path finder will now follow weak references after all other paths have been exhausted.
* Removed class exclusion, was confusing, replaced with less lazy approach of listing fields to exclude
* VIEWLOCATIONHOLDER_ROOT should not have been always excluded, fixed.

Fixes #1173 ... well kinda. Instead of "non leaking retained instances", LeakCanary will report weakly reachable traces. Not sure if that'll help but it's a foundation we can build on. | 2019-04-30 17:44:15 | b0eedc553995e354e2382b3378bf0348801cd3c5

AllFieldsLabeler & cleanups (#1316)

* Add new optional labeler that prints all fields (useful for debugging)
* Move deprecated AnalysisResult to perflib
* Made DefaultAnalysisResultListener an object | 2019-04-30 07:08:29 | b9ee5356db265412db39c4c341880f305fbf2c76

fix format | 2019-04-22 06:25:09 | 4a2b158913e5a9eb0d5c6fdfbf949a80fc1b2c6b

Rename default to perflib and experimental to default (#1282)

* Remove experimental from module names

* Remove experimental prefix, add perflib prefix:

* update docs | 2019-04-19 06:01:39 | 425a9f24deb72691b02cdc85f80d177c05afebc5

fix list | 2019-04-18 21:55:43 | 8e3f9d26e8d3555bf934b99ac062aabc3aba528f

fix broken master | 2019-04-10 15:00:30 | f067ae53e050c5f52f47237440a6ac7eee3ca94c

fix broken build due to typo | 2019-04-10 05:44:19 | 7d4ddb4ffe3c9b0f30a84848675452dded0d4115

Leaking information aligned below simple class name. (#1258)

Also fixed issue where extraString + exclusionString were showing after the squiggly line.

Before: 
``` 
┬
├─ java.lang.Thread
│                 Leaking: NO (it's a GC root)
│                 ↓ thread Thread.<Java Local>
│                                ~~~~~~~~~~~~~ (named 'Thread-4')
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                 Leaking: UNKNOWN
│                 ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                     ~~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) 
```
After: 
``` 
┬
├─ java.lang.Thread
│            Leaking: NO (it's a GC root)
│            ↓ thread Thread.<Java Local> (named 'Thread-4')
│                            ~~~~~~~~~~~~
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                         Leaking: UNKNOWN
│                         ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                              ~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) ``` | 2019-04-05 20:11:47 | a938855585c7cf2522ffbd143d4bb66a234eea66

Add share to Stack Overflow button when viewing a leak (#1252)

* Add share to Stack Overflow button when viewing a leak

* Add question tag, lengthen toast and fix build failure. | 2019-04-04 20:49:50 | 8724d2aaffc07904517a3b823867802ca43233ae

Check if serviceInfo.processName is null. When LeakCanary runs on a seperate process and that process for some reason does not have a assigned processName, then we will crash on a NullPointerException. Also a debug log explaining this. (#1225) | 2019-04-01 19:20:40 | 3efc43608ed71dc20b0ad1e0e80e33d15249666f

fix master broken | 2019-04-01 19:07:27 | fe42130029174681a708b7d8622412efbaf81e73

fix trailing spaces per checkstyle | 2019-03-29 22:34:58 | ff17f879ec92ec326f8b1c6b7b8d77a5266d6622

Fix GC Root bugs that missed leaks (#1168)

In Perflib, Snapshot.getGcRoots() only returns the GC roots from the first heap. Based on empirical evidence, it seems like Android has 4 heaps, and the GC Roots used to only be in the first heap, but more recent versions of Android have GC Roots in other heaps as well.

This means LeakCanary would sometimes show "No Leak Found" when there actually was a leak.

Fixes #1163 | 2019-01-10 23:32:27 | 64b6e5a41796ae1587c50c8cc860cea25f28f382

fix typo | 2018-10-17 00:43:01 | 044b1e4827bc71ec008dc3f7e43c78f58885f1e1

Fix LeakCanary toasting (#1116)

- Prior attempts to get it to work with the application context turned out to be buggy.
- This makes LeakCanary use whatever the current resumed activity is, if any.
- If there is no resumed activity, then the toast isn't displayed.

This supersedes #1080 | 2018-10-16 13:23:14 | 0e39e2eea79bc05bf7147a4074dd7163f7c401ff

fix the wrong word (#1111) | 2018-10-16 01:25:28 | 636b9b6c2b39c0c887c9ed78e904239db9bc131e

Merge pull request #1104 from IlyaGulya/bug/travis-ci-cache-fix

Fix travis caching and improve build time. | 2018-09-22 21:25:59 | 344728b906daf6d010f66bdf4ccc29ad8fedede5

Error prone 2.3.1 + suggested fix and specify version

See http://errorprone.info/bugpattern/StringSplitter | 2018-08-22 07:37:33 | a6b6960d73a1da9661f4e85254570bf5f867f954

Merge pull request #1089 from hzsweers/z/fixAnother

Quick followup to #1088 | 2018-08-22 03:15:15 | be973f5f5da6a3516aedab98e639690697617747

Merge pull request #1087 from Goddchen/patch-2

Updated german translation | 2018-08-20 13:52:47 | b43c279b3e1623c193e1dc81955527f70e93f822

Merge pull request #1063 from javmarina/patch-1

Fixed wrong versions in AndroidExcludedRefs | 2018-07-25 18:31:55 | 3b4ebe3e2571377f93e9a6976e021324502a0f78

Fixed wrong versions in AndroidExcludedRefs

Commit https://android.googlesource.com/platform/frameworks/base/+/27db46850b708070452c0ce49daf5f79503fbde6 introduced this issue. This commit was first included in Jelly Bean 4.3 (JELLY_BEAN_MR2), not Jelly Bean 4.1 (JELLY_BEAN)
Commit https://android.googlesource.com/platform/frameworks/base/+/5200e1cb07190a1f6874d72a4561064cad3ee3e0 fixes this issue and was first included in Oreo 8.0 (O). Nougat still has this memory leak. | 2018-07-24 18:24:59 | e4778b25f2c6e65ebc485d255e38586c7d45ec97

Merge pull request #1057 from square/py/ui_bug

Fix drawing of start line | 2018-07-20 22:21:19 | af96577a7d19e4df9f63d95fd9c3bfd2adcddb5d

Avoid Toast crashes

Showing a toast can crash on API 25 because the Window Manager can throw a BadTokenException when addView is called.

This change fixes it by configuring the toast manually and calling the window manager directly. This is based on https://github.com/pyricau/frenchtoast/blob/master/frenchtoast/src/main/java/frenchtoast/Mixture.java#L49 .

Fixes #844 | 2018-07-20 16:11:22 | c9ebc5cf5099c093bde5d3309b2692cb0e2016d8

Fixing setup bug | 2018-06-28 04:07:09 | 505933817cf6e2eb0dad4a78d4c7c35a072b9868

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

Merge pull request #1559 from bric3/fix-primitive-array-dump-skip

Fixes the primitive array dump record skipping | 2019-09-09 22:16:57 | c0fd4d812cb8d6c5723231e501c121da2af86f06

Parsing and applying proguard mapping during heap analysis (#1542)

* Parsing and applying proguard mapping during heap analysis

* Parsing and applying proguard mapping during heap analysis

* Rebased onto master

* Post review changes and updated shark-cli to support mapping files

* Post review fixes

* Moving proguard mapping reader out of the analyzer and formatting fixes | 2019-08-30 16:54:20 | 66182a52069d9be59d0af6220aa9afd74218aa9b

fix images | 2019-08-27 20:02:50 | 8f5030e9faa8690217e1bd436274a3de5b9d3fb3

fix image links in docs | 2019-08-27 19:59:20 | edca56a947278508350bfa5dd33d3fa10699001f

Merge pull request #1549 from Armaxis/patch-1

Added section about using Detekt to Contributing | 2019-08-24 22:16:26 | c923d14909888860a99d5899af17f5b52c9b000f

Revert "Replaced accessor with a call to setter to fix the build issue"

This reverts commit 82db0398 | 2019-08-17 02:21:08 | c570cb9b0fd7bd7fcc88c4d3b529df8837e98fdc

Replaced accessor with a call to setter to fix the build issue | 2019-08-16 04:32:25 | 82db039843303044f91d36ba7c43595ab59bacd5

fix typo | 2019-08-02 15:31:17 | a2452f61e78e689efb59adaf71384d74447578b0

Add / fix android inspectors (#1491)

* Added MortarScope and ViewRootImpl inspectors
* Fixed the ContextWrapper inspector

Fixes #1490
Fixes #1389 | 2019-07-25 22:50:48 | 915f8359690a016a09e66608a041454b9c8c52cb

Documenting public APIs (#1476)

Also fixed naming and other things that weren't right.

Fixes #1474 | 2019-07-19 06:57:25 | 41c69a5d424b4236114c5ce1b077afdad38e57a5

Adding CLI for LeakCanary (#1456)

Example usage:
```
./gradlew leakcanary-cli:run --args='analyze-process com.example.leakcanary'

./gradlew leakcanary-cli:run --args='dump-process com.example.leakcanary'

./gradlew leakcanary-cli:run --args='analyze-file /path/to/heapdump.hprof'
```

Also fixed a bug in ShortestPathFinder which did not ignore null references in object arrays | 2019-07-11 19:11:30 | eded1c96e84f37393857ba4de2580aec784b2391

Behavior change & bugfixes for retained count notification (#1433)

* Bugfix: when tapping the "dump heap" notification, if the GC found no retained instance we didn't use a distinct notification id to communicate that, and then soon after we'd dismiss the notification that let's the user know there is no retained instances on tap.
* Bugfix: we weren't running the GC when checking for retained instances and the count was under the threshold
* Change: we now update the notification and keep it around for 30 seconds when the count goes to 0
* Change: the "no retained instance" notification that shows on tap is identical and also auto dismisses after 30 seconds.
* Change: we're checking for retained references (and running the GC) every 2 seconds instead of 5.

Fixes #1427 | 2019-07-03 20:55:47 | 968083a915343d881bd63e40587c070fde543732

Update how to fix a leak | 2019-06-25 05:46:56 | 177e7fd12933d99eca7a526851c53e598a03bf90

Text rendering tests (#1378)

* Added test coverage for text rendering
* Fixed bug: labels were not rendered on the last node (leaking instance)
* Matched exclusions are now rendered on their own line

Fixes #1375
Fixes #1350 | 2019-06-04 09:32:11 | 1926cb1db73f9583e11c557dbf2e5d46e3896a6e

Thread name based exclusions (#1353)

* Readded support for exclusions of local variable based on thread names
* Renamed ThreadExclusion to JavaLocalExclusion
* Fixed bug: KeyedWeakReference was not always ignored because its superclass is has a weakly reachable exclusion.
* Fixed bug: all root nodes had the same visit order as the first non root enqueued item, making it possible for a non root node to be dequeued before we're done with all roots.
* Redded gc root sorting
* Added tests to cover all uncovered bugs
* Added support for parsing StackFrameRecord

Fixes #1339 | 2019-05-20 13:17:18 | 6c2ee609efda323e88a4964d31fc5a5f0532f776

Reachability => LeakStatus (#1340)

* Combined leaking information from inspectors to solving conflicts while keeping all reasons
* Made reason from view leak inspector more obvious, and added label data about internals
* Moved reachability into LeakTraceElement
* Reachability renamed to LeakNodeStatus and leaking / not leaking
* ReachabilityInspector and Labeler are now functions with type aliases

Related to #1336: should fix the crash, though it's still unclear why AppCompatButton was a gc root there. | 2019-05-07 14:56:59 | 01210bbbfaecb3bcb6057c62b2195366d3bfa4f9

Revamp notifications (#1335)

* New notification that shows the count of retained instances. Tapping it triggers a heap dump. Fixes #1325
* Notifications are now split into two channels: default for results, and low for everything else.
* New config options: LeakCanary.config.dumpHeapWhenDebugging (default false) and LeakCanary.config.retainedVisibleThreshold (default 5)
* Replaced notification int constants and timestamps with resource ids.
* Don't show background notifications in instant apps (#1197) | 2019-05-05 16:38:26 | b14d9bc9c0a87119137bc0998bdec9314186dfcf

Highlighting new leaks (#1334)

New leaks are leaks that have a leak group that doesn't exist in any prior analysis.

* The notification now reports the count of leaks, with a split of new, known, and won't fix.
* The analysis success screen shows new leaks
* Moved description prefixes to be computed rather than inserted in the DB

Fixes #1328 | 2019-05-05 09:37:38 | f9a0518d4ddd69b782b6302caa3e3039787038e4

LeakSentry can be disabled (#1332)

LeakCanary has an enabled config option. Default is on in debug builds off in release builds.

Fixes #1327 | 2019-05-04 17:52:47 | f74f60901f34c751e8b8798d626678aa6233c893

Revert "fix trailing spaces per checkstyle"

This reverts commit ff17f879ec92ec326f8b1c6b7b8d77a5266d6622. | 2019-05-04 08:04:21 | 03136ca7dc1680299d710f79ca885412a1564144

Add test coverage for heap analysis (#1329)

* Fixed bug when reachability inspectors conflicts (reachable should win and erase unreachable)
* Added back support for leaking instances being empty objects, strings, primitive arrays or any object that we otherwise don't follow to find shortest paths. | 2019-05-04 07:51:02 | 59558e655d537c7654c411eebfd840773a8b77c9

Introducing exclusion priority (#1317)

* Add segmented FIFO queue

Unified several queues into one segmented FIFO queue. This will enable us to add several levels of priority.

* Introducing exclusion priority

* "excludedLeak" is now known as "won't fix leak", which matches its reality better. It's a leak that is known and real yet we're not fixing.
* Exclusion.alwaysExclude is replaced with Exclusion.status, with 3 possible values: NEVER_REACHABLE, WONT_FIX_LEAK, WEAKLY_REACHABLE.
* The shortest path finder will now follow weak references after all other paths have been exhausted.
* Removed class exclusion, was confusing, replaced with less lazy approach of listing fields to exclude
* VIEWLOCATIONHOLDER_ROOT should not have been always excluded, fixed.

Fixes #1173 ... well kinda. Instead of "non leaking retained instances", LeakCanary will report weakly reachable traces. Not sure if that'll help but it's a foundation we can build on. | 2019-04-30 17:44:15 | b0eedc553995e354e2382b3378bf0348801cd3c5

AllFieldsLabeler & cleanups (#1316)

* Add new optional labeler that prints all fields (useful for debugging)
* Move deprecated AnalysisResult to perflib
* Made DefaultAnalysisResultListener an object | 2019-04-30 07:08:29 | b9ee5356db265412db39c4c341880f305fbf2c76

fix format | 2019-04-22 06:25:09 | 4a2b158913e5a9eb0d5c6fdfbf949a80fc1b2c6b

Rename default to perflib and experimental to default (#1282)

* Remove experimental from module names

* Remove experimental prefix, add perflib prefix:

* update docs | 2019-04-19 06:01:39 | 425a9f24deb72691b02cdc85f80d177c05afebc5

fix list | 2019-04-18 21:55:43 | 8e3f9d26e8d3555bf934b99ac062aabc3aba528f

fix broken master | 2019-04-10 15:00:30 | f067ae53e050c5f52f47237440a6ac7eee3ca94c

fix broken build due to typo | 2019-04-10 05:44:19 | 7d4ddb4ffe3c9b0f30a84848675452dded0d4115

Leaking information aligned below simple class name. (#1258)

Also fixed issue where extraString + exclusionString were showing after the squiggly line.

Before: 
``` 
┬
├─ java.lang.Thread
│                 Leaking: NO (it's a GC root)
│                 ↓ thread Thread.<Java Local>
│                                ~~~~~~~~~~~~~ (named 'Thread-4')
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                 Leaking: UNKNOWN
│                 ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                     ~~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) 
```
After: 
``` 
┬
├─ java.lang.Thread
│            Leaking: NO (it's a GC root)
│            ↓ thread Thread.<Java Local> (named 'Thread-4')
│                            ~~~~~~~~~~~~
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                         Leaking: UNKNOWN
│                         ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                              ~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) ``` | 2019-04-05 20:11:47 | a938855585c7cf2522ffbd143d4bb66a234eea66

Add share to Stack Overflow button when viewing a leak (#1252)

* Add share to Stack Overflow button when viewing a leak

* Add question tag, lengthen toast and fix build failure. | 2019-04-04 20:49:50 | 8724d2aaffc07904517a3b823867802ca43233ae

Check if serviceInfo.processName is null. When LeakCanary runs on a seperate process and that process for some reason does not have a assigned processName, then we will crash on a NullPointerException. Also a debug log explaining this. (#1225) | 2019-04-01 19:20:40 | 3efc43608ed71dc20b0ad1e0e80e33d15249666f

fix master broken | 2019-04-01 19:07:27 | fe42130029174681a708b7d8622412efbaf81e73

fix trailing spaces per checkstyle | 2019-03-29 22:34:58 | ff17f879ec92ec326f8b1c6b7b8d77a5266d6622

Fix GC Root bugs that missed leaks (#1168)

In Perflib, Snapshot.getGcRoots() only returns the GC roots from the first heap. Based on empirical evidence, it seems like Android has 4 heaps, and the GC Roots used to only be in the first heap, but more recent versions of Android have GC Roots in other heaps as well.

This means LeakCanary would sometimes show "No Leak Found" when there actually was a leak.

Fixes #1163 | 2019-01-10 23:32:27 | 64b6e5a41796ae1587c50c8cc860cea25f28f382

fix typo | 2018-10-17 00:43:01 | 044b1e4827bc71ec008dc3f7e43c78f58885f1e1

Fix LeakCanary toasting (#1116)

- Prior attempts to get it to work with the application context turned out to be buggy.
- This makes LeakCanary use whatever the current resumed activity is, if any.
- If there is no resumed activity, then the toast isn't displayed.

This supersedes #1080 | 2018-10-16 13:23:14 | 0e39e2eea79bc05bf7147a4074dd7163f7c401ff

fix the wrong word (#1111) | 2018-10-16 01:25:28 | 636b9b6c2b39c0c887c9ed78e904239db9bc131e

Merge pull request #1104 from IlyaGulya/bug/travis-ci-cache-fix

Fix travis caching and improve build time. | 2018-09-22 21:25:59 | 344728b906daf6d010f66bdf4ccc29ad8fedede5

Error prone 2.3.1 + suggested fix and specify version

See http://errorprone.info/bugpattern/StringSplitter | 2018-08-22 07:37:33 | a6b6960d73a1da9661f4e85254570bf5f867f954

Merge pull request #1089 from hzsweers/z/fixAnother

Quick followup to #1088 | 2018-08-22 03:15:15 | be973f5f5da6a3516aedab98e639690697617747

Merge pull request #1087 from Goddchen/patch-2

Updated german translation | 2018-08-20 13:52:47 | b43c279b3e1623c193e1dc81955527f70e93f822

Merge pull request #1063 from javmarina/patch-1

Fixed wrong versions in AndroidExcludedRefs | 2018-07-25 18:31:55 | 3b4ebe3e2571377f93e9a6976e021324502a0f78

Fixed wrong versions in AndroidExcludedRefs

Commit https://android.googlesource.com/platform/frameworks/base/+/27db46850b708070452c0ce49daf5f79503fbde6 introduced this issue. This commit was first included in Jelly Bean 4.3 (JELLY_BEAN_MR2), not Jelly Bean 4.1 (JELLY_BEAN)
Commit https://android.googlesource.com/platform/frameworks/base/+/5200e1cb07190a1f6874d72a4561064cad3ee3e0 fixes this issue and was first included in Oreo 8.0 (O). Nougat still has this memory leak. | 2018-07-24 18:24:59 | e4778b25f2c6e65ebc485d255e38586c7d45ec97

Merge pull request #1057 from square/py/ui_bug

Fix drawing of start line | 2018-07-20 22:21:19 | af96577a7d19e4df9f63d95fd9c3bfd2adcddb5d

Avoid Toast crashes

Showing a toast can crash on API 25 because the Window Manager can throw a BadTokenException when addView is called.

This change fixes it by configuring the toast manually and calling the window manager directly. This is based on https://github.com/pyricau/frenchtoast/blob/master/frenchtoast/src/main/java/frenchtoast/Mixture.java#L49 .

Fixes #844 | 2018-07-20 16:11:22 | c9ebc5cf5099c093bde5d3309b2692cb0e2016d8

Fixing setup bug | 2018-06-28 04:07:09 | 505933817cf6e2eb0dad4a78d4c7c35a072b9868

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

Fix crash when pressing home from root screen

This bug only happens on older Android devices.

Fixes #1555 | 2019-09-11 00:52:13 | 108c3ecea8eb0923f9f046fbe5634a3967705279

Merge pull request #1559 from bric3/fix-primitive-array-dump-skip

Fixes the primitive array dump record skipping | 2019-09-09 22:16:57 | c0fd4d812cb8d6c5723231e501c121da2af86f06

Parsing and applying proguard mapping during heap analysis (#1542)

* Parsing and applying proguard mapping during heap analysis

* Parsing and applying proguard mapping during heap analysis

* Rebased onto master

* Post review changes and updated shark-cli to support mapping files

* Post review fixes

* Moving proguard mapping reader out of the analyzer and formatting fixes | 2019-08-30 16:54:20 | 66182a52069d9be59d0af6220aa9afd74218aa9b

fix images | 2019-08-27 20:02:50 | 8f5030e9faa8690217e1bd436274a3de5b9d3fb3

fix image links in docs | 2019-08-27 19:59:20 | edca56a947278508350bfa5dd33d3fa10699001f

Merge pull request #1549 from Armaxis/patch-1

Added section about using Detekt to Contributing | 2019-08-24 22:16:26 | c923d14909888860a99d5899af17f5b52c9b000f

Revert "Replaced accessor with a call to setter to fix the build issue"

This reverts commit 82db0398 | 2019-08-17 02:21:08 | c570cb9b0fd7bd7fcc88c4d3b529df8837e98fdc

Replaced accessor with a call to setter to fix the build issue | 2019-08-16 04:32:25 | 82db039843303044f91d36ba7c43595ab59bacd5

fix typo | 2019-08-02 15:31:17 | a2452f61e78e689efb59adaf71384d74447578b0

Add / fix android inspectors (#1491)

* Added MortarScope and ViewRootImpl inspectors
* Fixed the ContextWrapper inspector

Fixes #1490
Fixes #1389 | 2019-07-25 22:50:48 | 915f8359690a016a09e66608a041454b9c8c52cb

Documenting public APIs (#1476)

Also fixed naming and other things that weren't right.

Fixes #1474 | 2019-07-19 06:57:25 | 41c69a5d424b4236114c5ce1b077afdad38e57a5

Adding CLI for LeakCanary (#1456)

Example usage:
```
./gradlew leakcanary-cli:run --args='analyze-process com.example.leakcanary'

./gradlew leakcanary-cli:run --args='dump-process com.example.leakcanary'

./gradlew leakcanary-cli:run --args='analyze-file /path/to/heapdump.hprof'
```

Also fixed a bug in ShortestPathFinder which did not ignore null references in object arrays | 2019-07-11 19:11:30 | eded1c96e84f37393857ba4de2580aec784b2391

Behavior change & bugfixes for retained count notification (#1433)

* Bugfix: when tapping the "dump heap" notification, if the GC found no retained instance we didn't use a distinct notification id to communicate that, and then soon after we'd dismiss the notification that let's the user know there is no retained instances on tap.
* Bugfix: we weren't running the GC when checking for retained instances and the count was under the threshold
* Change: we now update the notification and keep it around for 30 seconds when the count goes to 0
* Change: the "no retained instance" notification that shows on tap is identical and also auto dismisses after 30 seconds.
* Change: we're checking for retained references (and running the GC) every 2 seconds instead of 5.

Fixes #1427 | 2019-07-03 20:55:47 | 968083a915343d881bd63e40587c070fde543732

Update how to fix a leak | 2019-06-25 05:46:56 | 177e7fd12933d99eca7a526851c53e598a03bf90

Text rendering tests (#1378)

* Added test coverage for text rendering
* Fixed bug: labels were not rendered on the last node (leaking instance)
* Matched exclusions are now rendered on their own line

Fixes #1375
Fixes #1350 | 2019-06-04 09:32:11 | 1926cb1db73f9583e11c557dbf2e5d46e3896a6e

Thread name based exclusions (#1353)

* Readded support for exclusions of local variable based on thread names
* Renamed ThreadExclusion to JavaLocalExclusion
* Fixed bug: KeyedWeakReference was not always ignored because its superclass is has a weakly reachable exclusion.
* Fixed bug: all root nodes had the same visit order as the first non root enqueued item, making it possible for a non root node to be dequeued before we're done with all roots.
* Redded gc root sorting
* Added tests to cover all uncovered bugs
* Added support for parsing StackFrameRecord

Fixes #1339 | 2019-05-20 13:17:18 | 6c2ee609efda323e88a4964d31fc5a5f0532f776

Reachability => LeakStatus (#1340)

* Combined leaking information from inspectors to solving conflicts while keeping all reasons
* Made reason from view leak inspector more obvious, and added label data about internals
* Moved reachability into LeakTraceElement
* Reachability renamed to LeakNodeStatus and leaking / not leaking
* ReachabilityInspector and Labeler are now functions with type aliases

Related to #1336: should fix the crash, though it's still unclear why AppCompatButton was a gc root there. | 2019-05-07 14:56:59 | 01210bbbfaecb3bcb6057c62b2195366d3bfa4f9

Revamp notifications (#1335)

* New notification that shows the count of retained instances. Tapping it triggers a heap dump. Fixes #1325
* Notifications are now split into two channels: default for results, and low for everything else.
* New config options: LeakCanary.config.dumpHeapWhenDebugging (default false) and LeakCanary.config.retainedVisibleThreshold (default 5)
* Replaced notification int constants and timestamps with resource ids.
* Don't show background notifications in instant apps (#1197) | 2019-05-05 16:38:26 | b14d9bc9c0a87119137bc0998bdec9314186dfcf

Highlighting new leaks (#1334)

New leaks are leaks that have a leak group that doesn't exist in any prior analysis.

* The notification now reports the count of leaks, with a split of new, known, and won't fix.
* The analysis success screen shows new leaks
* Moved description prefixes to be computed rather than inserted in the DB

Fixes #1328 | 2019-05-05 09:37:38 | f9a0518d4ddd69b782b6302caa3e3039787038e4

LeakSentry can be disabled (#1332)

LeakCanary has an enabled config option. Default is on in debug builds off in release builds.

Fixes #1327 | 2019-05-04 17:52:47 | f74f60901f34c751e8b8798d626678aa6233c893

Revert "fix trailing spaces per checkstyle"

This reverts commit ff17f879ec92ec326f8b1c6b7b8d77a5266d6622. | 2019-05-04 08:04:21 | 03136ca7dc1680299d710f79ca885412a1564144

Add test coverage for heap analysis (#1329)

* Fixed bug when reachability inspectors conflicts (reachable should win and erase unreachable)
* Added back support for leaking instances being empty objects, strings, primitive arrays or any object that we otherwise don't follow to find shortest paths. | 2019-05-04 07:51:02 | 59558e655d537c7654c411eebfd840773a8b77c9

Introducing exclusion priority (#1317)

* Add segmented FIFO queue

Unified several queues into one segmented FIFO queue. This will enable us to add several levels of priority.

* Introducing exclusion priority

* "excludedLeak" is now known as "won't fix leak", which matches its reality better. It's a leak that is known and real yet we're not fixing.
* Exclusion.alwaysExclude is replaced with Exclusion.status, with 3 possible values: NEVER_REACHABLE, WONT_FIX_LEAK, WEAKLY_REACHABLE.
* The shortest path finder will now follow weak references after all other paths have been exhausted.
* Removed class exclusion, was confusing, replaced with less lazy approach of listing fields to exclude
* VIEWLOCATIONHOLDER_ROOT should not have been always excluded, fixed.

Fixes #1173 ... well kinda. Instead of "non leaking retained instances", LeakCanary will report weakly reachable traces. Not sure if that'll help but it's a foundation we can build on. | 2019-04-30 17:44:15 | b0eedc553995e354e2382b3378bf0348801cd3c5

AllFieldsLabeler & cleanups (#1316)

* Add new optional labeler that prints all fields (useful for debugging)
* Move deprecated AnalysisResult to perflib
* Made DefaultAnalysisResultListener an object | 2019-04-30 07:08:29 | b9ee5356db265412db39c4c341880f305fbf2c76

fix format | 2019-04-22 06:25:09 | 4a2b158913e5a9eb0d5c6fdfbf949a80fc1b2c6b

Rename default to perflib and experimental to default (#1282)

* Remove experimental from module names

* Remove experimental prefix, add perflib prefix:

* update docs | 2019-04-19 06:01:39 | 425a9f24deb72691b02cdc85f80d177c05afebc5

fix list | 2019-04-18 21:55:43 | 8e3f9d26e8d3555bf934b99ac062aabc3aba528f

fix broken master | 2019-04-10 15:00:30 | f067ae53e050c5f52f47237440a6ac7eee3ca94c

fix broken build due to typo | 2019-04-10 05:44:19 | 7d4ddb4ffe3c9b0f30a84848675452dded0d4115

Leaking information aligned below simple class name. (#1258)

Also fixed issue where extraString + exclusionString were showing after the squiggly line.

Before: 
``` 
┬
├─ java.lang.Thread
│                 Leaking: NO (it's a GC root)
│                 ↓ thread Thread.<Java Local>
│                                ~~~~~~~~~~~~~ (named 'Thread-4')
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                 Leaking: UNKNOWN
│                 ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                     ~~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) 
```
After: 
``` 
┬
├─ java.lang.Thread
│            Leaking: NO (it's a GC root)
│            ↓ thread Thread.<Java Local> (named 'Thread-4')
│                            ~~~~~~~~~~~~
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                         Leaking: UNKNOWN
│                         ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                              ~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) ``` | 2019-04-05 20:11:47 | a938855585c7cf2522ffbd143d4bb66a234eea66

Add share to Stack Overflow button when viewing a leak (#1252)

* Add share to Stack Overflow button when viewing a leak

* Add question tag, lengthen toast and fix build failure. | 2019-04-04 20:49:50 | 8724d2aaffc07904517a3b823867802ca43233ae

Check if serviceInfo.processName is null. When LeakCanary runs on a seperate process and that process for some reason does not have a assigned processName, then we will crash on a NullPointerException. Also a debug log explaining this. (#1225) | 2019-04-01 19:20:40 | 3efc43608ed71dc20b0ad1e0e80e33d15249666f

fix master broken | 2019-04-01 19:07:27 | fe42130029174681a708b7d8622412efbaf81e73

fix trailing spaces per checkstyle | 2019-03-29 22:34:58 | ff17f879ec92ec326f8b1c6b7b8d77a5266d6622

Fix GC Root bugs that missed leaks (#1168)

In Perflib, Snapshot.getGcRoots() only returns the GC roots from the first heap. Based on empirical evidence, it seems like Android has 4 heaps, and the GC Roots used to only be in the first heap, but more recent versions of Android have GC Roots in other heaps as well.

This means LeakCanary would sometimes show "No Leak Found" when there actually was a leak.

Fixes #1163 | 2019-01-10 23:32:27 | 64b6e5a41796ae1587c50c8cc860cea25f28f382

fix typo | 2018-10-17 00:43:01 | 044b1e4827bc71ec008dc3f7e43c78f58885f1e1

Fix LeakCanary toasting (#1116)

- Prior attempts to get it to work with the application context turned out to be buggy.
- This makes LeakCanary use whatever the current resumed activity is, if any.
- If there is no resumed activity, then the toast isn't displayed.

This supersedes #1080 | 2018-10-16 13:23:14 | 0e39e2eea79bc05bf7147a4074dd7163f7c401ff

fix the wrong word (#1111) | 2018-10-16 01:25:28 | 636b9b6c2b39c0c887c9ed78e904239db9bc131e

Merge pull request #1104 from IlyaGulya/bug/travis-ci-cache-fix

Fix travis caching and improve build time. | 2018-09-22 21:25:59 | 344728b906daf6d010f66bdf4ccc29ad8fedede5

Error prone 2.3.1 + suggested fix and specify version

See http://errorprone.info/bugpattern/StringSplitter | 2018-08-22 07:37:33 | a6b6960d73a1da9661f4e85254570bf5f867f954

Merge pull request #1089 from hzsweers/z/fixAnother

Quick followup to #1088 | 2018-08-22 03:15:15 | be973f5f5da6a3516aedab98e639690697617747

Merge pull request #1087 from Goddchen/patch-2

Updated german translation | 2018-08-20 13:52:47 | b43c279b3e1623c193e1dc81955527f70e93f822

Merge pull request #1063 from javmarina/patch-1

Fixed wrong versions in AndroidExcludedRefs | 2018-07-25 18:31:55 | 3b4ebe3e2571377f93e9a6976e021324502a0f78

Fixed wrong versions in AndroidExcludedRefs

Commit https://android.googlesource.com/platform/frameworks/base/+/27db46850b708070452c0ce49daf5f79503fbde6 introduced this issue. This commit was first included in Jelly Bean 4.3 (JELLY_BEAN_MR2), not Jelly Bean 4.1 (JELLY_BEAN)
Commit https://android.googlesource.com/platform/frameworks/base/+/5200e1cb07190a1f6874d72a4561064cad3ee3e0 fixes this issue and was first included in Oreo 8.0 (O). Nougat still has this memory leak. | 2018-07-24 18:24:59 | e4778b25f2c6e65ebc485d255e38586c7d45ec97

Merge pull request #1057 from square/py/ui_bug

Fix drawing of start line | 2018-07-20 22:21:19 | af96577a7d19e4df9f63d95fd9c3bfd2adcddb5d

Avoid Toast crashes

Showing a toast can crash on API 25 because the Window Manager can throw a BadTokenException when addView is called.

This change fixes it by configuring the toast manually and calling the window manager directly. This is based on https://github.com/pyricau/frenchtoast/blob/master/frenchtoast/src/main/java/frenchtoast/Mixture.java#L49 .

Fixes #844 | 2018-07-20 16:11:22 | c9ebc5cf5099c093bde5d3309b2692cb0e2016d8

Fixing setup bug | 2018-06-28 04:07:09 | 505933817cf6e2eb0dad4a78d4c7c35a072b9868

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

fix typo | 2018-10-17 00:43:01 | 044b1e4827bc71ec008dc3f7e43c78f58885f1e1

Fix LeakCanary toasting (#1116)

- Prior attempts to get it to work with the application context turned out to be buggy.
- This makes LeakCanary use whatever the current resumed activity is, if any.
- If there is no resumed activity, then the toast isn't displayed.

This supersedes #1080 | 2018-10-16 13:23:14 | 0e39e2eea79bc05bf7147a4074dd7163f7c401ff

fix the wrong word (#1111) | 2018-10-16 01:25:28 | 636b9b6c2b39c0c887c9ed78e904239db9bc131e

Merge pull request #1104 from IlyaGulya/bug/travis-ci-cache-fix

Fix travis caching and improve build time. | 2018-09-22 21:25:59 | 344728b906daf6d010f66bdf4ccc29ad8fedede5

Error prone 2.3.1 + suggested fix and specify version

See http://errorprone.info/bugpattern/StringSplitter | 2018-08-22 07:37:33 | a6b6960d73a1da9661f4e85254570bf5f867f954

Merge pull request #1089 from hzsweers/z/fixAnother

Quick followup to #1088 | 2018-08-22 03:15:15 | be973f5f5da6a3516aedab98e639690697617747

Merge pull request #1087 from Goddchen/patch-2

Updated german translation | 2018-08-20 13:52:47 | b43c279b3e1623c193e1dc81955527f70e93f822

Merge pull request #1063 from javmarina/patch-1

Fixed wrong versions in AndroidExcludedRefs | 2018-07-25 18:31:55 | 3b4ebe3e2571377f93e9a6976e021324502a0f78

Fixed wrong versions in AndroidExcludedRefs

Commit https://android.googlesource.com/platform/frameworks/base/+/27db46850b708070452c0ce49daf5f79503fbde6 introduced this issue. This commit was first included in Jelly Bean 4.3 (JELLY_BEAN_MR2), not Jelly Bean 4.1 (JELLY_BEAN)
Commit https://android.googlesource.com/platform/frameworks/base/+/5200e1cb07190a1f6874d72a4561064cad3ee3e0 fixes this issue and was first included in Oreo 8.0 (O). Nougat still has this memory leak. | 2018-07-24 18:24:59 | e4778b25f2c6e65ebc485d255e38586c7d45ec97

Merge pull request #1057 from square/py/ui_bug

Fix drawing of start line | 2018-07-20 22:21:19 | af96577a7d19e4df9f63d95fd9c3bfd2adcddb5d

Avoid Toast crashes

Showing a toast can crash on API 25 because the Window Manager can throw a BadTokenException when addView is called.

This change fixes it by configuring the toast manually and calling the window manager directly. This is based on https://github.com/pyricau/frenchtoast/blob/master/frenchtoast/src/main/java/frenchtoast/Mixture.java#L49 .

Fixes #844 | 2018-07-20 16:11:22 | c9ebc5cf5099c093bde5d3309b2692cb0e2016d8

Fixing setup bug | 2018-06-28 04:07:09 | 505933817cf6e2eb0dad4a78d4c7c35a072b9868

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

Rename default to perflib and experimental to default (#1282)

* Remove experimental from module names

* Remove experimental prefix, add perflib prefix:

* update docs | 2019-04-19 06:01:39 | 425a9f24deb72691b02cdc85f80d177c05afebc5

fix list | 2019-04-18 21:55:43 | 8e3f9d26e8d3555bf934b99ac062aabc3aba528f

fix broken master | 2019-04-10 15:00:30 | f067ae53e050c5f52f47237440a6ac7eee3ca94c

fix broken build due to typo | 2019-04-10 05:44:19 | 7d4ddb4ffe3c9b0f30a84848675452dded0d4115

Leaking information aligned below simple class name. (#1258)

Also fixed issue where extraString + exclusionString were showing after the squiggly line.

Before: 
``` 
┬
├─ java.lang.Thread
│                 Leaking: NO (it's a GC root)
│                 ↓ thread Thread.<Java Local>
│                                ~~~~~~~~~~~~~ (named 'Thread-4')
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                 Leaking: UNKNOWN
│                 ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                     ~~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) 
```
After: 
``` 
┬
├─ java.lang.Thread
│            Leaking: NO (it's a GC root)
│            ↓ thread Thread.<Java Local> (named 'Thread-4')
│                            ~~~~~~~~~~~~
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                         Leaking: UNKNOWN
│                         ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                              ~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) ``` | 2019-04-05 20:11:47 | a938855585c7cf2522ffbd143d4bb66a234eea66

Add share to Stack Overflow button when viewing a leak (#1252)

* Add share to Stack Overflow button when viewing a leak

* Add question tag, lengthen toast and fix build failure. | 2019-04-04 20:49:50 | 8724d2aaffc07904517a3b823867802ca43233ae

Check if serviceInfo.processName is null. When LeakCanary runs on a seperate process and that process for some reason does not have a assigned processName, then we will crash on a NullPointerException. Also a debug log explaining this. (#1225) | 2019-04-01 19:20:40 | 3efc43608ed71dc20b0ad1e0e80e33d15249666f

fix master broken | 2019-04-01 19:07:27 | fe42130029174681a708b7d8622412efbaf81e73

Fix GC Root bugs that missed leaks (#1168)

In Perflib, Snapshot.getGcRoots() only returns the GC roots from the first heap. Based on empirical evidence, it seems like Android has 4 heaps, and the GC Roots used to only be in the first heap, but more recent versions of Android have GC Roots in other heaps as well.

This means LeakCanary would sometimes show "No Leak Found" when there actually was a leak.

Fixes #1163 | 2019-01-10 23:32:27 | 64b6e5a41796ae1587c50c8cc860cea25f28f382

fix typo | 2018-10-17 00:43:01 | 044b1e4827bc71ec008dc3f7e43c78f58885f1e1

Fix LeakCanary toasting (#1116)

- Prior attempts to get it to work with the application context turned out to be buggy.
- This makes LeakCanary use whatever the current resumed activity is, if any.
- If there is no resumed activity, then the toast isn't displayed.

This supersedes #1080 | 2018-10-16 13:23:14 | 0e39e2eea79bc05bf7147a4074dd7163f7c401ff

fix the wrong word (#1111) | 2018-10-16 01:25:28 | 636b9b6c2b39c0c887c9ed78e904239db9bc131e

Merge pull request #1104 from IlyaGulya/bug/travis-ci-cache-fix

Fix travis caching and improve build time. | 2018-09-22 21:25:59 | 344728b906daf6d010f66bdf4ccc29ad8fedede5

Error prone 2.3.1 + suggested fix and specify version

See http://errorprone.info/bugpattern/StringSplitter | 2018-08-22 07:37:33 | a6b6960d73a1da9661f4e85254570bf5f867f954

Merge pull request #1089 from hzsweers/z/fixAnother

Quick followup to #1088 | 2018-08-22 03:15:15 | be973f5f5da6a3516aedab98e639690697617747

Merge pull request #1087 from Goddchen/patch-2

Updated german translation | 2018-08-20 13:52:47 | b43c279b3e1623c193e1dc81955527f70e93f822

Merge pull request #1063 from javmarina/patch-1

Fixed wrong versions in AndroidExcludedRefs | 2018-07-25 18:31:55 | 3b4ebe3e2571377f93e9a6976e021324502a0f78

Fixed wrong versions in AndroidExcludedRefs

Commit https://android.googlesource.com/platform/frameworks/base/+/27db46850b708070452c0ce49daf5f79503fbde6 introduced this issue. This commit was first included in Jelly Bean 4.3 (JELLY_BEAN_MR2), not Jelly Bean 4.1 (JELLY_BEAN)
Commit https://android.googlesource.com/platform/frameworks/base/+/5200e1cb07190a1f6874d72a4561064cad3ee3e0 fixes this issue and was first included in Oreo 8.0 (O). Nougat still has this memory leak. | 2018-07-24 18:24:59 | e4778b25f2c6e65ebc485d255e38586c7d45ec97

Merge pull request #1057 from square/py/ui_bug

Fix drawing of start line | 2018-07-20 22:21:19 | af96577a7d19e4df9f63d95fd9c3bfd2adcddb5d

Avoid Toast crashes

Showing a toast can crash on API 25 because the Window Manager can throw a BadTokenException when addView is called.

This change fixes it by configuring the toast manually and calling the window manager directly. This is based on https://github.com/pyricau/frenchtoast/blob/master/frenchtoast/src/main/java/frenchtoast/Mixture.java#L49 .

Fixes #844 | 2018-07-20 16:11:22 | c9ebc5cf5099c093bde5d3309b2692cb0e2016d8

Fixing setup bug | 2018-06-28 04:07:09 | 505933817cf6e2eb0dad4a78d4c7c35a072b9868

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

Rename default to perflib and experimental to default (#1282)

* Remove experimental from module names

* Remove experimental prefix, add perflib prefix:

* update docs | 2019-04-19 06:01:39 | 425a9f24deb72691b02cdc85f80d177c05afebc5

fix list | 2019-04-18 21:55:43 | 8e3f9d26e8d3555bf934b99ac062aabc3aba528f

fix broken master | 2019-04-10 15:00:30 | f067ae53e050c5f52f47237440a6ac7eee3ca94c

fix broken build due to typo | 2019-04-10 05:44:19 | 7d4ddb4ffe3c9b0f30a84848675452dded0d4115

Leaking information aligned below simple class name. (#1258)

Also fixed issue where extraString + exclusionString were showing after the squiggly line.

Before: 
``` 
┬
├─ java.lang.Thread
│                 Leaking: NO (it's a GC root)
│                 ↓ thread Thread.<Java Local>
│                                ~~~~~~~~~~~~~ (named 'Thread-4')
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                 Leaking: UNKNOWN
│                 ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                     ~~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) 
```
After: 
``` 
┬
├─ java.lang.Thread
│            Leaking: NO (it's a GC root)
│            ↓ thread Thread.<Java Local> (named 'Thread-4')
│                            ~~~~~~~~~~~~
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                         Leaking: UNKNOWN
│                         ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                              ~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) ``` | 2019-04-05 20:11:47 | a938855585c7cf2522ffbd143d4bb66a234eea66

Add share to Stack Overflow button when viewing a leak (#1252)

* Add share to Stack Overflow button when viewing a leak

* Add question tag, lengthen toast and fix build failure. | 2019-04-04 20:49:50 | 8724d2aaffc07904517a3b823867802ca43233ae

Check if serviceInfo.processName is null. When LeakCanary runs on a seperate process and that process for some reason does not have a assigned processName, then we will crash on a NullPointerException. Also a debug log explaining this. (#1225) | 2019-04-01 19:20:40 | 3efc43608ed71dc20b0ad1e0e80e33d15249666f

fix master broken | 2019-04-01 19:07:27 | fe42130029174681a708b7d8622412efbaf81e73

Fix GC Root bugs that missed leaks (#1168)

In Perflib, Snapshot.getGcRoots() only returns the GC roots from the first heap. Based on empirical evidence, it seems like Android has 4 heaps, and the GC Roots used to only be in the first heap, but more recent versions of Android have GC Roots in other heaps as well.

This means LeakCanary would sometimes show "No Leak Found" when there actually was a leak.

Fixes #1163 | 2019-01-10 23:32:27 | 64b6e5a41796ae1587c50c8cc860cea25f28f382

fix typo | 2018-10-17 00:43:01 | 044b1e4827bc71ec008dc3f7e43c78f58885f1e1

Fix LeakCanary toasting (#1116)

- Prior attempts to get it to work with the application context turned out to be buggy.
- This makes LeakCanary use whatever the current resumed activity is, if any.
- If there is no resumed activity, then the toast isn't displayed.

This supersedes #1080 | 2018-10-16 13:23:14 | 0e39e2eea79bc05bf7147a4074dd7163f7c401ff

fix the wrong word (#1111) | 2018-10-16 01:25:28 | 636b9b6c2b39c0c887c9ed78e904239db9bc131e

Merge pull request #1104 from IlyaGulya/bug/travis-ci-cache-fix

Fix travis caching and improve build time. | 2018-09-22 21:25:59 | 344728b906daf6d010f66bdf4ccc29ad8fedede5

Error prone 2.3.1 + suggested fix and specify version

See http://errorprone.info/bugpattern/StringSplitter | 2018-08-22 07:37:33 | a6b6960d73a1da9661f4e85254570bf5f867f954

Merge pull request #1089 from hzsweers/z/fixAnother

Quick followup to #1088 | 2018-08-22 03:15:15 | be973f5f5da6a3516aedab98e639690697617747

Merge pull request #1087 from Goddchen/patch-2

Updated german translation | 2018-08-20 13:52:47 | b43c279b3e1623c193e1dc81955527f70e93f822

Merge pull request #1063 from javmarina/patch-1

Fixed wrong versions in AndroidExcludedRefs | 2018-07-25 18:31:55 | 3b4ebe3e2571377f93e9a6976e021324502a0f78

Fixed wrong versions in AndroidExcludedRefs

Commit https://android.googlesource.com/platform/frameworks/base/+/27db46850b708070452c0ce49daf5f79503fbde6 introduced this issue. This commit was first included in Jelly Bean 4.3 (JELLY_BEAN_MR2), not Jelly Bean 4.1 (JELLY_BEAN)
Commit https://android.googlesource.com/platform/frameworks/base/+/5200e1cb07190a1f6874d72a4561064cad3ee3e0 fixes this issue and was first included in Oreo 8.0 (O). Nougat still has this memory leak. | 2018-07-24 18:24:59 | e4778b25f2c6e65ebc485d255e38586c7d45ec97

Merge pull request #1057 from square/py/ui_bug

Fix drawing of start line | 2018-07-20 22:21:19 | af96577a7d19e4df9f63d95fd9c3bfd2adcddb5d

Avoid Toast crashes

Showing a toast can crash on API 25 because the Window Manager can throw a BadTokenException when addView is called.

This change fixes it by configuring the toast manually and calling the window manager directly. This is based on https://github.com/pyricau/frenchtoast/blob/master/frenchtoast/src/main/java/frenchtoast/Mixture.java#L49 .

Fixes #844 | 2018-07-20 16:11:22 | c9ebc5cf5099c093bde5d3309b2692cb0e2016d8

Fixing setup bug | 2018-06-28 04:07:09 | 505933817cf6e2eb0dad4a78d4c7c35a072b9868

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

Check if serviceInfo.processName is null. When LeakCanary runs on a seperate process and that process for some reason does not have a assigned processName, then we will crash on a NullPointerException. Also a debug log explaining this. (#1225) | 2019-04-01 19:20:40 | 3efc43608ed71dc20b0ad1e0e80e33d15249666f

fix master broken | 2019-04-01 19:07:27 | fe42130029174681a708b7d8622412efbaf81e73

Fix GC Root bugs that missed leaks (#1168)

In Perflib, Snapshot.getGcRoots() only returns the GC roots from the first heap. Based on empirical evidence, it seems like Android has 4 heaps, and the GC Roots used to only be in the first heap, but more recent versions of Android have GC Roots in other heaps as well.

This means LeakCanary would sometimes show "No Leak Found" when there actually was a leak.

Fixes #1163 | 2019-01-10 23:32:27 | 64b6e5a41796ae1587c50c8cc860cea25f28f382

fix typo | 2018-10-17 00:43:01 | 044b1e4827bc71ec008dc3f7e43c78f58885f1e1

Fix LeakCanary toasting (#1116)

- Prior attempts to get it to work with the application context turned out to be buggy.
- This makes LeakCanary use whatever the current resumed activity is, if any.
- If there is no resumed activity, then the toast isn't displayed.

This supersedes #1080 | 2018-10-16 13:23:14 | 0e39e2eea79bc05bf7147a4074dd7163f7c401ff

fix the wrong word (#1111) | 2018-10-16 01:25:28 | 636b9b6c2b39c0c887c9ed78e904239db9bc131e

Merge pull request #1104 from IlyaGulya/bug/travis-ci-cache-fix

Fix travis caching and improve build time. | 2018-09-22 21:25:59 | 344728b906daf6d010f66bdf4ccc29ad8fedede5

Error prone 2.3.1 + suggested fix and specify version

See http://errorprone.info/bugpattern/StringSplitter | 2018-08-22 07:37:33 | a6b6960d73a1da9661f4e85254570bf5f867f954

Merge pull request #1089 from hzsweers/z/fixAnother

Quick followup to #1088 | 2018-08-22 03:15:15 | be973f5f5da6a3516aedab98e639690697617747

Merge pull request #1087 from Goddchen/patch-2

Updated german translation | 2018-08-20 13:52:47 | b43c279b3e1623c193e1dc81955527f70e93f822

Merge pull request #1063 from javmarina/patch-1

Fixed wrong versions in AndroidExcludedRefs | 2018-07-25 18:31:55 | 3b4ebe3e2571377f93e9a6976e021324502a0f78

Fixed wrong versions in AndroidExcludedRefs

Commit https://android.googlesource.com/platform/frameworks/base/+/27db46850b708070452c0ce49daf5f79503fbde6 introduced this issue. This commit was first included in Jelly Bean 4.3 (JELLY_BEAN_MR2), not Jelly Bean 4.1 (JELLY_BEAN)
Commit https://android.googlesource.com/platform/frameworks/base/+/5200e1cb07190a1f6874d72a4561064cad3ee3e0 fixes this issue and was first included in Oreo 8.0 (O). Nougat still has this memory leak. | 2018-07-24 18:24:59 | e4778b25f2c6e65ebc485d255e38586c7d45ec97

Merge pull request #1057 from square/py/ui_bug

Fix drawing of start line | 2018-07-20 22:21:19 | af96577a7d19e4df9f63d95fd9c3bfd2adcddb5d

Avoid Toast crashes

Showing a toast can crash on API 25 because the Window Manager can throw a BadTokenException when addView is called.

This change fixes it by configuring the toast manually and calling the window manager directly. This is based on https://github.com/pyricau/frenchtoast/blob/master/frenchtoast/src/main/java/frenchtoast/Mixture.java#L49 .

Fixes #844 | 2018-07-20 16:11:22 | c9ebc5cf5099c093bde5d3309b2692cb0e2016d8

Fixing setup bug | 2018-06-28 04:07:09 | 505933817cf6e2eb0dad4a78d4c7c35a072b9868

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

Behavior change & bugfixes for retained count notification (#1433)

* Bugfix: when tapping the "dump heap" notification, if the GC found no retained instance we didn't use a distinct notification id to communicate that, and then soon after we'd dismiss the notification that let's the user know there is no retained instances on tap.
* Bugfix: we weren't running the GC when checking for retained instances and the count was under the threshold
* Change: we now update the notification and keep it around for 30 seconds when the count goes to 0
* Change: the "no retained instance" notification that shows on tap is identical and also auto dismisses after 30 seconds.
* Change: we're checking for retained references (and running the GC) every 2 seconds instead of 5.

Fixes #1427 | 2019-07-03 20:55:47 | 968083a915343d881bd63e40587c070fde543732

Update how to fix a leak | 2019-06-25 05:46:56 | 177e7fd12933d99eca7a526851c53e598a03bf90

Text rendering tests (#1378)

* Added test coverage for text rendering
* Fixed bug: labels were not rendered on the last node (leaking instance)
* Matched exclusions are now rendered on their own line

Fixes #1375
Fixes #1350 | 2019-06-04 09:32:11 | 1926cb1db73f9583e11c557dbf2e5d46e3896a6e

Thread name based exclusions (#1353)

* Readded support for exclusions of local variable based on thread names
* Renamed ThreadExclusion to JavaLocalExclusion
* Fixed bug: KeyedWeakReference was not always ignored because its superclass is has a weakly reachable exclusion.
* Fixed bug: all root nodes had the same visit order as the first non root enqueued item, making it possible for a non root node to be dequeued before we're done with all roots.
* Redded gc root sorting
* Added tests to cover all uncovered bugs
* Added support for parsing StackFrameRecord

Fixes #1339 | 2019-05-20 13:17:18 | 6c2ee609efda323e88a4964d31fc5a5f0532f776

Reachability => LeakStatus (#1340)

* Combined leaking information from inspectors to solving conflicts while keeping all reasons
* Made reason from view leak inspector more obvious, and added label data about internals
* Moved reachability into LeakTraceElement
* Reachability renamed to LeakNodeStatus and leaking / not leaking
* ReachabilityInspector and Labeler are now functions with type aliases

Related to #1336: should fix the crash, though it's still unclear why AppCompatButton was a gc root there. | 2019-05-07 14:56:59 | 01210bbbfaecb3bcb6057c62b2195366d3bfa4f9

Revamp notifications (#1335)

* New notification that shows the count of retained instances. Tapping it triggers a heap dump. Fixes #1325
* Notifications are now split into two channels: default for results, and low for everything else.
* New config options: LeakCanary.config.dumpHeapWhenDebugging (default false) and LeakCanary.config.retainedVisibleThreshold (default 5)
* Replaced notification int constants and timestamps with resource ids.
* Don't show background notifications in instant apps (#1197) | 2019-05-05 16:38:26 | b14d9bc9c0a87119137bc0998bdec9314186dfcf

Highlighting new leaks (#1334)

New leaks are leaks that have a leak group that doesn't exist in any prior analysis.

* The notification now reports the count of leaks, with a split of new, known, and won't fix.
* The analysis success screen shows new leaks
* Moved description prefixes to be computed rather than inserted in the DB

Fixes #1328 | 2019-05-05 09:37:38 | f9a0518d4ddd69b782b6302caa3e3039787038e4

LeakSentry can be disabled (#1332)

LeakCanary has an enabled config option. Default is on in debug builds off in release builds.

Fixes #1327 | 2019-05-04 17:52:47 | f74f60901f34c751e8b8798d626678aa6233c893

Revert "fix trailing spaces per checkstyle"

This reverts commit ff17f879ec92ec326f8b1c6b7b8d77a5266d6622. | 2019-05-04 08:04:21 | 03136ca7dc1680299d710f79ca885412a1564144

Add test coverage for heap analysis (#1329)

* Fixed bug when reachability inspectors conflicts (reachable should win and erase unreachable)
* Added back support for leaking instances being empty objects, strings, primitive arrays or any object that we otherwise don't follow to find shortest paths. | 2019-05-04 07:51:02 | 59558e655d537c7654c411eebfd840773a8b77c9

Introducing exclusion priority (#1317)

* Add segmented FIFO queue

Unified several queues into one segmented FIFO queue. This will enable us to add several levels of priority.

* Introducing exclusion priority

* "excludedLeak" is now known as "won't fix leak", which matches its reality better. It's a leak that is known and real yet we're not fixing.
* Exclusion.alwaysExclude is replaced with Exclusion.status, with 3 possible values: NEVER_REACHABLE, WONT_FIX_LEAK, WEAKLY_REACHABLE.
* The shortest path finder will now follow weak references after all other paths have been exhausted.
* Removed class exclusion, was confusing, replaced with less lazy approach of listing fields to exclude
* VIEWLOCATIONHOLDER_ROOT should not have been always excluded, fixed.

Fixes #1173 ... well kinda. Instead of "non leaking retained instances", LeakCanary will report weakly reachable traces. Not sure if that'll help but it's a foundation we can build on. | 2019-04-30 17:44:15 | b0eedc553995e354e2382b3378bf0348801cd3c5

AllFieldsLabeler & cleanups (#1316)

* Add new optional labeler that prints all fields (useful for debugging)
* Move deprecated AnalysisResult to perflib
* Made DefaultAnalysisResultListener an object | 2019-04-30 07:08:29 | b9ee5356db265412db39c4c341880f305fbf2c76

fix format | 2019-04-22 06:25:09 | 4a2b158913e5a9eb0d5c6fdfbf949a80fc1b2c6b

Rename default to perflib and experimental to default (#1282)

* Remove experimental from module names

* Remove experimental prefix, add perflib prefix:

* update docs | 2019-04-19 06:01:39 | 425a9f24deb72691b02cdc85f80d177c05afebc5

fix list | 2019-04-18 21:55:43 | 8e3f9d26e8d3555bf934b99ac062aabc3aba528f

fix broken master | 2019-04-10 15:00:30 | f067ae53e050c5f52f47237440a6ac7eee3ca94c

fix broken build due to typo | 2019-04-10 05:44:19 | 7d4ddb4ffe3c9b0f30a84848675452dded0d4115

Leaking information aligned below simple class name. (#1258)

Also fixed issue where extraString + exclusionString were showing after the squiggly line.

Before: 
``` 
┬
├─ java.lang.Thread
│                 Leaking: NO (it's a GC root)
│                 ↓ thread Thread.<Java Local>
│                                ~~~~~~~~~~~~~ (named 'Thread-4')
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                 Leaking: UNKNOWN
│                 ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                     ~~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) 
```
After: 
``` 
┬
├─ java.lang.Thread
│            Leaking: NO (it's a GC root)
│            ↓ thread Thread.<Java Local> (named 'Thread-4')
│                            ~~~~~~~~~~~~
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                         Leaking: UNKNOWN
│                         ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                              ~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) ``` | 2019-04-05 20:11:47 | a938855585c7cf2522ffbd143d4bb66a234eea66

Add share to Stack Overflow button when viewing a leak (#1252)

* Add share to Stack Overflow button when viewing a leak

* Add question tag, lengthen toast and fix build failure. | 2019-04-04 20:49:50 | 8724d2aaffc07904517a3b823867802ca43233ae

Check if serviceInfo.processName is null. When LeakCanary runs on a seperate process and that process for some reason does not have a assigned processName, then we will crash on a NullPointerException. Also a debug log explaining this. (#1225) | 2019-04-01 19:20:40 | 3efc43608ed71dc20b0ad1e0e80e33d15249666f

fix master broken | 2019-04-01 19:07:27 | fe42130029174681a708b7d8622412efbaf81e73

fix trailing spaces per checkstyle | 2019-03-29 22:34:58 | ff17f879ec92ec326f8b1c6b7b8d77a5266d6622

Fix GC Root bugs that missed leaks (#1168)

In Perflib, Snapshot.getGcRoots() only returns the GC roots from the first heap. Based on empirical evidence, it seems like Android has 4 heaps, and the GC Roots used to only be in the first heap, but more recent versions of Android have GC Roots in other heaps as well.

This means LeakCanary would sometimes show "No Leak Found" when there actually was a leak.

Fixes #1163 | 2019-01-10 23:32:27 | 64b6e5a41796ae1587c50c8cc860cea25f28f382

fix typo | 2018-10-17 00:43:01 | 044b1e4827bc71ec008dc3f7e43c78f58885f1e1

Fix LeakCanary toasting (#1116)

- Prior attempts to get it to work with the application context turned out to be buggy.
- This makes LeakCanary use whatever the current resumed activity is, if any.
- If there is no resumed activity, then the toast isn't displayed.

This supersedes #1080 | 2018-10-16 13:23:14 | 0e39e2eea79bc05bf7147a4074dd7163f7c401ff

fix the wrong word (#1111) | 2018-10-16 01:25:28 | 636b9b6c2b39c0c887c9ed78e904239db9bc131e

Merge pull request #1104 from IlyaGulya/bug/travis-ci-cache-fix

Fix travis caching and improve build time. | 2018-09-22 21:25:59 | 344728b906daf6d010f66bdf4ccc29ad8fedede5

Error prone 2.3.1 + suggested fix and specify version

See http://errorprone.info/bugpattern/StringSplitter | 2018-08-22 07:37:33 | a6b6960d73a1da9661f4e85254570bf5f867f954

Merge pull request #1089 from hzsweers/z/fixAnother

Quick followup to #1088 | 2018-08-22 03:15:15 | be973f5f5da6a3516aedab98e639690697617747

Merge pull request #1087 from Goddchen/patch-2

Updated german translation | 2018-08-20 13:52:47 | b43c279b3e1623c193e1dc81955527f70e93f822

Merge pull request #1063 from javmarina/patch-1

Fixed wrong versions in AndroidExcludedRefs | 2018-07-25 18:31:55 | 3b4ebe3e2571377f93e9a6976e021324502a0f78

Fixed wrong versions in AndroidExcludedRefs

Commit https://android.googlesource.com/platform/frameworks/base/+/27db46850b708070452c0ce49daf5f79503fbde6 introduced this issue. This commit was first included in Jelly Bean 4.3 (JELLY_BEAN_MR2), not Jelly Bean 4.1 (JELLY_BEAN)
Commit https://android.googlesource.com/platform/frameworks/base/+/5200e1cb07190a1f6874d72a4561064cad3ee3e0 fixes this issue and was first included in Oreo 8.0 (O). Nougat still has this memory leak. | 2018-07-24 18:24:59 | e4778b25f2c6e65ebc485d255e38586c7d45ec97

Merge pull request #1057 from square/py/ui_bug

Fix drawing of start line | 2018-07-20 22:21:19 | af96577a7d19e4df9f63d95fd9c3bfd2adcddb5d

Avoid Toast crashes

Showing a toast can crash on API 25 because the Window Manager can throw a BadTokenException when addView is called.

This change fixes it by configuring the toast manually and calling the window manager directly. This is based on https://github.com/pyricau/frenchtoast/blob/master/frenchtoast/src/main/java/frenchtoast/Mixture.java#L49 .

Fixes #844 | 2018-07-20 16:11:22 | c9ebc5cf5099c093bde5d3309b2692cb0e2016d8

Fixing setup bug | 2018-06-28 04:07:09 | 505933817cf6e2eb0dad4a78d4c7c35a072b9868

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

Merge pull request #1559 from bric3/fix-primitive-array-dump-skip

Fixes the primitive array dump record skipping | 2019-09-09 22:16:57 | c0fd4d812cb8d6c5723231e501c121da2af86f06

Parsing and applying proguard mapping during heap analysis (#1542)

* Parsing and applying proguard mapping during heap analysis

* Parsing and applying proguard mapping during heap analysis

* Rebased onto master

* Post review changes and updated shark-cli to support mapping files

* Post review fixes

* Moving proguard mapping reader out of the analyzer and formatting fixes | 2019-08-30 16:54:20 | 66182a52069d9be59d0af6220aa9afd74218aa9b

fix images | 2019-08-27 20:02:50 | 8f5030e9faa8690217e1bd436274a3de5b9d3fb3

fix image links in docs | 2019-08-27 19:59:20 | edca56a947278508350bfa5dd33d3fa10699001f

Merge pull request #1549 from Armaxis/patch-1

Added section about using Detekt to Contributing | 2019-08-24 22:16:26 | c923d14909888860a99d5899af17f5b52c9b000f

Revert "Replaced accessor with a call to setter to fix the build issue"

This reverts commit 82db0398 | 2019-08-17 02:21:08 | c570cb9b0fd7bd7fcc88c4d3b529df8837e98fdc

Replaced accessor with a call to setter to fix the build issue | 2019-08-16 04:32:25 | 82db039843303044f91d36ba7c43595ab59bacd5

fix typo | 2019-08-02 15:31:17 | a2452f61e78e689efb59adaf71384d74447578b0

Add / fix android inspectors (#1491)

* Added MortarScope and ViewRootImpl inspectors
* Fixed the ContextWrapper inspector

Fixes #1490
Fixes #1389 | 2019-07-25 22:50:48 | 915f8359690a016a09e66608a041454b9c8c52cb

Documenting public APIs (#1476)

Also fixed naming and other things that weren't right.

Fixes #1474 | 2019-07-19 06:57:25 | 41c69a5d424b4236114c5ce1b077afdad38e57a5

Adding CLI for LeakCanary (#1456)

Example usage:
```
./gradlew leakcanary-cli:run --args='analyze-process com.example.leakcanary'

./gradlew leakcanary-cli:run --args='dump-process com.example.leakcanary'

./gradlew leakcanary-cli:run --args='analyze-file /path/to/heapdump.hprof'
```

Also fixed a bug in ShortestPathFinder which did not ignore null references in object arrays | 2019-07-11 19:11:30 | eded1c96e84f37393857ba4de2580aec784b2391

Behavior change & bugfixes for retained count notification (#1433)

* Bugfix: when tapping the "dump heap" notification, if the GC found no retained instance we didn't use a distinct notification id to communicate that, and then soon after we'd dismiss the notification that let's the user know there is no retained instances on tap.
* Bugfix: we weren't running the GC when checking for retained instances and the count was under the threshold
* Change: we now update the notification and keep it around for 30 seconds when the count goes to 0
* Change: the "no retained instance" notification that shows on tap is identical and also auto dismisses after 30 seconds.
* Change: we're checking for retained references (and running the GC) every 2 seconds instead of 5.

Fixes #1427 | 2019-07-03 20:55:47 | 968083a915343d881bd63e40587c070fde543732

Update how to fix a leak | 2019-06-25 05:46:56 | 177e7fd12933d99eca7a526851c53e598a03bf90

Text rendering tests (#1378)

* Added test coverage for text rendering
* Fixed bug: labels were not rendered on the last node (leaking instance)
* Matched exclusions are now rendered on their own line

Fixes #1375
Fixes #1350 | 2019-06-04 09:32:11 | 1926cb1db73f9583e11c557dbf2e5d46e3896a6e

Thread name based exclusions (#1353)

* Readded support for exclusions of local variable based on thread names
* Renamed ThreadExclusion to JavaLocalExclusion
* Fixed bug: KeyedWeakReference was not always ignored because its superclass is has a weakly reachable exclusion.
* Fixed bug: all root nodes had the same visit order as the first non root enqueued item, making it possible for a non root node to be dequeued before we're done with all roots.
* Redded gc root sorting
* Added tests to cover all uncovered bugs
* Added support for parsing StackFrameRecord

Fixes #1339 | 2019-05-20 13:17:18 | 6c2ee609efda323e88a4964d31fc5a5f0532f776

Reachability => LeakStatus (#1340)

* Combined leaking information from inspectors to solving conflicts while keeping all reasons
* Made reason from view leak inspector more obvious, and added label data about internals
* Moved reachability into LeakTraceElement
* Reachability renamed to LeakNodeStatus and leaking / not leaking
* ReachabilityInspector and Labeler are now functions with type aliases

Related to #1336: should fix the crash, though it's still unclear why AppCompatButton was a gc root there. | 2019-05-07 14:56:59 | 01210bbbfaecb3bcb6057c62b2195366d3bfa4f9

Revamp notifications (#1335)

* New notification that shows the count of retained instances. Tapping it triggers a heap dump. Fixes #1325
* Notifications are now split into two channels: default for results, and low for everything else.
* New config options: LeakCanary.config.dumpHeapWhenDebugging (default false) and LeakCanary.config.retainedVisibleThreshold (default 5)
* Replaced notification int constants and timestamps with resource ids.
* Don't show background notifications in instant apps (#1197) | 2019-05-05 16:38:26 | b14d9bc9c0a87119137bc0998bdec9314186dfcf

Highlighting new leaks (#1334)

New leaks are leaks that have a leak group that doesn't exist in any prior analysis.

* The notification now reports the count of leaks, with a split of new, known, and won't fix.
* The analysis success screen shows new leaks
* Moved description prefixes to be computed rather than inserted in the DB

Fixes #1328 | 2019-05-05 09:37:38 | f9a0518d4ddd69b782b6302caa3e3039787038e4

LeakSentry can be disabled (#1332)

LeakCanary has an enabled config option. Default is on in debug builds off in release builds.

Fixes #1327 | 2019-05-04 17:52:47 | f74f60901f34c751e8b8798d626678aa6233c893

Revert "fix trailing spaces per checkstyle"

This reverts commit ff17f879ec92ec326f8b1c6b7b8d77a5266d6622. | 2019-05-04 08:04:21 | 03136ca7dc1680299d710f79ca885412a1564144

Add test coverage for heap analysis (#1329)

* Fixed bug when reachability inspectors conflicts (reachable should win and erase unreachable)
* Added back support for leaking instances being empty objects, strings, primitive arrays or any object that we otherwise don't follow to find shortest paths. | 2019-05-04 07:51:02 | 59558e655d537c7654c411eebfd840773a8b77c9

Introducing exclusion priority (#1317)

* Add segmented FIFO queue

Unified several queues into one segmented FIFO queue. This will enable us to add several levels of priority.

* Introducing exclusion priority

* "excludedLeak" is now known as "won't fix leak", which matches its reality better. It's a leak that is known and real yet we're not fixing.
* Exclusion.alwaysExclude is replaced with Exclusion.status, with 3 possible values: NEVER_REACHABLE, WONT_FIX_LEAK, WEAKLY_REACHABLE.
* The shortest path finder will now follow weak references after all other paths have been exhausted.
* Removed class exclusion, was confusing, replaced with less lazy approach of listing fields to exclude
* VIEWLOCATIONHOLDER_ROOT should not have been always excluded, fixed.

Fixes #1173 ... well kinda. Instead of "non leaking retained instances", LeakCanary will report weakly reachable traces. Not sure if that'll help but it's a foundation we can build on. | 2019-04-30 17:44:15 | b0eedc553995e354e2382b3378bf0348801cd3c5

AllFieldsLabeler & cleanups (#1316)

* Add new optional labeler that prints all fields (useful for debugging)
* Move deprecated AnalysisResult to perflib
* Made DefaultAnalysisResultListener an object | 2019-04-30 07:08:29 | b9ee5356db265412db39c4c341880f305fbf2c76

fix format | 2019-04-22 06:25:09 | 4a2b158913e5a9eb0d5c6fdfbf949a80fc1b2c6b

Rename default to perflib and experimental to default (#1282)

* Remove experimental from module names

* Remove experimental prefix, add perflib prefix:

* update docs | 2019-04-19 06:01:39 | 425a9f24deb72691b02cdc85f80d177c05afebc5

fix list | 2019-04-18 21:55:43 | 8e3f9d26e8d3555bf934b99ac062aabc3aba528f

fix broken master | 2019-04-10 15:00:30 | f067ae53e050c5f52f47237440a6ac7eee3ca94c

fix broken build due to typo | 2019-04-10 05:44:19 | 7d4ddb4ffe3c9b0f30a84848675452dded0d4115

Leaking information aligned below simple class name. (#1258)

Also fixed issue where extraString + exclusionString were showing after the squiggly line.

Before: 
``` 
┬
├─ java.lang.Thread
│                 Leaking: NO (it's a GC root)
│                 ↓ thread Thread.<Java Local>
│                                ~~~~~~~~~~~~~ (named 'Thread-4')
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                 Leaking: UNKNOWN
│                 ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                     ~~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) 
```
After: 
``` 
┬
├─ java.lang.Thread
│            Leaking: NO (it's a GC root)
│            ↓ thread Thread.<Java Local> (named 'Thread-4')
│                            ~~~~~~~~~~~~
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                         Leaking: UNKNOWN
│                         ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                              ~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) ``` | 2019-04-05 20:11:47 | a938855585c7cf2522ffbd143d4bb66a234eea66

Add share to Stack Overflow button when viewing a leak (#1252)

* Add share to Stack Overflow button when viewing a leak

* Add question tag, lengthen toast and fix build failure. | 2019-04-04 20:49:50 | 8724d2aaffc07904517a3b823867802ca43233ae

Check if serviceInfo.processName is null. When LeakCanary runs on a seperate process and that process for some reason does not have a assigned processName, then we will crash on a NullPointerException. Also a debug log explaining this. (#1225) | 2019-04-01 19:20:40 | 3efc43608ed71dc20b0ad1e0e80e33d15249666f

fix master broken | 2019-04-01 19:07:27 | fe42130029174681a708b7d8622412efbaf81e73

fix trailing spaces per checkstyle | 2019-03-29 22:34:58 | ff17f879ec92ec326f8b1c6b7b8d77a5266d6622

Fix GC Root bugs that missed leaks (#1168)

In Perflib, Snapshot.getGcRoots() only returns the GC roots from the first heap. Based on empirical evidence, it seems like Android has 4 heaps, and the GC Roots used to only be in the first heap, but more recent versions of Android have GC Roots in other heaps as well.

This means LeakCanary would sometimes show "No Leak Found" when there actually was a leak.

Fixes #1163 | 2019-01-10 23:32:27 | 64b6e5a41796ae1587c50c8cc860cea25f28f382

fix typo | 2018-10-17 00:43:01 | 044b1e4827bc71ec008dc3f7e43c78f58885f1e1

Fix LeakCanary toasting (#1116)

- Prior attempts to get it to work with the application context turned out to be buggy.
- This makes LeakCanary use whatever the current resumed activity is, if any.
- If there is no resumed activity, then the toast isn't displayed.

This supersedes #1080 | 2018-10-16 13:23:14 | 0e39e2eea79bc05bf7147a4074dd7163f7c401ff

fix the wrong word (#1111) | 2018-10-16 01:25:28 | 636b9b6c2b39c0c887c9ed78e904239db9bc131e

Merge pull request #1104 from IlyaGulya/bug/travis-ci-cache-fix

Fix travis caching and improve build time. | 2018-09-22 21:25:59 | 344728b906daf6d010f66bdf4ccc29ad8fedede5

Error prone 2.3.1 + suggested fix and specify version

See http://errorprone.info/bugpattern/StringSplitter | 2018-08-22 07:37:33 | a6b6960d73a1da9661f4e85254570bf5f867f954

Merge pull request #1089 from hzsweers/z/fixAnother

Quick followup to #1088 | 2018-08-22 03:15:15 | be973f5f5da6a3516aedab98e639690697617747

Merge pull request #1087 from Goddchen/patch-2

Updated german translation | 2018-08-20 13:52:47 | b43c279b3e1623c193e1dc81955527f70e93f822

Merge pull request #1063 from javmarina/patch-1

Fixed wrong versions in AndroidExcludedRefs | 2018-07-25 18:31:55 | 3b4ebe3e2571377f93e9a6976e021324502a0f78

Fixed wrong versions in AndroidExcludedRefs

Commit https://android.googlesource.com/platform/frameworks/base/+/27db46850b708070452c0ce49daf5f79503fbde6 introduced this issue. This commit was first included in Jelly Bean 4.3 (JELLY_BEAN_MR2), not Jelly Bean 4.1 (JELLY_BEAN)
Commit https://android.googlesource.com/platform/frameworks/base/+/5200e1cb07190a1f6874d72a4561064cad3ee3e0 fixes this issue and was first included in Oreo 8.0 (O). Nougat still has this memory leak. | 2018-07-24 18:24:59 | e4778b25f2c6e65ebc485d255e38586c7d45ec97

Merge pull request #1057 from square/py/ui_bug

Fix drawing of start line | 2018-07-20 22:21:19 | af96577a7d19e4df9f63d95fd9c3bfd2adcddb5d

Avoid Toast crashes

Showing a toast can crash on API 25 because the Window Manager can throw a BadTokenException when addView is called.

This change fixes it by configuring the toast manually and calling the window manager directly. This is based on https://github.com/pyricau/frenchtoast/blob/master/frenchtoast/src/main/java/frenchtoast/Mixture.java#L49 .

Fixes #844 | 2018-07-20 16:11:22 | c9ebc5cf5099c093bde5d3309b2692cb0e2016d8

Fixing setup bug | 2018-06-28 04:07:09 | 505933817cf6e2eb0dad4a78d4c7c35a072b9868

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

fix format | 2019-04-22 06:25:09 | 4a2b158913e5a9eb0d5c6fdfbf949a80fc1b2c6b

Rename default to perflib and experimental to default (#1282)

* Remove experimental from module names

* Remove experimental prefix, add perflib prefix:

* update docs | 2019-04-19 06:01:39 | 425a9f24deb72691b02cdc85f80d177c05afebc5

fix list | 2019-04-18 21:55:43 | 8e3f9d26e8d3555bf934b99ac062aabc3aba528f

fix broken master | 2019-04-10 15:00:30 | f067ae53e050c5f52f47237440a6ac7eee3ca94c

fix broken build due to typo | 2019-04-10 05:44:19 | 7d4ddb4ffe3c9b0f30a84848675452dded0d4115

Leaking information aligned below simple class name. (#1258)

Also fixed issue where extraString + exclusionString were showing after the squiggly line.

Before: 
``` 
┬
├─ java.lang.Thread
│                 Leaking: NO (it's a GC root)
│                 ↓ thread Thread.<Java Local>
│                                ~~~~~~~~~~~~~ (named 'Thread-4')
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                 Leaking: UNKNOWN
│                 ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                     ~~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) 
```
After: 
``` 
┬
├─ java.lang.Thread
│            Leaking: NO (it's a GC root)
│            ↓ thread Thread.<Java Local> (named 'Thread-4')
│                            ~~~~~~~~~~~~
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                         Leaking: UNKNOWN
│                         ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                              ~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) ``` | 2019-04-05 20:11:47 | a938855585c7cf2522ffbd143d4bb66a234eea66

Add share to Stack Overflow button when viewing a leak (#1252)

* Add share to Stack Overflow button when viewing a leak

* Add question tag, lengthen toast and fix build failure. | 2019-04-04 20:49:50 | 8724d2aaffc07904517a3b823867802ca43233ae

Check if serviceInfo.processName is null. When LeakCanary runs on a seperate process and that process for some reason does not have a assigned processName, then we will crash on a NullPointerException. Also a debug log explaining this. (#1225) | 2019-04-01 19:20:40 | 3efc43608ed71dc20b0ad1e0e80e33d15249666f

fix master broken | 2019-04-01 19:07:27 | fe42130029174681a708b7d8622412efbaf81e73

Fix GC Root bugs that missed leaks (#1168)

In Perflib, Snapshot.getGcRoots() only returns the GC roots from the first heap. Based on empirical evidence, it seems like Android has 4 heaps, and the GC Roots used to only be in the first heap, but more recent versions of Android have GC Roots in other heaps as well.

This means LeakCanary would sometimes show "No Leak Found" when there actually was a leak.

Fixes #1163 | 2019-01-10 23:32:27 | 64b6e5a41796ae1587c50c8cc860cea25f28f382

fix typo | 2018-10-17 00:43:01 | 044b1e4827bc71ec008dc3f7e43c78f58885f1e1

Fix LeakCanary toasting (#1116)

- Prior attempts to get it to work with the application context turned out to be buggy.
- This makes LeakCanary use whatever the current resumed activity is, if any.
- If there is no resumed activity, then the toast isn't displayed.

This supersedes #1080 | 2018-10-16 13:23:14 | 0e39e2eea79bc05bf7147a4074dd7163f7c401ff

fix the wrong word (#1111) | 2018-10-16 01:25:28 | 636b9b6c2b39c0c887c9ed78e904239db9bc131e

Merge pull request #1104 from IlyaGulya/bug/travis-ci-cache-fix

Fix travis caching and improve build time. | 2018-09-22 21:25:59 | 344728b906daf6d010f66bdf4ccc29ad8fedede5

Error prone 2.3.1 + suggested fix and specify version

See http://errorprone.info/bugpattern/StringSplitter | 2018-08-22 07:37:33 | a6b6960d73a1da9661f4e85254570bf5f867f954

Merge pull request #1089 from hzsweers/z/fixAnother

Quick followup to #1088 | 2018-08-22 03:15:15 | be973f5f5da6a3516aedab98e639690697617747

Merge pull request #1087 from Goddchen/patch-2

Updated german translation | 2018-08-20 13:52:47 | b43c279b3e1623c193e1dc81955527f70e93f822

Merge pull request #1063 from javmarina/patch-1

Fixed wrong versions in AndroidExcludedRefs | 2018-07-25 18:31:55 | 3b4ebe3e2571377f93e9a6976e021324502a0f78

Fixed wrong versions in AndroidExcludedRefs

Commit https://android.googlesource.com/platform/frameworks/base/+/27db46850b708070452c0ce49daf5f79503fbde6 introduced this issue. This commit was first included in Jelly Bean 4.3 (JELLY_BEAN_MR2), not Jelly Bean 4.1 (JELLY_BEAN)
Commit https://android.googlesource.com/platform/frameworks/base/+/5200e1cb07190a1f6874d72a4561064cad3ee3e0 fixes this issue and was first included in Oreo 8.0 (O). Nougat still has this memory leak. | 2018-07-24 18:24:59 | e4778b25f2c6e65ebc485d255e38586c7d45ec97

Merge pull request #1057 from square/py/ui_bug

Fix drawing of start line | 2018-07-20 22:21:19 | af96577a7d19e4df9f63d95fd9c3bfd2adcddb5d

Avoid Toast crashes

Showing a toast can crash on API 25 because the Window Manager can throw a BadTokenException when addView is called.

This change fixes it by configuring the toast manually and calling the window manager directly. This is based on https://github.com/pyricau/frenchtoast/blob/master/frenchtoast/src/main/java/frenchtoast/Mixture.java#L49 .

Fixes #844 | 2018-07-20 16:11:22 | c9ebc5cf5099c093bde5d3309b2692cb0e2016d8

Fixing setup bug | 2018-06-28 04:07:09 | 505933817cf6e2eb0dad4a78d4c7c35a072b9868

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

fix changelog | 2019-11-25 19:32:41 | 50ae3ba7558e5a3f83fc11b4d17a281f072ff078

Fix bug in handling JNI roots (#1636)

* When adding support for native reference leaks (879ab7c) there was a missing bracket in an if/else branch that led to all native gc roots being ignored.

Fixes #1634 | 2019-11-25 19:00:23 | aff338544b5eebbb0b3c792c628cca11fa888373

fix typos | 2019-11-19 03:58:07 | 25b0df0da4f6e93dedcd90342c9cd1d0eab080ed

Merge pull request #1596 from fernandospr/patch-1

Update blog-articles.md | 2019-10-04 16:35:24 | e65236dae7c5827b7c9f64c19c8b1a16ea19e5a7

Merge pull request #1598 from PaulWoitaschek/patch-1

Fixed the german string placeholder for sharing the heap dump | 2019-10-03 16:16:23 | 029f28eefd7aa966520ac3649fd2688732c02867

Fix crash when pressing home from root screen (#1578)

This bug only happens on older Android devices.

Fixes #1555 | 2019-09-11 01:51:06 | 274f58f96e8de7dcd3000c06ba3e2b50e427747d

Merge pull request #1559 from bric3/fix-primitive-array-dump-skip

Fixes the primitive array dump record skipping | 2019-09-09 22:16:57 | c0fd4d812cb8d6c5723231e501c121da2af86f06

Parsing and applying proguard mapping during heap analysis (#1542)

* Parsing and applying proguard mapping during heap analysis

* Parsing and applying proguard mapping during heap analysis

* Rebased onto master

* Post review changes and updated shark-cli to support mapping files

* Post review fixes

* Moving proguard mapping reader out of the analyzer and formatting fixes | 2019-08-30 16:54:20 | 66182a52069d9be59d0af6220aa9afd74218aa9b

fix images | 2019-08-27 20:02:50 | 8f5030e9faa8690217e1bd436274a3de5b9d3fb3

fix image links in docs | 2019-08-27 19:59:20 | edca56a947278508350bfa5dd33d3fa10699001f

Merge pull request #1549 from Armaxis/patch-1

Added section about using Detekt to Contributing | 2019-08-24 22:16:26 | c923d14909888860a99d5899af17f5b52c9b000f

Revert "Replaced accessor with a call to setter to fix the build issue"

This reverts commit 82db0398 | 2019-08-17 02:21:08 | c570cb9b0fd7bd7fcc88c4d3b529df8837e98fdc

Replaced accessor with a call to setter to fix the build issue | 2019-08-16 04:32:25 | 82db039843303044f91d36ba7c43595ab59bacd5

fix typo | 2019-08-02 15:31:17 | a2452f61e78e689efb59adaf71384d74447578b0

Add / fix android inspectors (#1491)

* Added MortarScope and ViewRootImpl inspectors
* Fixed the ContextWrapper inspector

Fixes #1490
Fixes #1389 | 2019-07-25 22:50:48 | 915f8359690a016a09e66608a041454b9c8c52cb

Documenting public APIs (#1476)

Also fixed naming and other things that weren't right.

Fixes #1474 | 2019-07-19 06:57:25 | 41c69a5d424b4236114c5ce1b077afdad38e57a5

Adding CLI for LeakCanary (#1456)

Example usage:
```
./gradlew leakcanary-cli:run --args='analyze-process com.example.leakcanary'

./gradlew leakcanary-cli:run --args='dump-process com.example.leakcanary'

./gradlew leakcanary-cli:run --args='analyze-file /path/to/heapdump.hprof'
```

Also fixed a bug in ShortestPathFinder which did not ignore null references in object arrays | 2019-07-11 19:11:30 | eded1c96e84f37393857ba4de2580aec784b2391

Behavior change & bugfixes for retained count notification (#1433)

* Bugfix: when tapping the "dump heap" notification, if the GC found no retained instance we didn't use a distinct notification id to communicate that, and then soon after we'd dismiss the notification that let's the user know there is no retained instances on tap.
* Bugfix: we weren't running the GC when checking for retained instances and the count was under the threshold
* Change: we now update the notification and keep it around for 30 seconds when the count goes to 0
* Change: the "no retained instance" notification that shows on tap is identical and also auto dismisses after 30 seconds.
* Change: we're checking for retained references (and running the GC) every 2 seconds instead of 5.

Fixes #1427 | 2019-07-03 20:55:47 | 968083a915343d881bd63e40587c070fde543732

Update how to fix a leak | 2019-06-25 05:46:56 | 177e7fd12933d99eca7a526851c53e598a03bf90

Text rendering tests (#1378)

* Added test coverage for text rendering
* Fixed bug: labels were not rendered on the last node (leaking instance)
* Matched exclusions are now rendered on their own line

Fixes #1375
Fixes #1350 | 2019-06-04 09:32:11 | 1926cb1db73f9583e11c557dbf2e5d46e3896a6e

Thread name based exclusions (#1353)

* Readded support for exclusions of local variable based on thread names
* Renamed ThreadExclusion to JavaLocalExclusion
* Fixed bug: KeyedWeakReference was not always ignored because its superclass is has a weakly reachable exclusion.
* Fixed bug: all root nodes had the same visit order as the first non root enqueued item, making it possible for a non root node to be dequeued before we're done with all roots.
* Redded gc root sorting
* Added tests to cover all uncovered bugs
* Added support for parsing StackFrameRecord

Fixes #1339 | 2019-05-20 13:17:18 | 6c2ee609efda323e88a4964d31fc5a5f0532f776

Reachability => LeakStatus (#1340)

* Combined leaking information from inspectors to solving conflicts while keeping all reasons
* Made reason from view leak inspector more obvious, and added label data about internals
* Moved reachability into LeakTraceElement
* Reachability renamed to LeakNodeStatus and leaking / not leaking
* ReachabilityInspector and Labeler are now functions with type aliases

Related to #1336: should fix the crash, though it's still unclear why AppCompatButton was a gc root there. | 2019-05-07 14:56:59 | 01210bbbfaecb3bcb6057c62b2195366d3bfa4f9

Revamp notifications (#1335)

* New notification that shows the count of retained instances. Tapping it triggers a heap dump. Fixes #1325
* Notifications are now split into two channels: default for results, and low for everything else.
* New config options: LeakCanary.config.dumpHeapWhenDebugging (default false) and LeakCanary.config.retainedVisibleThreshold (default 5)
* Replaced notification int constants and timestamps with resource ids.
* Don't show background notifications in instant apps (#1197) | 2019-05-05 16:38:26 | b14d9bc9c0a87119137bc0998bdec9314186dfcf

Highlighting new leaks (#1334)

New leaks are leaks that have a leak group that doesn't exist in any prior analysis.

* The notification now reports the count of leaks, with a split of new, known, and won't fix.
* The analysis success screen shows new leaks
* Moved description prefixes to be computed rather than inserted in the DB

Fixes #1328 | 2019-05-05 09:37:38 | f9a0518d4ddd69b782b6302caa3e3039787038e4

LeakSentry can be disabled (#1332)

LeakCanary has an enabled config option. Default is on in debug builds off in release builds.

Fixes #1327 | 2019-05-04 17:52:47 | f74f60901f34c751e8b8798d626678aa6233c893

Revert "fix trailing spaces per checkstyle"

This reverts commit ff17f879ec92ec326f8b1c6b7b8d77a5266d6622. | 2019-05-04 08:04:21 | 03136ca7dc1680299d710f79ca885412a1564144

Add test coverage for heap analysis (#1329)

* Fixed bug when reachability inspectors conflicts (reachable should win and erase unreachable)
* Added back support for leaking instances being empty objects, strings, primitive arrays or any object that we otherwise don't follow to find shortest paths. | 2019-05-04 07:51:02 | 59558e655d537c7654c411eebfd840773a8b77c9

Introducing exclusion priority (#1317)

* Add segmented FIFO queue

Unified several queues into one segmented FIFO queue. This will enable us to add several levels of priority.

* Introducing exclusion priority

* "excludedLeak" is now known as "won't fix leak", which matches its reality better. It's a leak that is known and real yet we're not fixing.
* Exclusion.alwaysExclude is replaced with Exclusion.status, with 3 possible values: NEVER_REACHABLE, WONT_FIX_LEAK, WEAKLY_REACHABLE.
* The shortest path finder will now follow weak references after all other paths have been exhausted.
* Removed class exclusion, was confusing, replaced with less lazy approach of listing fields to exclude
* VIEWLOCATIONHOLDER_ROOT should not have been always excluded, fixed.

Fixes #1173 ... well kinda. Instead of "non leaking retained instances", LeakCanary will report weakly reachable traces. Not sure if that'll help but it's a foundation we can build on. | 2019-04-30 17:44:15 | b0eedc553995e354e2382b3378bf0348801cd3c5

AllFieldsLabeler & cleanups (#1316)

* Add new optional labeler that prints all fields (useful for debugging)
* Move deprecated AnalysisResult to perflib
* Made DefaultAnalysisResultListener an object | 2019-04-30 07:08:29 | b9ee5356db265412db39c4c341880f305fbf2c76

fix format | 2019-04-22 06:25:09 | 4a2b158913e5a9eb0d5c6fdfbf949a80fc1b2c6b

Rename default to perflib and experimental to default (#1282)

* Remove experimental from module names

* Remove experimental prefix, add perflib prefix:

* update docs | 2019-04-19 06:01:39 | 425a9f24deb72691b02cdc85f80d177c05afebc5

fix list | 2019-04-18 21:55:43 | 8e3f9d26e8d3555bf934b99ac062aabc3aba528f

fix broken master | 2019-04-10 15:00:30 | f067ae53e050c5f52f47237440a6ac7eee3ca94c

fix broken build due to typo | 2019-04-10 05:44:19 | 7d4ddb4ffe3c9b0f30a84848675452dded0d4115

Leaking information aligned below simple class name. (#1258)

Also fixed issue where extraString + exclusionString were showing after the squiggly line.

Before: 
``` 
┬
├─ java.lang.Thread
│                 Leaking: NO (it's a GC root)
│                 ↓ thread Thread.<Java Local>
│                                ~~~~~~~~~~~~~ (named 'Thread-4')
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                 Leaking: UNKNOWN
│                 ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                     ~~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) 
```
After: 
``` 
┬
├─ java.lang.Thread
│            Leaking: NO (it's a GC root)
│            ↓ thread Thread.<Java Local> (named 'Thread-4')
│                            ~~~~~~~~~~~~
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                         Leaking: UNKNOWN
│                         ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                              ~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) ``` | 2019-04-05 20:11:47 | a938855585c7cf2522ffbd143d4bb66a234eea66

Add share to Stack Overflow button when viewing a leak (#1252)

* Add share to Stack Overflow button when viewing a leak

* Add question tag, lengthen toast and fix build failure. | 2019-04-04 20:49:50 | 8724d2aaffc07904517a3b823867802ca43233ae

Check if serviceInfo.processName is null. When LeakCanary runs on a seperate process and that process for some reason does not have a assigned processName, then we will crash on a NullPointerException. Also a debug log explaining this. (#1225) | 2019-04-01 19:20:40 | 3efc43608ed71dc20b0ad1e0e80e33d15249666f

fix master broken | 2019-04-01 19:07:27 | fe42130029174681a708b7d8622412efbaf81e73

fix trailing spaces per checkstyle | 2019-03-29 22:34:58 | ff17f879ec92ec326f8b1c6b7b8d77a5266d6622

Fix GC Root bugs that missed leaks (#1168)

In Perflib, Snapshot.getGcRoots() only returns the GC roots from the first heap. Based on empirical evidence, it seems like Android has 4 heaps, and the GC Roots used to only be in the first heap, but more recent versions of Android have GC Roots in other heaps as well.

This means LeakCanary would sometimes show "No Leak Found" when there actually was a leak.

Fixes #1163 | 2019-01-10 23:32:27 | 64b6e5a41796ae1587c50c8cc860cea25f28f382

fix typo | 2018-10-17 00:43:01 | 044b1e4827bc71ec008dc3f7e43c78f58885f1e1

Fix LeakCanary toasting (#1116)

- Prior attempts to get it to work with the application context turned out to be buggy.
- This makes LeakCanary use whatever the current resumed activity is, if any.
- If there is no resumed activity, then the toast isn't displayed.

This supersedes #1080 | 2018-10-16 13:23:14 | 0e39e2eea79bc05bf7147a4074dd7163f7c401ff

fix the wrong word (#1111) | 2018-10-16 01:25:28 | 636b9b6c2b39c0c887c9ed78e904239db9bc131e

Merge pull request #1104 from IlyaGulya/bug/travis-ci-cache-fix

Fix travis caching and improve build time. | 2018-09-22 21:25:59 | 344728b906daf6d010f66bdf4ccc29ad8fedede5

Error prone 2.3.1 + suggested fix and specify version

See http://errorprone.info/bugpattern/StringSplitter | 2018-08-22 07:37:33 | a6b6960d73a1da9661f4e85254570bf5f867f954

Merge pull request #1089 from hzsweers/z/fixAnother

Quick followup to #1088 | 2018-08-22 03:15:15 | be973f5f5da6a3516aedab98e639690697617747

Merge pull request #1087 from Goddchen/patch-2

Updated german translation | 2018-08-20 13:52:47 | b43c279b3e1623c193e1dc81955527f70e93f822

Merge pull request #1063 from javmarina/patch-1

Fixed wrong versions in AndroidExcludedRefs | 2018-07-25 18:31:55 | 3b4ebe3e2571377f93e9a6976e021324502a0f78

Fixed wrong versions in AndroidExcludedRefs

Commit https://android.googlesource.com/platform/frameworks/base/+/27db46850b708070452c0ce49daf5f79503fbde6 introduced this issue. This commit was first included in Jelly Bean 4.3 (JELLY_BEAN_MR2), not Jelly Bean 4.1 (JELLY_BEAN)
Commit https://android.googlesource.com/platform/frameworks/base/+/5200e1cb07190a1f6874d72a4561064cad3ee3e0 fixes this issue and was first included in Oreo 8.0 (O). Nougat still has this memory leak. | 2018-07-24 18:24:59 | e4778b25f2c6e65ebc485d255e38586c7d45ec97

Merge pull request #1057 from square/py/ui_bug

Fix drawing of start line | 2018-07-20 22:21:19 | af96577a7d19e4df9f63d95fd9c3bfd2adcddb5d

Avoid Toast crashes

Showing a toast can crash on API 25 because the Window Manager can throw a BadTokenException when addView is called.

This change fixes it by configuring the toast manually and calling the window manager directly. This is based on https://github.com/pyricau/frenchtoast/blob/master/frenchtoast/src/main/java/frenchtoast/Mixture.java#L49 .

Fixes #844 | 2018-07-20 16:11:22 | c9ebc5cf5099c093bde5d3309b2692cb0e2016d8

Fixing setup bug | 2018-06-28 04:07:09 | 505933817cf6e2eb0dad4a78d4c7c35a072b9868

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

Adding CLI for LeakCanary (#1456)

Example usage:
```
./gradlew leakcanary-cli:run --args='analyze-process com.example.leakcanary'

./gradlew leakcanary-cli:run --args='dump-process com.example.leakcanary'

./gradlew leakcanary-cli:run --args='analyze-file /path/to/heapdump.hprof'
```

Also fixed a bug in ShortestPathFinder which did not ignore null references in object arrays | 2019-07-11 19:11:30 | eded1c96e84f37393857ba4de2580aec784b2391

Behavior change & bugfixes for retained count notification (#1433)

* Bugfix: when tapping the "dump heap" notification, if the GC found no retained instance we didn't use a distinct notification id to communicate that, and then soon after we'd dismiss the notification that let's the user know there is no retained instances on tap.
* Bugfix: we weren't running the GC when checking for retained instances and the count was under the threshold
* Change: we now update the notification and keep it around for 30 seconds when the count goes to 0
* Change: the "no retained instance" notification that shows on tap is identical and also auto dismisses after 30 seconds.
* Change: we're checking for retained references (and running the GC) every 2 seconds instead of 5.

Fixes #1427 | 2019-07-03 20:55:47 | 968083a915343d881bd63e40587c070fde543732

Update how to fix a leak | 2019-06-25 05:46:56 | 177e7fd12933d99eca7a526851c53e598a03bf90

Text rendering tests (#1378)

* Added test coverage for text rendering
* Fixed bug: labels were not rendered on the last node (leaking instance)
* Matched exclusions are now rendered on their own line

Fixes #1375
Fixes #1350 | 2019-06-04 09:32:11 | 1926cb1db73f9583e11c557dbf2e5d46e3896a6e

Thread name based exclusions (#1353)

* Readded support for exclusions of local variable based on thread names
* Renamed ThreadExclusion to JavaLocalExclusion
* Fixed bug: KeyedWeakReference was not always ignored because its superclass is has a weakly reachable exclusion.
* Fixed bug: all root nodes had the same visit order as the first non root enqueued item, making it possible for a non root node to be dequeued before we're done with all roots.
* Redded gc root sorting
* Added tests to cover all uncovered bugs
* Added support for parsing StackFrameRecord

Fixes #1339 | 2019-05-20 13:17:18 | 6c2ee609efda323e88a4964d31fc5a5f0532f776

Reachability => LeakStatus (#1340)

* Combined leaking information from inspectors to solving conflicts while keeping all reasons
* Made reason from view leak inspector more obvious, and added label data about internals
* Moved reachability into LeakTraceElement
* Reachability renamed to LeakNodeStatus and leaking / not leaking
* ReachabilityInspector and Labeler are now functions with type aliases

Related to #1336: should fix the crash, though it's still unclear why AppCompatButton was a gc root there. | 2019-05-07 14:56:59 | 01210bbbfaecb3bcb6057c62b2195366d3bfa4f9

Revamp notifications (#1335)

* New notification that shows the count of retained instances. Tapping it triggers a heap dump. Fixes #1325
* Notifications are now split into two channels: default for results, and low for everything else.
* New config options: LeakCanary.config.dumpHeapWhenDebugging (default false) and LeakCanary.config.retainedVisibleThreshold (default 5)
* Replaced notification int constants and timestamps with resource ids.
* Don't show background notifications in instant apps (#1197) | 2019-05-05 16:38:26 | b14d9bc9c0a87119137bc0998bdec9314186dfcf

Highlighting new leaks (#1334)

New leaks are leaks that have a leak group that doesn't exist in any prior analysis.

* The notification now reports the count of leaks, with a split of new, known, and won't fix.
* The analysis success screen shows new leaks
* Moved description prefixes to be computed rather than inserted in the DB

Fixes #1328 | 2019-05-05 09:37:38 | f9a0518d4ddd69b782b6302caa3e3039787038e4

LeakSentry can be disabled (#1332)

LeakCanary has an enabled config option. Default is on in debug builds off in release builds.

Fixes #1327 | 2019-05-04 17:52:47 | f74f60901f34c751e8b8798d626678aa6233c893

Revert "fix trailing spaces per checkstyle"

This reverts commit ff17f879ec92ec326f8b1c6b7b8d77a5266d6622. | 2019-05-04 08:04:21 | 03136ca7dc1680299d710f79ca885412a1564144

Add test coverage for heap analysis (#1329)

* Fixed bug when reachability inspectors conflicts (reachable should win and erase unreachable)
* Added back support for leaking instances being empty objects, strings, primitive arrays or any object that we otherwise don't follow to find shortest paths. | 2019-05-04 07:51:02 | 59558e655d537c7654c411eebfd840773a8b77c9

Introducing exclusion priority (#1317)

* Add segmented FIFO queue

Unified several queues into one segmented FIFO queue. This will enable us to add several levels of priority.

* Introducing exclusion priority

* "excludedLeak" is now known as "won't fix leak", which matches its reality better. It's a leak that is known and real yet we're not fixing.
* Exclusion.alwaysExclude is replaced with Exclusion.status, with 3 possible values: NEVER_REACHABLE, WONT_FIX_LEAK, WEAKLY_REACHABLE.
* The shortest path finder will now follow weak references after all other paths have been exhausted.
* Removed class exclusion, was confusing, replaced with less lazy approach of listing fields to exclude
* VIEWLOCATIONHOLDER_ROOT should not have been always excluded, fixed.

Fixes #1173 ... well kinda. Instead of "non leaking retained instances", LeakCanary will report weakly reachable traces. Not sure if that'll help but it's a foundation we can build on. | 2019-04-30 17:44:15 | b0eedc553995e354e2382b3378bf0348801cd3c5

AllFieldsLabeler & cleanups (#1316)

* Add new optional labeler that prints all fields (useful for debugging)
* Move deprecated AnalysisResult to perflib
* Made DefaultAnalysisResultListener an object | 2019-04-30 07:08:29 | b9ee5356db265412db39c4c341880f305fbf2c76

fix format | 2019-04-22 06:25:09 | 4a2b158913e5a9eb0d5c6fdfbf949a80fc1b2c6b

Rename default to perflib and experimental to default (#1282)

* Remove experimental from module names

* Remove experimental prefix, add perflib prefix:

* update docs | 2019-04-19 06:01:39 | 425a9f24deb72691b02cdc85f80d177c05afebc5

fix list | 2019-04-18 21:55:43 | 8e3f9d26e8d3555bf934b99ac062aabc3aba528f

fix broken master | 2019-04-10 15:00:30 | f067ae53e050c5f52f47237440a6ac7eee3ca94c

fix broken build due to typo | 2019-04-10 05:44:19 | 7d4ddb4ffe3c9b0f30a84848675452dded0d4115

Leaking information aligned below simple class name. (#1258)

Also fixed issue where extraString + exclusionString were showing after the squiggly line.

Before: 
``` 
┬
├─ java.lang.Thread
│                 Leaking: NO (it's a GC root)
│                 ↓ thread Thread.<Java Local>
│                                ~~~~~~~~~~~~~ (named 'Thread-4')
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                 Leaking: UNKNOWN
│                 ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                     ~~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) 
```
After: 
``` 
┬
├─ java.lang.Thread
│            Leaking: NO (it's a GC root)
│            ↓ thread Thread.<Java Local> (named 'Thread-4')
│                            ~~~~~~~~~~~~
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                         Leaking: UNKNOWN
│                         ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                              ~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) ``` | 2019-04-05 20:11:47 | a938855585c7cf2522ffbd143d4bb66a234eea66

Add share to Stack Overflow button when viewing a leak (#1252)

* Add share to Stack Overflow button when viewing a leak

* Add question tag, lengthen toast and fix build failure. | 2019-04-04 20:49:50 | 8724d2aaffc07904517a3b823867802ca43233ae

Check if serviceInfo.processName is null. When LeakCanary runs on a seperate process and that process for some reason does not have a assigned processName, then we will crash on a NullPointerException. Also a debug log explaining this. (#1225) | 2019-04-01 19:20:40 | 3efc43608ed71dc20b0ad1e0e80e33d15249666f

fix master broken | 2019-04-01 19:07:27 | fe42130029174681a708b7d8622412efbaf81e73

fix trailing spaces per checkstyle | 2019-03-29 22:34:58 | ff17f879ec92ec326f8b1c6b7b8d77a5266d6622

Fix GC Root bugs that missed leaks (#1168)

In Perflib, Snapshot.getGcRoots() only returns the GC roots from the first heap. Based on empirical evidence, it seems like Android has 4 heaps, and the GC Roots used to only be in the first heap, but more recent versions of Android have GC Roots in other heaps as well.

This means LeakCanary would sometimes show "No Leak Found" when there actually was a leak.

Fixes #1163 | 2019-01-10 23:32:27 | 64b6e5a41796ae1587c50c8cc860cea25f28f382

fix typo | 2018-10-17 00:43:01 | 044b1e4827bc71ec008dc3f7e43c78f58885f1e1

Fix LeakCanary toasting (#1116)

- Prior attempts to get it to work with the application context turned out to be buggy.
- This makes LeakCanary use whatever the current resumed activity is, if any.
- If there is no resumed activity, then the toast isn't displayed.

This supersedes #1080 | 2018-10-16 13:23:14 | 0e39e2eea79bc05bf7147a4074dd7163f7c401ff

fix the wrong word (#1111) | 2018-10-16 01:25:28 | 636b9b6c2b39c0c887c9ed78e904239db9bc131e

Merge pull request #1104 from IlyaGulya/bug/travis-ci-cache-fix

Fix travis caching and improve build time. | 2018-09-22 21:25:59 | 344728b906daf6d010f66bdf4ccc29ad8fedede5

Error prone 2.3.1 + suggested fix and specify version

See http://errorprone.info/bugpattern/StringSplitter | 2018-08-22 07:37:33 | a6b6960d73a1da9661f4e85254570bf5f867f954

Merge pull request #1089 from hzsweers/z/fixAnother

Quick followup to #1088 | 2018-08-22 03:15:15 | be973f5f5da6a3516aedab98e639690697617747

Merge pull request #1087 from Goddchen/patch-2

Updated german translation | 2018-08-20 13:52:47 | b43c279b3e1623c193e1dc81955527f70e93f822

Merge pull request #1063 from javmarina/patch-1

Fixed wrong versions in AndroidExcludedRefs | 2018-07-25 18:31:55 | 3b4ebe3e2571377f93e9a6976e021324502a0f78

Fixed wrong versions in AndroidExcludedRefs

Commit https://android.googlesource.com/platform/frameworks/base/+/27db46850b708070452c0ce49daf5f79503fbde6 introduced this issue. This commit was first included in Jelly Bean 4.3 (JELLY_BEAN_MR2), not Jelly Bean 4.1 (JELLY_BEAN)
Commit https://android.googlesource.com/platform/frameworks/base/+/5200e1cb07190a1f6874d72a4561064cad3ee3e0 fixes this issue and was first included in Oreo 8.0 (O). Nougat still has this memory leak. | 2018-07-24 18:24:59 | e4778b25f2c6e65ebc485d255e38586c7d45ec97

Merge pull request #1057 from square/py/ui_bug

Fix drawing of start line | 2018-07-20 22:21:19 | af96577a7d19e4df9f63d95fd9c3bfd2adcddb5d

Avoid Toast crashes

Showing a toast can crash on API 25 because the Window Manager can throw a BadTokenException when addView is called.

This change fixes it by configuring the toast manually and calling the window manager directly. This is based on https://github.com/pyricau/frenchtoast/blob/master/frenchtoast/src/main/java/frenchtoast/Mixture.java#L49 .

Fixes #844 | 2018-07-20 16:11:22 | c9ebc5cf5099c093bde5d3309b2692cb0e2016d8

Fixing setup bug | 2018-06-28 04:07:09 | 505933817cf6e2eb0dad4a78d4c7c35a072b9868

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

Fix crash when pressing home from root screen (#1578)

This bug only happens on older Android devices.

Fixes #1555 | 2019-09-11 01:51:06 | 274f58f96e8de7dcd3000c06ba3e2b50e427747d

Merge pull request #1559 from bric3/fix-primitive-array-dump-skip

Fixes the primitive array dump record skipping | 2019-09-09 22:16:57 | c0fd4d812cb8d6c5723231e501c121da2af86f06

Parsing and applying proguard mapping during heap analysis (#1542)

* Parsing and applying proguard mapping during heap analysis

* Parsing and applying proguard mapping during heap analysis

* Rebased onto master

* Post review changes and updated shark-cli to support mapping files

* Post review fixes

* Moving proguard mapping reader out of the analyzer and formatting fixes | 2019-08-30 16:54:20 | 66182a52069d9be59d0af6220aa9afd74218aa9b

fix images | 2019-08-27 20:02:50 | 8f5030e9faa8690217e1bd436274a3de5b9d3fb3

fix image links in docs | 2019-08-27 19:59:20 | edca56a947278508350bfa5dd33d3fa10699001f

Merge pull request #1549 from Armaxis/patch-1

Added section about using Detekt to Contributing | 2019-08-24 22:16:26 | c923d14909888860a99d5899af17f5b52c9b000f

Revert "Replaced accessor with a call to setter to fix the build issue"

This reverts commit 82db0398 | 2019-08-17 02:21:08 | c570cb9b0fd7bd7fcc88c4d3b529df8837e98fdc

Replaced accessor with a call to setter to fix the build issue | 2019-08-16 04:32:25 | 82db039843303044f91d36ba7c43595ab59bacd5

fix typo | 2019-08-02 15:31:17 | a2452f61e78e689efb59adaf71384d74447578b0

Add / fix android inspectors (#1491)

* Added MortarScope and ViewRootImpl inspectors
* Fixed the ContextWrapper inspector

Fixes #1490
Fixes #1389 | 2019-07-25 22:50:48 | 915f8359690a016a09e66608a041454b9c8c52cb

Documenting public APIs (#1476)

Also fixed naming and other things that weren't right.

Fixes #1474 | 2019-07-19 06:57:25 | 41c69a5d424b4236114c5ce1b077afdad38e57a5

Adding CLI for LeakCanary (#1456)

Example usage:
```
./gradlew leakcanary-cli:run --args='analyze-process com.example.leakcanary'

./gradlew leakcanary-cli:run --args='dump-process com.example.leakcanary'

./gradlew leakcanary-cli:run --args='analyze-file /path/to/heapdump.hprof'
```

Also fixed a bug in ShortestPathFinder which did not ignore null references in object arrays | 2019-07-11 19:11:30 | eded1c96e84f37393857ba4de2580aec784b2391

Behavior change & bugfixes for retained count notification (#1433)

* Bugfix: when tapping the "dump heap" notification, if the GC found no retained instance we didn't use a distinct notification id to communicate that, and then soon after we'd dismiss the notification that let's the user know there is no retained instances on tap.
* Bugfix: we weren't running the GC when checking for retained instances and the count was under the threshold
* Change: we now update the notification and keep it around for 30 seconds when the count goes to 0
* Change: the "no retained instance" notification that shows on tap is identical and also auto dismisses after 30 seconds.
* Change: we're checking for retained references (and running the GC) every 2 seconds instead of 5.

Fixes #1427 | 2019-07-03 20:55:47 | 968083a915343d881bd63e40587c070fde543732

Update how to fix a leak | 2019-06-25 05:46:56 | 177e7fd12933d99eca7a526851c53e598a03bf90

Text rendering tests (#1378)

* Added test coverage for text rendering
* Fixed bug: labels were not rendered on the last node (leaking instance)
* Matched exclusions are now rendered on their own line

Fixes #1375
Fixes #1350 | 2019-06-04 09:32:11 | 1926cb1db73f9583e11c557dbf2e5d46e3896a6e

Thread name based exclusions (#1353)

* Readded support for exclusions of local variable based on thread names
* Renamed ThreadExclusion to JavaLocalExclusion
* Fixed bug: KeyedWeakReference was not always ignored because its superclass is has a weakly reachable exclusion.
* Fixed bug: all root nodes had the same visit order as the first non root enqueued item, making it possible for a non root node to be dequeued before we're done with all roots.
* Redded gc root sorting
* Added tests to cover all uncovered bugs
* Added support for parsing StackFrameRecord

Fixes #1339 | 2019-05-20 13:17:18 | 6c2ee609efda323e88a4964d31fc5a5f0532f776

Reachability => LeakStatus (#1340)

* Combined leaking information from inspectors to solving conflicts while keeping all reasons
* Made reason from view leak inspector more obvious, and added label data about internals
* Moved reachability into LeakTraceElement
* Reachability renamed to LeakNodeStatus and leaking / not leaking
* ReachabilityInspector and Labeler are now functions with type aliases

Related to #1336: should fix the crash, though it's still unclear why AppCompatButton was a gc root there. | 2019-05-07 14:56:59 | 01210bbbfaecb3bcb6057c62b2195366d3bfa4f9

Revamp notifications (#1335)

* New notification that shows the count of retained instances. Tapping it triggers a heap dump. Fixes #1325
* Notifications are now split into two channels: default for results, and low for everything else.
* New config options: LeakCanary.config.dumpHeapWhenDebugging (default false) and LeakCanary.config.retainedVisibleThreshold (default 5)
* Replaced notification int constants and timestamps with resource ids.
* Don't show background notifications in instant apps (#1197) | 2019-05-05 16:38:26 | b14d9bc9c0a87119137bc0998bdec9314186dfcf

Highlighting new leaks (#1334)

New leaks are leaks that have a leak group that doesn't exist in any prior analysis.

* The notification now reports the count of leaks, with a split of new, known, and won't fix.
* The analysis success screen shows new leaks
* Moved description prefixes to be computed rather than inserted in the DB

Fixes #1328 | 2019-05-05 09:37:38 | f9a0518d4ddd69b782b6302caa3e3039787038e4

LeakSentry can be disabled (#1332)

LeakCanary has an enabled config option. Default is on in debug builds off in release builds.

Fixes #1327 | 2019-05-04 17:52:47 | f74f60901f34c751e8b8798d626678aa6233c893

Revert "fix trailing spaces per checkstyle"

This reverts commit ff17f879ec92ec326f8b1c6b7b8d77a5266d6622. | 2019-05-04 08:04:21 | 03136ca7dc1680299d710f79ca885412a1564144

Add test coverage for heap analysis (#1329)

* Fixed bug when reachability inspectors conflicts (reachable should win and erase unreachable)
* Added back support for leaking instances being empty objects, strings, primitive arrays or any object that we otherwise don't follow to find shortest paths. | 2019-05-04 07:51:02 | 59558e655d537c7654c411eebfd840773a8b77c9

Introducing exclusion priority (#1317)

* Add segmented FIFO queue

Unified several queues into one segmented FIFO queue. This will enable us to add several levels of priority.

* Introducing exclusion priority

* "excludedLeak" is now known as "won't fix leak", which matches its reality better. It's a leak that is known and real yet we're not fixing.
* Exclusion.alwaysExclude is replaced with Exclusion.status, with 3 possible values: NEVER_REACHABLE, WONT_FIX_LEAK, WEAKLY_REACHABLE.
* The shortest path finder will now follow weak references after all other paths have been exhausted.
* Removed class exclusion, was confusing, replaced with less lazy approach of listing fields to exclude
* VIEWLOCATIONHOLDER_ROOT should not have been always excluded, fixed.

Fixes #1173 ... well kinda. Instead of "non leaking retained instances", LeakCanary will report weakly reachable traces. Not sure if that'll help but it's a foundation we can build on. | 2019-04-30 17:44:15 | b0eedc553995e354e2382b3378bf0348801cd3c5

AllFieldsLabeler & cleanups (#1316)

* Add new optional labeler that prints all fields (useful for debugging)
* Move deprecated AnalysisResult to perflib
* Made DefaultAnalysisResultListener an object | 2019-04-30 07:08:29 | b9ee5356db265412db39c4c341880f305fbf2c76

fix format | 2019-04-22 06:25:09 | 4a2b158913e5a9eb0d5c6fdfbf949a80fc1b2c6b

Rename default to perflib and experimental to default (#1282)

* Remove experimental from module names

* Remove experimental prefix, add perflib prefix:

* update docs | 2019-04-19 06:01:39 | 425a9f24deb72691b02cdc85f80d177c05afebc5

fix list | 2019-04-18 21:55:43 | 8e3f9d26e8d3555bf934b99ac062aabc3aba528f

fix broken master | 2019-04-10 15:00:30 | f067ae53e050c5f52f47237440a6ac7eee3ca94c

fix broken build due to typo | 2019-04-10 05:44:19 | 7d4ddb4ffe3c9b0f30a84848675452dded0d4115

Leaking information aligned below simple class name. (#1258)

Also fixed issue where extraString + exclusionString were showing after the squiggly line.

Before: 
``` 
┬
├─ java.lang.Thread
│                 Leaking: NO (it's a GC root)
│                 ↓ thread Thread.<Java Local>
│                                ~~~~~~~~~~~~~ (named 'Thread-4')
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                 Leaking: UNKNOWN
│                 ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                     ~~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) 
```
After: 
``` 
┬
├─ java.lang.Thread
│            Leaking: NO (it's a GC root)
│            ↓ thread Thread.<Java Local> (named 'Thread-4')
│                            ~~~~~~~~~~~~
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                         Leaking: UNKNOWN
│                         ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                              ~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) ``` | 2019-04-05 20:11:47 | a938855585c7cf2522ffbd143d4bb66a234eea66

Add share to Stack Overflow button when viewing a leak (#1252)

* Add share to Stack Overflow button when viewing a leak

* Add question tag, lengthen toast and fix build failure. | 2019-04-04 20:49:50 | 8724d2aaffc07904517a3b823867802ca43233ae

Check if serviceInfo.processName is null. When LeakCanary runs on a seperate process and that process for some reason does not have a assigned processName, then we will crash on a NullPointerException. Also a debug log explaining this. (#1225) | 2019-04-01 19:20:40 | 3efc43608ed71dc20b0ad1e0e80e33d15249666f

fix master broken | 2019-04-01 19:07:27 | fe42130029174681a708b7d8622412efbaf81e73

fix trailing spaces per checkstyle | 2019-03-29 22:34:58 | ff17f879ec92ec326f8b1c6b7b8d77a5266d6622

Fix GC Root bugs that missed leaks (#1168)

In Perflib, Snapshot.getGcRoots() only returns the GC roots from the first heap. Based on empirical evidence, it seems like Android has 4 heaps, and the GC Roots used to only be in the first heap, but more recent versions of Android have GC Roots in other heaps as well.

This means LeakCanary would sometimes show "No Leak Found" when there actually was a leak.

Fixes #1163 | 2019-01-10 23:32:27 | 64b6e5a41796ae1587c50c8cc860cea25f28f382

fix typo | 2018-10-17 00:43:01 | 044b1e4827bc71ec008dc3f7e43c78f58885f1e1

Fix LeakCanary toasting (#1116)

- Prior attempts to get it to work with the application context turned out to be buggy.
- This makes LeakCanary use whatever the current resumed activity is, if any.
- If there is no resumed activity, then the toast isn't displayed.

This supersedes #1080 | 2018-10-16 13:23:14 | 0e39e2eea79bc05bf7147a4074dd7163f7c401ff

fix the wrong word (#1111) | 2018-10-16 01:25:28 | 636b9b6c2b39c0c887c9ed78e904239db9bc131e

Merge pull request #1104 from IlyaGulya/bug/travis-ci-cache-fix

Fix travis caching and improve build time. | 2018-09-22 21:25:59 | 344728b906daf6d010f66bdf4ccc29ad8fedede5

Error prone 2.3.1 + suggested fix and specify version

See http://errorprone.info/bugpattern/StringSplitter | 2018-08-22 07:37:33 | a6b6960d73a1da9661f4e85254570bf5f867f954

Merge pull request #1089 from hzsweers/z/fixAnother

Quick followup to #1088 | 2018-08-22 03:15:15 | be973f5f5da6a3516aedab98e639690697617747

Merge pull request #1087 from Goddchen/patch-2

Updated german translation | 2018-08-20 13:52:47 | b43c279b3e1623c193e1dc81955527f70e93f822

Merge pull request #1063 from javmarina/patch-1

Fixed wrong versions in AndroidExcludedRefs | 2018-07-25 18:31:55 | 3b4ebe3e2571377f93e9a6976e021324502a0f78

Fixed wrong versions in AndroidExcludedRefs

Commit https://android.googlesource.com/platform/frameworks/base/+/27db46850b708070452c0ce49daf5f79503fbde6 introduced this issue. This commit was first included in Jelly Bean 4.3 (JELLY_BEAN_MR2), not Jelly Bean 4.1 (JELLY_BEAN)
Commit https://android.googlesource.com/platform/frameworks/base/+/5200e1cb07190a1f6874d72a4561064cad3ee3e0 fixes this issue and was first included in Oreo 8.0 (O). Nougat still has this memory leak. | 2018-07-24 18:24:59 | e4778b25f2c6e65ebc485d255e38586c7d45ec97

Merge pull request #1057 from square/py/ui_bug

Fix drawing of start line | 2018-07-20 22:21:19 | af96577a7d19e4df9f63d95fd9c3bfd2adcddb5d

Avoid Toast crashes

Showing a toast can crash on API 25 because the Window Manager can throw a BadTokenException when addView is called.

This change fixes it by configuring the toast manually and calling the window manager directly. This is based on https://github.com/pyricau/frenchtoast/blob/master/frenchtoast/src/main/java/frenchtoast/Mixture.java#L49 .

Fixes #844 | 2018-07-20 16:11:22 | c9ebc5cf5099c093bde5d3309b2692cb0e2016d8

Fixing setup bug | 2018-06-28 04:07:09 | 505933817cf6e2eb0dad4a78d4c7c35a072b9868

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

Update fundamentals-fixing-a-memory-leak.md (#1775)

Fixed typo in  fundamentals-fixing-a-memory-leak.md | 2020-03-16 17:56:58 | 7e8aab836e57ce9c3fcff537f3df66542939137a

Doc fixes and updates (#1744)

* Fixes to properly render recipes in MkDoc

* Bumped release date
Updated release doc | 2020-02-06 18:00:48 | 57057c636b816cd73f9b344a4201aa04a3a8cca8

[bugfix]AppWatcher manualInstall function not works bugfix (#1734)

* manualInstall config not enabled by default bugfix

* Make manualInstall config enable decided by isDebuggableBuild

* Make manualInstall config copy from existing customized config

* Make manualInstall config copy from existing customized config and set enabled to true forcely

* Make manualInstall config enable decided by InternalAppWatcher.isDebuggableBuild | 2020-02-04 03:30:50 | 00604fce8f86e3b8a9fe4ea2ea0e71fc1a74eb28

Merge pull request #1729 from square/py/fix_text

Fix helper text | 2020-01-24 19:53:15 | 825ac6242cde0a4c0488547d03e12a8df91a5f31

Fixed compilation issue by extracting example application to debug/release folders | 2019-10-09 01:29:24 | b9f1bf88c4b0ac9f0a91cc54638899d9c6ecb8e1

fix missing toString | 2020-01-04 01:28:33 | 47bad9fec441ea462129ece0c4f1125f578ba1ec

Use "x minutes ago" format for dates (#1675)

Also fixed some of the ordering (leaks types by counts desc, leaks by date desc)

Fixes #1672 | 2019-12-16 23:56:38 | 9fae7ed497e1760abe74cf2c22535fbd51f16331

Gradle plugin that puts proguard mapping file in the apk as an asset (#1589)

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Add unit tests for copy obfuscation file task

* Add recipe describing how to use the plugin

* Add plugin usage instruction

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Rebased onto master

* Add missing test dependencies

* Use lambda function instead of a collection for plugin configuration

* Post code review fixups

* Rename according to code review suggestions

* Fix detekt warning

* Pass empty file if mapping doesn't exist

* Improved recipe

* Code review fixups

* Fix CopyObfuscationMappingFileTask tests

* Code review fixes

* Fix detekt issues

* Add plugin tests

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Rebased onto master

* Use lambda function instead of a collection for plugin configuration

* Post code review fixups

* Rename according to code review suggestions

* Fix detekt warning

* Pass empty file if mapping doesn't exist

* Improved recipe

* Code review fixups

* Fix CopyObfuscationMappingFileTask tests

* Code review fixes

* Fix detekt issues

* Add plugin tests

* Rebased onto master

* Add one more test for plugin

* Try fixing CI tests by reading $ANDROID_HOME value

* Try fixing CI tests by hardcoding android sdk path

* Debugging CI failing test

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Post review fixes

* Debugging failing test on CI

* Try fixing CI tests by hardcoding android sdk path

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debug failing test on CI

* Debug failing test on CI

* Debug failing test on CI

* Debug failing test on CI

* Debug failing test on CI

* Debug failing test on CI

* Use trusty dist in travis config

* Debug failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debug failing CI test

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Prevent GradleRunner from running builds in a separate process

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* sni: modernize travis script. Solve emulator issue.
The build now uses build tools 28 which requires little adjustments
from the original recipe. In the future we can just use the original recipe
Original recipe: https://docs.travis-ci.com/user/languages/android/ | 2019-12-10 06:48:02 | 25a10fcd9f405235de63bd791ea4ae4eb5453924

Fix emulators  (#1667)

* Revert "Fix travis (#1665)"

This reverts commit 00b9bd32d535022800153f34916d4c4667d2a5cd.

* Fix emulators

A recent emulator update breaks a few CI projects.  This PR applies
a fix suggested by Google.

https://issuetracker.google.com/issues/145622251#comment33 | 2019-12-10 05:43:06 | b678e1508e9ef3618ce2c44d44ff733f350d4185

Fix travis (#1665)

According to [this tweet](https://twitter.com/colinwhi/status/1204102384458194944) from @colinrtwhite, Travis is failing due to a bug in the most recent version of the emulator. Pinning the emulator to an older version works around it. This commit steals the fix from https://github.com/coil-kt/coil/pull/195 . | 2019-12-09 19:54:40 | 00b9bd32d535022800153f34916d4c4667d2a5cd

Add ability to customize class used to detect tests (#1654)

Developers should not ship JUnit in their app, even in debug. However, some debug libraries unfortunately ship with JUnit as a dependency (e.g. see https://github.com/square/okhttp/issues/4667).

Developers can change the default to target a different class (e.g assertj) to help LeakCanary detect unit tests, by overriding a public string:

```
  <string name="leak_canary_test_class_name">org.assertj.core.api.Assertions</string>
```

Fixes #1649 | 2019-12-03 02:35:07 | dbbb969d59b066c3f9197ebc3863cc4f54dae5d2

fix changelog | 2019-11-25 19:32:41 | 50ae3ba7558e5a3f83fc11b4d17a281f072ff078

Fix bug in handling JNI roots (#1636)

* When adding support for native reference leaks (879ab7c) there was a missing bracket in an if/else branch that led to all native gc roots being ignored.

Fixes #1634 | 2019-11-25 19:00:23 | aff338544b5eebbb0b3c792c628cca11fa888373

fix typos | 2019-11-19 03:58:07 | 25b0df0da4f6e93dedcd90342c9cd1d0eab080ed

Merge pull request #1596 from fernandospr/patch-1

Update blog-articles.md | 2019-10-04 16:35:24 | e65236dae7c5827b7c9f64c19c8b1a16ea19e5a7

Merge pull request #1598 from PaulWoitaschek/patch-1

Fixed the german string placeholder for sharing the heap dump | 2019-10-03 16:16:23 | 029f28eefd7aa966520ac3649fd2688732c02867

Fix crash when pressing home from root screen (#1578)

This bug only happens on older Android devices.

Fixes #1555 | 2019-09-11 01:51:06 | 274f58f96e8de7dcd3000c06ba3e2b50e427747d

Merge pull request #1559 from bric3/fix-primitive-array-dump-skip

Fixes the primitive array dump record skipping | 2019-09-09 22:16:57 | c0fd4d812cb8d6c5723231e501c121da2af86f06

Parsing and applying proguard mapping during heap analysis (#1542)

* Parsing and applying proguard mapping during heap analysis

* Parsing and applying proguard mapping during heap analysis

* Rebased onto master

* Post review changes and updated shark-cli to support mapping files

* Post review fixes

* Moving proguard mapping reader out of the analyzer and formatting fixes | 2019-08-30 16:54:20 | 66182a52069d9be59d0af6220aa9afd74218aa9b

fix images | 2019-08-27 20:02:50 | 8f5030e9faa8690217e1bd436274a3de5b9d3fb3

fix image links in docs | 2019-08-27 19:59:20 | edca56a947278508350bfa5dd33d3fa10699001f

Merge pull request #1549 from Armaxis/patch-1

Added section about using Detekt to Contributing | 2019-08-24 22:16:26 | c923d14909888860a99d5899af17f5b52c9b000f

Revert "Replaced accessor with a call to setter to fix the build issue"

This reverts commit 82db0398 | 2019-08-17 02:21:08 | c570cb9b0fd7bd7fcc88c4d3b529df8837e98fdc

Replaced accessor with a call to setter to fix the build issue | 2019-08-16 04:32:25 | 82db039843303044f91d36ba7c43595ab59bacd5

fix typo | 2019-08-02 15:31:17 | a2452f61e78e689efb59adaf71384d74447578b0

Add / fix android inspectors (#1491)

* Added MortarScope and ViewRootImpl inspectors
* Fixed the ContextWrapper inspector

Fixes #1490
Fixes #1389 | 2019-07-25 22:50:48 | 915f8359690a016a09e66608a041454b9c8c52cb

Documenting public APIs (#1476)

Also fixed naming and other things that weren't right.

Fixes #1474 | 2019-07-19 06:57:25 | 41c69a5d424b4236114c5ce1b077afdad38e57a5

Adding CLI for LeakCanary (#1456)

Example usage:
```
./gradlew leakcanary-cli:run --args='analyze-process com.example.leakcanary'

./gradlew leakcanary-cli:run --args='dump-process com.example.leakcanary'

./gradlew leakcanary-cli:run --args='analyze-file /path/to/heapdump.hprof'
```

Also fixed a bug in ShortestPathFinder which did not ignore null references in object arrays | 2019-07-11 19:11:30 | eded1c96e84f37393857ba4de2580aec784b2391

Behavior change & bugfixes for retained count notification (#1433)

* Bugfix: when tapping the "dump heap" notification, if the GC found no retained instance we didn't use a distinct notification id to communicate that, and then soon after we'd dismiss the notification that let's the user know there is no retained instances on tap.
* Bugfix: we weren't running the GC when checking for retained instances and the count was under the threshold
* Change: we now update the notification and keep it around for 30 seconds when the count goes to 0
* Change: the "no retained instance" notification that shows on tap is identical and also auto dismisses after 30 seconds.
* Change: we're checking for retained references (and running the GC) every 2 seconds instead of 5.

Fixes #1427 | 2019-07-03 20:55:47 | 968083a915343d881bd63e40587c070fde543732

Update how to fix a leak | 2019-06-25 05:46:56 | 177e7fd12933d99eca7a526851c53e598a03bf90

Text rendering tests (#1378)

* Added test coverage for text rendering
* Fixed bug: labels were not rendered on the last node (leaking instance)
* Matched exclusions are now rendered on their own line

Fixes #1375
Fixes #1350 | 2019-06-04 09:32:11 | 1926cb1db73f9583e11c557dbf2e5d46e3896a6e

Thread name based exclusions (#1353)

* Readded support for exclusions of local variable based on thread names
* Renamed ThreadExclusion to JavaLocalExclusion
* Fixed bug: KeyedWeakReference was not always ignored because its superclass is has a weakly reachable exclusion.
* Fixed bug: all root nodes had the same visit order as the first non root enqueued item, making it possible for a non root node to be dequeued before we're done with all roots.
* Redded gc root sorting
* Added tests to cover all uncovered bugs
* Added support for parsing StackFrameRecord

Fixes #1339 | 2019-05-20 13:17:18 | 6c2ee609efda323e88a4964d31fc5a5f0532f776

Reachability => LeakStatus (#1340)

* Combined leaking information from inspectors to solving conflicts while keeping all reasons
* Made reason from view leak inspector more obvious, and added label data about internals
* Moved reachability into LeakTraceElement
* Reachability renamed to LeakNodeStatus and leaking / not leaking
* ReachabilityInspector and Labeler are now functions with type aliases

Related to #1336: should fix the crash, though it's still unclear why AppCompatButton was a gc root there. | 2019-05-07 14:56:59 | 01210bbbfaecb3bcb6057c62b2195366d3bfa4f9

Revamp notifications (#1335)

* New notification that shows the count of retained instances. Tapping it triggers a heap dump. Fixes #1325
* Notifications are now split into two channels: default for results, and low for everything else.
* New config options: LeakCanary.config.dumpHeapWhenDebugging (default false) and LeakCanary.config.retainedVisibleThreshold (default 5)
* Replaced notification int constants and timestamps with resource ids.
* Don't show background notifications in instant apps (#1197) | 2019-05-05 16:38:26 | b14d9bc9c0a87119137bc0998bdec9314186dfcf

Highlighting new leaks (#1334)

New leaks are leaks that have a leak group that doesn't exist in any prior analysis.

* The notification now reports the count of leaks, with a split of new, known, and won't fix.
* The analysis success screen shows new leaks
* Moved description prefixes to be computed rather than inserted in the DB

Fixes #1328 | 2019-05-05 09:37:38 | f9a0518d4ddd69b782b6302caa3e3039787038e4

LeakSentry can be disabled (#1332)

LeakCanary has an enabled config option. Default is on in debug builds off in release builds.

Fixes #1327 | 2019-05-04 17:52:47 | f74f60901f34c751e8b8798d626678aa6233c893

Revert "fix trailing spaces per checkstyle"

This reverts commit ff17f879ec92ec326f8b1c6b7b8d77a5266d6622. | 2019-05-04 08:04:21 | 03136ca7dc1680299d710f79ca885412a1564144

Add test coverage for heap analysis (#1329)

* Fixed bug when reachability inspectors conflicts (reachable should win and erase unreachable)
* Added back support for leaking instances being empty objects, strings, primitive arrays or any object that we otherwise don't follow to find shortest paths. | 2019-05-04 07:51:02 | 59558e655d537c7654c411eebfd840773a8b77c9

Introducing exclusion priority (#1317)

* Add segmented FIFO queue

Unified several queues into one segmented FIFO queue. This will enable us to add several levels of priority.

* Introducing exclusion priority

* "excludedLeak" is now known as "won't fix leak", which matches its reality better. It's a leak that is known and real yet we're not fixing.
* Exclusion.alwaysExclude is replaced with Exclusion.status, with 3 possible values: NEVER_REACHABLE, WONT_FIX_LEAK, WEAKLY_REACHABLE.
* The shortest path finder will now follow weak references after all other paths have been exhausted.
* Removed class exclusion, was confusing, replaced with less lazy approach of listing fields to exclude
* VIEWLOCATIONHOLDER_ROOT should not have been always excluded, fixed.

Fixes #1173 ... well kinda. Instead of "non leaking retained instances", LeakCanary will report weakly reachable traces. Not sure if that'll help but it's a foundation we can build on. | 2019-04-30 17:44:15 | b0eedc553995e354e2382b3378bf0348801cd3c5

AllFieldsLabeler & cleanups (#1316)

* Add new optional labeler that prints all fields (useful for debugging)
* Move deprecated AnalysisResult to perflib
* Made DefaultAnalysisResultListener an object | 2019-04-30 07:08:29 | b9ee5356db265412db39c4c341880f305fbf2c76

fix format | 2019-04-22 06:25:09 | 4a2b158913e5a9eb0d5c6fdfbf949a80fc1b2c6b

Rename default to perflib and experimental to default (#1282)

* Remove experimental from module names

* Remove experimental prefix, add perflib prefix:

* update docs | 2019-04-19 06:01:39 | 425a9f24deb72691b02cdc85f80d177c05afebc5

fix list | 2019-04-18 21:55:43 | 8e3f9d26e8d3555bf934b99ac062aabc3aba528f

fix broken master | 2019-04-10 15:00:30 | f067ae53e050c5f52f47237440a6ac7eee3ca94c

fix broken build due to typo | 2019-04-10 05:44:19 | 7d4ddb4ffe3c9b0f30a84848675452dded0d4115

Leaking information aligned below simple class name. (#1258)

Also fixed issue where extraString + exclusionString were showing after the squiggly line.

Before: 
``` 
┬
├─ java.lang.Thread
│                 Leaking: NO (it's a GC root)
│                 ↓ thread Thread.<Java Local>
│                                ~~~~~~~~~~~~~ (named 'Thread-4')
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                 Leaking: UNKNOWN
│                 ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                     ~~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) 
```
After: 
``` 
┬
├─ java.lang.Thread
│            Leaking: NO (it's a GC root)
│            ↓ thread Thread.<Java Local> (named 'Thread-4')
│                            ~~~~~~~~~~~~
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                         Leaking: UNKNOWN
│                         ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                              ~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) ``` | 2019-04-05 20:11:47 | a938855585c7cf2522ffbd143d4bb66a234eea66

Add share to Stack Overflow button when viewing a leak (#1252)

* Add share to Stack Overflow button when viewing a leak

* Add question tag, lengthen toast and fix build failure. | 2019-04-04 20:49:50 | 8724d2aaffc07904517a3b823867802ca43233ae

Check if serviceInfo.processName is null. When LeakCanary runs on a seperate process and that process for some reason does not have a assigned processName, then we will crash on a NullPointerException. Also a debug log explaining this. (#1225) | 2019-04-01 19:20:40 | 3efc43608ed71dc20b0ad1e0e80e33d15249666f

fix master broken | 2019-04-01 19:07:27 | fe42130029174681a708b7d8622412efbaf81e73

fix trailing spaces per checkstyle | 2019-03-29 22:34:58 | ff17f879ec92ec326f8b1c6b7b8d77a5266d6622

Fix GC Root bugs that missed leaks (#1168)

In Perflib, Snapshot.getGcRoots() only returns the GC roots from the first heap. Based on empirical evidence, it seems like Android has 4 heaps, and the GC Roots used to only be in the first heap, but more recent versions of Android have GC Roots in other heaps as well.

This means LeakCanary would sometimes show "No Leak Found" when there actually was a leak.

Fixes #1163 | 2019-01-10 23:32:27 | 64b6e5a41796ae1587c50c8cc860cea25f28f382

fix typo | 2018-10-17 00:43:01 | 044b1e4827bc71ec008dc3f7e43c78f58885f1e1

Fix LeakCanary toasting (#1116)

- Prior attempts to get it to work with the application context turned out to be buggy.
- This makes LeakCanary use whatever the current resumed activity is, if any.
- If there is no resumed activity, then the toast isn't displayed.

This supersedes #1080 | 2018-10-16 13:23:14 | 0e39e2eea79bc05bf7147a4074dd7163f7c401ff

fix the wrong word (#1111) | 2018-10-16 01:25:28 | 636b9b6c2b39c0c887c9ed78e904239db9bc131e

Merge pull request #1104 from IlyaGulya/bug/travis-ci-cache-fix

Fix travis caching and improve build time. | 2018-09-22 21:25:59 | 344728b906daf6d010f66bdf4ccc29ad8fedede5

Error prone 2.3.1 + suggested fix and specify version

See http://errorprone.info/bugpattern/StringSplitter | 2018-08-22 07:37:33 | a6b6960d73a1da9661f4e85254570bf5f867f954

Merge pull request #1089 from hzsweers/z/fixAnother

Quick followup to #1088 | 2018-08-22 03:15:15 | be973f5f5da6a3516aedab98e639690697617747

Merge pull request #1087 from Goddchen/patch-2

Updated german translation | 2018-08-20 13:52:47 | b43c279b3e1623c193e1dc81955527f70e93f822

Merge pull request #1063 from javmarina/patch-1

Fixed wrong versions in AndroidExcludedRefs | 2018-07-25 18:31:55 | 3b4ebe3e2571377f93e9a6976e021324502a0f78

Fixed wrong versions in AndroidExcludedRefs

Commit https://android.googlesource.com/platform/frameworks/base/+/27db46850b708070452c0ce49daf5f79503fbde6 introduced this issue. This commit was first included in Jelly Bean 4.3 (JELLY_BEAN_MR2), not Jelly Bean 4.1 (JELLY_BEAN)
Commit https://android.googlesource.com/platform/frameworks/base/+/5200e1cb07190a1f6874d72a4561064cad3ee3e0 fixes this issue and was first included in Oreo 8.0 (O). Nougat still has this memory leak. | 2018-07-24 18:24:59 | e4778b25f2c6e65ebc485d255e38586c7d45ec97

Merge pull request #1057 from square/py/ui_bug

Fix drawing of start line | 2018-07-20 22:21:19 | af96577a7d19e4df9f63d95fd9c3bfd2adcddb5d

Avoid Toast crashes

Showing a toast can crash on API 25 because the Window Manager can throw a BadTokenException when addView is called.

This change fixes it by configuring the toast manually and calling the window manager directly. This is based on https://github.com/pyricau/frenchtoast/blob/master/frenchtoast/src/main/java/frenchtoast/Mixture.java#L49 .

Fixes #844 | 2018-07-20 16:11:22 | c9ebc5cf5099c093bde5d3309b2692cb0e2016d8

Fixing setup bug | 2018-06-28 04:07:09 | 505933817cf6e2eb0dad4a78d4c7c35a072b9868

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

Introducing exclusion priority (#1317)

* Add segmented FIFO queue

Unified several queues into one segmented FIFO queue. This will enable us to add several levels of priority.

* Introducing exclusion priority

* "excludedLeak" is now known as "won't fix leak", which matches its reality better. It's a leak that is known and real yet we're not fixing.
* Exclusion.alwaysExclude is replaced with Exclusion.status, with 3 possible values: NEVER_REACHABLE, WONT_FIX_LEAK, WEAKLY_REACHABLE.
* The shortest path finder will now follow weak references after all other paths have been exhausted.
* Removed class exclusion, was confusing, replaced with less lazy approach of listing fields to exclude
* VIEWLOCATIONHOLDER_ROOT should not have been always excluded, fixed.

Fixes #1173 ... well kinda. Instead of "non leaking retained instances", LeakCanary will report weakly reachable traces. Not sure if that'll help but it's a foundation we can build on. | 2019-04-30 17:44:15 | b0eedc553995e354e2382b3378bf0348801cd3c5

AllFieldsLabeler & cleanups (#1316)

* Add new optional labeler that prints all fields (useful for debugging)
* Move deprecated AnalysisResult to perflib
* Made DefaultAnalysisResultListener an object | 2019-04-30 07:08:29 | b9ee5356db265412db39c4c341880f305fbf2c76

fix format | 2019-04-22 06:25:09 | 4a2b158913e5a9eb0d5c6fdfbf949a80fc1b2c6b

Rename default to perflib and experimental to default (#1282)

* Remove experimental from module names

* Remove experimental prefix, add perflib prefix:

* update docs | 2019-04-19 06:01:39 | 425a9f24deb72691b02cdc85f80d177c05afebc5

fix list | 2019-04-18 21:55:43 | 8e3f9d26e8d3555bf934b99ac062aabc3aba528f

fix broken master | 2019-04-10 15:00:30 | f067ae53e050c5f52f47237440a6ac7eee3ca94c

fix broken build due to typo | 2019-04-10 05:44:19 | 7d4ddb4ffe3c9b0f30a84848675452dded0d4115

Leaking information aligned below simple class name. (#1258)

Also fixed issue where extraString + exclusionString were showing after the squiggly line.

Before: 
``` 
┬
├─ java.lang.Thread
│                 Leaking: NO (it's a GC root)
│                 ↓ thread Thread.<Java Local>
│                                ~~~~~~~~~~~~~ (named 'Thread-4')
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                 Leaking: UNKNOWN
│                 ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                     ~~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) 
```
After: 
``` 
┬
├─ java.lang.Thread
│            Leaking: NO (it's a GC root)
│            ↓ thread Thread.<Java Local> (named 'Thread-4')
│                            ~~~~~~~~~~~~
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                         Leaking: UNKNOWN
│                         ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                              ~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) ``` | 2019-04-05 20:11:47 | a938855585c7cf2522ffbd143d4bb66a234eea66

Add share to Stack Overflow button when viewing a leak (#1252)

* Add share to Stack Overflow button when viewing a leak

* Add question tag, lengthen toast and fix build failure. | 2019-04-04 20:49:50 | 8724d2aaffc07904517a3b823867802ca43233ae

Check if serviceInfo.processName is null. When LeakCanary runs on a seperate process and that process for some reason does not have a assigned processName, then we will crash on a NullPointerException. Also a debug log explaining this. (#1225) | 2019-04-01 19:20:40 | 3efc43608ed71dc20b0ad1e0e80e33d15249666f

fix master broken | 2019-04-01 19:07:27 | fe42130029174681a708b7d8622412efbaf81e73

Fix GC Root bugs that missed leaks (#1168)

In Perflib, Snapshot.getGcRoots() only returns the GC roots from the first heap. Based on empirical evidence, it seems like Android has 4 heaps, and the GC Roots used to only be in the first heap, but more recent versions of Android have GC Roots in other heaps as well.

This means LeakCanary would sometimes show "No Leak Found" when there actually was a leak.

Fixes #1163 | 2019-01-10 23:32:27 | 64b6e5a41796ae1587c50c8cc860cea25f28f382

fix typo | 2018-10-17 00:43:01 | 044b1e4827bc71ec008dc3f7e43c78f58885f1e1

Fix LeakCanary toasting (#1116)

- Prior attempts to get it to work with the application context turned out to be buggy.
- This makes LeakCanary use whatever the current resumed activity is, if any.
- If there is no resumed activity, then the toast isn't displayed.

This supersedes #1080 | 2018-10-16 13:23:14 | 0e39e2eea79bc05bf7147a4074dd7163f7c401ff

fix the wrong word (#1111) | 2018-10-16 01:25:28 | 636b9b6c2b39c0c887c9ed78e904239db9bc131e

Merge pull request #1104 from IlyaGulya/bug/travis-ci-cache-fix

Fix travis caching and improve build time. | 2018-09-22 21:25:59 | 344728b906daf6d010f66bdf4ccc29ad8fedede5

Error prone 2.3.1 + suggested fix and specify version

See http://errorprone.info/bugpattern/StringSplitter | 2018-08-22 07:37:33 | a6b6960d73a1da9661f4e85254570bf5f867f954

Merge pull request #1089 from hzsweers/z/fixAnother

Quick followup to #1088 | 2018-08-22 03:15:15 | be973f5f5da6a3516aedab98e639690697617747

Merge pull request #1087 from Goddchen/patch-2

Updated german translation | 2018-08-20 13:52:47 | b43c279b3e1623c193e1dc81955527f70e93f822

Merge pull request #1063 from javmarina/patch-1

Fixed wrong versions in AndroidExcludedRefs | 2018-07-25 18:31:55 | 3b4ebe3e2571377f93e9a6976e021324502a0f78

Fixed wrong versions in AndroidExcludedRefs

Commit https://android.googlesource.com/platform/frameworks/base/+/27db46850b708070452c0ce49daf5f79503fbde6 introduced this issue. This commit was first included in Jelly Bean 4.3 (JELLY_BEAN_MR2), not Jelly Bean 4.1 (JELLY_BEAN)
Commit https://android.googlesource.com/platform/frameworks/base/+/5200e1cb07190a1f6874d72a4561064cad3ee3e0 fixes this issue and was first included in Oreo 8.0 (O). Nougat still has this memory leak. | 2018-07-24 18:24:59 | e4778b25f2c6e65ebc485d255e38586c7d45ec97

Merge pull request #1057 from square/py/ui_bug

Fix drawing of start line | 2018-07-20 22:21:19 | af96577a7d19e4df9f63d95fd9c3bfd2adcddb5d

Avoid Toast crashes

Showing a toast can crash on API 25 because the Window Manager can throw a BadTokenException when addView is called.

This change fixes it by configuring the toast manually and calling the window manager directly. This is based on https://github.com/pyricau/frenchtoast/blob/master/frenchtoast/src/main/java/frenchtoast/Mixture.java#L49 .

Fixes #844 | 2018-07-20 16:11:22 | c9ebc5cf5099c093bde5d3309b2692cb0e2016d8

Fixing setup bug | 2018-06-28 04:07:09 | 505933817cf6e2eb0dad4a78d4c7c35a072b9868

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

Update fundamentals-fixing-a-memory-leak.md (#1775)

Fixed typo in  fundamentals-fixing-a-memory-leak.md | 2020-03-16 17:56:58 | 7e8aab836e57ce9c3fcff537f3df66542939137a

Doc fixes and updates (#1744)

* Fixes to properly render recipes in MkDoc

* Bumped release date
Updated release doc | 2020-02-06 18:00:48 | 57057c636b816cd73f9b344a4201aa04a3a8cca8

[bugfix]AppWatcher manualInstall function not works bugfix (#1734)

* manualInstall config not enabled by default bugfix

* Make manualInstall config enable decided by isDebuggableBuild

* Make manualInstall config copy from existing customized config

* Make manualInstall config copy from existing customized config and set enabled to true forcely

* Make manualInstall config enable decided by InternalAppWatcher.isDebuggableBuild | 2020-02-04 03:30:50 | 00604fce8f86e3b8a9fe4ea2ea0e71fc1a74eb28

Merge pull request #1729 from square/py/fix_text

Fix helper text | 2020-01-24 19:53:15 | 825ac6242cde0a4c0488547d03e12a8df91a5f31

Fixed compilation issue by extracting example application to debug/release folders | 2019-10-09 01:29:24 | b9f1bf88c4b0ac9f0a91cc54638899d9c6ecb8e1

fix missing toString | 2020-01-04 01:28:33 | 47bad9fec441ea462129ece0c4f1125f578ba1ec

Use "x minutes ago" format for dates (#1675)

Also fixed some of the ordering (leaks types by counts desc, leaks by date desc)

Fixes #1672 | 2019-12-16 23:56:38 | 9fae7ed497e1760abe74cf2c22535fbd51f16331

Gradle plugin that puts proguard mapping file in the apk as an asset (#1589)

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Add unit tests for copy obfuscation file task

* Add recipe describing how to use the plugin

* Add plugin usage instruction

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Rebased onto master

* Add missing test dependencies

* Use lambda function instead of a collection for plugin configuration

* Post code review fixups

* Rename according to code review suggestions

* Fix detekt warning

* Pass empty file if mapping doesn't exist

* Improved recipe

* Code review fixups

* Fix CopyObfuscationMappingFileTask tests

* Code review fixes

* Fix detekt issues

* Add plugin tests

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Rebased onto master

* Use lambda function instead of a collection for plugin configuration

* Post code review fixups

* Rename according to code review suggestions

* Fix detekt warning

* Pass empty file if mapping doesn't exist

* Improved recipe

* Code review fixups

* Fix CopyObfuscationMappingFileTask tests

* Code review fixes

* Fix detekt issues

* Add plugin tests

* Rebased onto master

* Add one more test for plugin

* Try fixing CI tests by reading $ANDROID_HOME value

* Try fixing CI tests by hardcoding android sdk path

* Debugging CI failing test

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Post review fixes

* Debugging failing test on CI

* Try fixing CI tests by hardcoding android sdk path

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debug failing test on CI

* Debug failing test on CI

* Debug failing test on CI

* Debug failing test on CI

* Debug failing test on CI

* Debug failing test on CI

* Use trusty dist in travis config

* Debug failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debug failing CI test

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Prevent GradleRunner from running builds in a separate process

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* sni: modernize travis script. Solve emulator issue.
The build now uses build tools 28 which requires little adjustments
from the original recipe. In the future we can just use the original recipe
Original recipe: https://docs.travis-ci.com/user/languages/android/ | 2019-12-10 06:48:02 | 25a10fcd9f405235de63bd791ea4ae4eb5453924

Fix emulators  (#1667)

* Revert "Fix travis (#1665)"

This reverts commit 00b9bd32d535022800153f34916d4c4667d2a5cd.

* Fix emulators

A recent emulator update breaks a few CI projects.  This PR applies
a fix suggested by Google.

https://issuetracker.google.com/issues/145622251#comment33 | 2019-12-10 05:43:06 | b678e1508e9ef3618ce2c44d44ff733f350d4185

Fix travis (#1665)

According to [this tweet](https://twitter.com/colinwhi/status/1204102384458194944) from @colinrtwhite, Travis is failing due to a bug in the most recent version of the emulator. Pinning the emulator to an older version works around it. This commit steals the fix from https://github.com/coil-kt/coil/pull/195 . | 2019-12-09 19:54:40 | 00b9bd32d535022800153f34916d4c4667d2a5cd

Add ability to customize class used to detect tests (#1654)

Developers should not ship JUnit in their app, even in debug. However, some debug libraries unfortunately ship with JUnit as a dependency (e.g. see https://github.com/square/okhttp/issues/4667).

Developers can change the default to target a different class (e.g assertj) to help LeakCanary detect unit tests, by overriding a public string:

```
  <string name="leak_canary_test_class_name">org.assertj.core.api.Assertions</string>
```

Fixes #1649 | 2019-12-03 02:35:07 | dbbb969d59b066c3f9197ebc3863cc4f54dae5d2

fix changelog | 2019-11-25 19:32:41 | 50ae3ba7558e5a3f83fc11b4d17a281f072ff078

Fix bug in handling JNI roots (#1636)

* When adding support for native reference leaks (879ab7c) there was a missing bracket in an if/else branch that led to all native gc roots being ignored.

Fixes #1634 | 2019-11-25 19:00:23 | aff338544b5eebbb0b3c792c628cca11fa888373

fix typos | 2019-11-19 03:58:07 | 25b0df0da4f6e93dedcd90342c9cd1d0eab080ed

Merge pull request #1596 from fernandospr/patch-1

Update blog-articles.md | 2019-10-04 16:35:24 | e65236dae7c5827b7c9f64c19c8b1a16ea19e5a7

Merge pull request #1598 from PaulWoitaschek/patch-1

Fixed the german string placeholder for sharing the heap dump | 2019-10-03 16:16:23 | 029f28eefd7aa966520ac3649fd2688732c02867

Fix crash when pressing home from root screen (#1578)

This bug only happens on older Android devices.

Fixes #1555 | 2019-09-11 01:51:06 | 274f58f96e8de7dcd3000c06ba3e2b50e427747d

Merge pull request #1559 from bric3/fix-primitive-array-dump-skip

Fixes the primitive array dump record skipping | 2019-09-09 22:16:57 | c0fd4d812cb8d6c5723231e501c121da2af86f06

Parsing and applying proguard mapping during heap analysis (#1542)

* Parsing and applying proguard mapping during heap analysis

* Parsing and applying proguard mapping during heap analysis

* Rebased onto master

* Post review changes and updated shark-cli to support mapping files

* Post review fixes

* Moving proguard mapping reader out of the analyzer and formatting fixes | 2019-08-30 16:54:20 | 66182a52069d9be59d0af6220aa9afd74218aa9b

fix images | 2019-08-27 20:02:50 | 8f5030e9faa8690217e1bd436274a3de5b9d3fb3

fix image links in docs | 2019-08-27 19:59:20 | edca56a947278508350bfa5dd33d3fa10699001f

Merge pull request #1549 from Armaxis/patch-1

Added section about using Detekt to Contributing | 2019-08-24 22:16:26 | c923d14909888860a99d5899af17f5b52c9b000f

Revert "Replaced accessor with a call to setter to fix the build issue"

This reverts commit 82db0398 | 2019-08-17 02:21:08 | c570cb9b0fd7bd7fcc88c4d3b529df8837e98fdc

Replaced accessor with a call to setter to fix the build issue | 2019-08-16 04:32:25 | 82db039843303044f91d36ba7c43595ab59bacd5

fix typo | 2019-08-02 15:31:17 | a2452f61e78e689efb59adaf71384d74447578b0

Add / fix android inspectors (#1491)

* Added MortarScope and ViewRootImpl inspectors
* Fixed the ContextWrapper inspector

Fixes #1490
Fixes #1389 | 2019-07-25 22:50:48 | 915f8359690a016a09e66608a041454b9c8c52cb

Documenting public APIs (#1476)

Also fixed naming and other things that weren't right.

Fixes #1474 | 2019-07-19 06:57:25 | 41c69a5d424b4236114c5ce1b077afdad38e57a5

Adding CLI for LeakCanary (#1456)

Example usage:
```
./gradlew leakcanary-cli:run --args='analyze-process com.example.leakcanary'

./gradlew leakcanary-cli:run --args='dump-process com.example.leakcanary'

./gradlew leakcanary-cli:run --args='analyze-file /path/to/heapdump.hprof'
```

Also fixed a bug in ShortestPathFinder which did not ignore null references in object arrays | 2019-07-11 19:11:30 | eded1c96e84f37393857ba4de2580aec784b2391

Behavior change & bugfixes for retained count notification (#1433)

* Bugfix: when tapping the "dump heap" notification, if the GC found no retained instance we didn't use a distinct notification id to communicate that, and then soon after we'd dismiss the notification that let's the user know there is no retained instances on tap.
* Bugfix: we weren't running the GC when checking for retained instances and the count was under the threshold
* Change: we now update the notification and keep it around for 30 seconds when the count goes to 0
* Change: the "no retained instance" notification that shows on tap is identical and also auto dismisses after 30 seconds.
* Change: we're checking for retained references (and running the GC) every 2 seconds instead of 5.

Fixes #1427 | 2019-07-03 20:55:47 | 968083a915343d881bd63e40587c070fde543732

Update how to fix a leak | 2019-06-25 05:46:56 | 177e7fd12933d99eca7a526851c53e598a03bf90

Text rendering tests (#1378)

* Added test coverage for text rendering
* Fixed bug: labels were not rendered on the last node (leaking instance)
* Matched exclusions are now rendered on their own line

Fixes #1375
Fixes #1350 | 2019-06-04 09:32:11 | 1926cb1db73f9583e11c557dbf2e5d46e3896a6e

Thread name based exclusions (#1353)

* Readded support for exclusions of local variable based on thread names
* Renamed ThreadExclusion to JavaLocalExclusion
* Fixed bug: KeyedWeakReference was not always ignored because its superclass is has a weakly reachable exclusion.
* Fixed bug: all root nodes had the same visit order as the first non root enqueued item, making it possible for a non root node to be dequeued before we're done with all roots.
* Redded gc root sorting
* Added tests to cover all uncovered bugs
* Added support for parsing StackFrameRecord

Fixes #1339 | 2019-05-20 13:17:18 | 6c2ee609efda323e88a4964d31fc5a5f0532f776

Reachability => LeakStatus (#1340)

* Combined leaking information from inspectors to solving conflicts while keeping all reasons
* Made reason from view leak inspector more obvious, and added label data about internals
* Moved reachability into LeakTraceElement
* Reachability renamed to LeakNodeStatus and leaking / not leaking
* ReachabilityInspector and Labeler are now functions with type aliases

Related to #1336: should fix the crash, though it's still unclear why AppCompatButton was a gc root there. | 2019-05-07 14:56:59 | 01210bbbfaecb3bcb6057c62b2195366d3bfa4f9

Revamp notifications (#1335)

* New notification that shows the count of retained instances. Tapping it triggers a heap dump. Fixes #1325
* Notifications are now split into two channels: default for results, and low for everything else.
* New config options: LeakCanary.config.dumpHeapWhenDebugging (default false) and LeakCanary.config.retainedVisibleThreshold (default 5)
* Replaced notification int constants and timestamps with resource ids.
* Don't show background notifications in instant apps (#1197) | 2019-05-05 16:38:26 | b14d9bc9c0a87119137bc0998bdec9314186dfcf

Highlighting new leaks (#1334)

New leaks are leaks that have a leak group that doesn't exist in any prior analysis.

* The notification now reports the count of leaks, with a split of new, known, and won't fix.
* The analysis success screen shows new leaks
* Moved description prefixes to be computed rather than inserted in the DB

Fixes #1328 | 2019-05-05 09:37:38 | f9a0518d4ddd69b782b6302caa3e3039787038e4

LeakSentry can be disabled (#1332)

LeakCanary has an enabled config option. Default is on in debug builds off in release builds.

Fixes #1327 | 2019-05-04 17:52:47 | f74f60901f34c751e8b8798d626678aa6233c893

Revert "fix trailing spaces per checkstyle"

This reverts commit ff17f879ec92ec326f8b1c6b7b8d77a5266d6622. | 2019-05-04 08:04:21 | 03136ca7dc1680299d710f79ca885412a1564144

Add test coverage for heap analysis (#1329)

* Fixed bug when reachability inspectors conflicts (reachable should win and erase unreachable)
* Added back support for leaking instances being empty objects, strings, primitive arrays or any object that we otherwise don't follow to find shortest paths. | 2019-05-04 07:51:02 | 59558e655d537c7654c411eebfd840773a8b77c9

Introducing exclusion priority (#1317)

* Add segmented FIFO queue

Unified several queues into one segmented FIFO queue. This will enable us to add several levels of priority.

* Introducing exclusion priority

* "excludedLeak" is now known as "won't fix leak", which matches its reality better. It's a leak that is known and real yet we're not fixing.
* Exclusion.alwaysExclude is replaced with Exclusion.status, with 3 possible values: NEVER_REACHABLE, WONT_FIX_LEAK, WEAKLY_REACHABLE.
* The shortest path finder will now follow weak references after all other paths have been exhausted.
* Removed class exclusion, was confusing, replaced with less lazy approach of listing fields to exclude
* VIEWLOCATIONHOLDER_ROOT should not have been always excluded, fixed.

Fixes #1173 ... well kinda. Instead of "non leaking retained instances", LeakCanary will report weakly reachable traces. Not sure if that'll help but it's a foundation we can build on. | 2019-04-30 17:44:15 | b0eedc553995e354e2382b3378bf0348801cd3c5

AllFieldsLabeler & cleanups (#1316)

* Add new optional labeler that prints all fields (useful for debugging)
* Move deprecated AnalysisResult to perflib
* Made DefaultAnalysisResultListener an object | 2019-04-30 07:08:29 | b9ee5356db265412db39c4c341880f305fbf2c76

fix format | 2019-04-22 06:25:09 | 4a2b158913e5a9eb0d5c6fdfbf949a80fc1b2c6b

Rename default to perflib and experimental to default (#1282)

* Remove experimental from module names

* Remove experimental prefix, add perflib prefix:

* update docs | 2019-04-19 06:01:39 | 425a9f24deb72691b02cdc85f80d177c05afebc5

fix list | 2019-04-18 21:55:43 | 8e3f9d26e8d3555bf934b99ac062aabc3aba528f

fix broken master | 2019-04-10 15:00:30 | f067ae53e050c5f52f47237440a6ac7eee3ca94c

fix broken build due to typo | 2019-04-10 05:44:19 | 7d4ddb4ffe3c9b0f30a84848675452dded0d4115

Leaking information aligned below simple class name. (#1258)

Also fixed issue where extraString + exclusionString were showing after the squiggly line.

Before: 
``` 
┬
├─ java.lang.Thread
│                 Leaking: NO (it's a GC root)
│                 ↓ thread Thread.<Java Local>
│                                ~~~~~~~~~~~~~ (named 'Thread-4')
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                 Leaking: UNKNOWN
│                 ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                     ~~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) 
```
After: 
``` 
┬
├─ java.lang.Thread
│            Leaking: NO (it's a GC root)
│            ↓ thread Thread.<Java Local> (named 'Thread-4')
│                            ~~~~~~~~~~~~
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                         Leaking: UNKNOWN
│                         ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                              ~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) ``` | 2019-04-05 20:11:47 | a938855585c7cf2522ffbd143d4bb66a234eea66

Add share to Stack Overflow button when viewing a leak (#1252)

* Add share to Stack Overflow button when viewing a leak

* Add question tag, lengthen toast and fix build failure. | 2019-04-04 20:49:50 | 8724d2aaffc07904517a3b823867802ca43233ae

Check if serviceInfo.processName is null. When LeakCanary runs on a seperate process and that process for some reason does not have a assigned processName, then we will crash on a NullPointerException. Also a debug log explaining this. (#1225) | 2019-04-01 19:20:40 | 3efc43608ed71dc20b0ad1e0e80e33d15249666f

fix master broken | 2019-04-01 19:07:27 | fe42130029174681a708b7d8622412efbaf81e73

fix trailing spaces per checkstyle | 2019-03-29 22:34:58 | ff17f879ec92ec326f8b1c6b7b8d77a5266d6622

Fix GC Root bugs that missed leaks (#1168)

In Perflib, Snapshot.getGcRoots() only returns the GC roots from the first heap. Based on empirical evidence, it seems like Android has 4 heaps, and the GC Roots used to only be in the first heap, but more recent versions of Android have GC Roots in other heaps as well.

This means LeakCanary would sometimes show "No Leak Found" when there actually was a leak.

Fixes #1163 | 2019-01-10 23:32:27 | 64b6e5a41796ae1587c50c8cc860cea25f28f382

fix typo | 2018-10-17 00:43:01 | 044b1e4827bc71ec008dc3f7e43c78f58885f1e1

Fix LeakCanary toasting (#1116)

- Prior attempts to get it to work with the application context turned out to be buggy.
- This makes LeakCanary use whatever the current resumed activity is, if any.
- If there is no resumed activity, then the toast isn't displayed.

This supersedes #1080 | 2018-10-16 13:23:14 | 0e39e2eea79bc05bf7147a4074dd7163f7c401ff

fix the wrong word (#1111) | 2018-10-16 01:25:28 | 636b9b6c2b39c0c887c9ed78e904239db9bc131e

Merge pull request #1104 from IlyaGulya/bug/travis-ci-cache-fix

Fix travis caching and improve build time. | 2018-09-22 21:25:59 | 344728b906daf6d010f66bdf4ccc29ad8fedede5

Error prone 2.3.1 + suggested fix and specify version

See http://errorprone.info/bugpattern/StringSplitter | 2018-08-22 07:37:33 | a6b6960d73a1da9661f4e85254570bf5f867f954

Merge pull request #1089 from hzsweers/z/fixAnother

Quick followup to #1088 | 2018-08-22 03:15:15 | be973f5f5da6a3516aedab98e639690697617747

Merge pull request #1087 from Goddchen/patch-2

Updated german translation | 2018-08-20 13:52:47 | b43c279b3e1623c193e1dc81955527f70e93f822

Merge pull request #1063 from javmarina/patch-1

Fixed wrong versions in AndroidExcludedRefs | 2018-07-25 18:31:55 | 3b4ebe3e2571377f93e9a6976e021324502a0f78

Fixed wrong versions in AndroidExcludedRefs

Commit https://android.googlesource.com/platform/frameworks/base/+/27db46850b708070452c0ce49daf5f79503fbde6 introduced this issue. This commit was first included in Jelly Bean 4.3 (JELLY_BEAN_MR2), not Jelly Bean 4.1 (JELLY_BEAN)
Commit https://android.googlesource.com/platform/frameworks/base/+/5200e1cb07190a1f6874d72a4561064cad3ee3e0 fixes this issue and was first included in Oreo 8.0 (O). Nougat still has this memory leak. | 2018-07-24 18:24:59 | e4778b25f2c6e65ebc485d255e38586c7d45ec97

Merge pull request #1057 from square/py/ui_bug

Fix drawing of start line | 2018-07-20 22:21:19 | af96577a7d19e4df9f63d95fd9c3bfd2adcddb5d

Avoid Toast crashes

Showing a toast can crash on API 25 because the Window Manager can throw a BadTokenException when addView is called.

This change fixes it by configuring the toast manually and calling the window manager directly. This is based on https://github.com/pyricau/frenchtoast/blob/master/frenchtoast/src/main/java/frenchtoast/Mixture.java#L49 .

Fixes #844 | 2018-07-20 16:11:22 | c9ebc5cf5099c093bde5d3309b2692cb0e2016d8

Fixing setup bug | 2018-06-28 04:07:09 | 505933817cf6e2eb0dad4a78d4c7c35a072b9868

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

Update fundamentals-fixing-a-memory-leak.md (#1775)

Fixed typo in  fundamentals-fixing-a-memory-leak.md | 2020-03-16 17:56:58 | 7e8aab836e57ce9c3fcff537f3df66542939137a

Doc fixes and updates (#1744)

* Fixes to properly render recipes in MkDoc

* Bumped release date
Updated release doc | 2020-02-06 18:00:48 | 57057c636b816cd73f9b344a4201aa04a3a8cca8

[bugfix]AppWatcher manualInstall function not works bugfix (#1734)

* manualInstall config not enabled by default bugfix

* Make manualInstall config enable decided by isDebuggableBuild

* Make manualInstall config copy from existing customized config

* Make manualInstall config copy from existing customized config and set enabled to true forcely

* Make manualInstall config enable decided by InternalAppWatcher.isDebuggableBuild | 2020-02-04 03:30:50 | 00604fce8f86e3b8a9fe4ea2ea0e71fc1a74eb28

Merge pull request #1729 from square/py/fix_text

Fix helper text | 2020-01-24 19:53:15 | 825ac6242cde0a4c0488547d03e12a8df91a5f31

Fixed compilation issue by extracting example application to debug/release folders | 2019-10-09 01:29:24 | b9f1bf88c4b0ac9f0a91cc54638899d9c6ecb8e1

fix missing toString | 2020-01-04 01:28:33 | 47bad9fec441ea462129ece0c4f1125f578ba1ec

Use "x minutes ago" format for dates (#1675)

Also fixed some of the ordering (leaks types by counts desc, leaks by date desc)

Fixes #1672 | 2019-12-16 23:56:38 | 9fae7ed497e1760abe74cf2c22535fbd51f16331

Gradle plugin that puts proguard mapping file in the apk as an asset (#1589)

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Add unit tests for copy obfuscation file task

* Add recipe describing how to use the plugin

* Add plugin usage instruction

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Rebased onto master

* Add missing test dependencies

* Use lambda function instead of a collection for plugin configuration

* Post code review fixups

* Rename according to code review suggestions

* Fix detekt warning

* Pass empty file if mapping doesn't exist

* Improved recipe

* Code review fixups

* Fix CopyObfuscationMappingFileTask tests

* Code review fixes

* Fix detekt issues

* Add plugin tests

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Rebased onto master

* Use lambda function instead of a collection for plugin configuration

* Post code review fixups

* Rename according to code review suggestions

* Fix detekt warning

* Pass empty file if mapping doesn't exist

* Improved recipe

* Code review fixups

* Fix CopyObfuscationMappingFileTask tests

* Code review fixes

* Fix detekt issues

* Add plugin tests

* Rebased onto master

* Add one more test for plugin

* Try fixing CI tests by reading $ANDROID_HOME value

* Try fixing CI tests by hardcoding android sdk path

* Debugging CI failing test

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Post review fixes

* Debugging failing test on CI

* Try fixing CI tests by hardcoding android sdk path

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debug failing test on CI

* Debug failing test on CI

* Debug failing test on CI

* Debug failing test on CI

* Debug failing test on CI

* Debug failing test on CI

* Use trusty dist in travis config

* Debug failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debug failing CI test

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Prevent GradleRunner from running builds in a separate process

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* sni: modernize travis script. Solve emulator issue.
The build now uses build tools 28 which requires little adjustments
from the original recipe. In the future we can just use the original recipe
Original recipe: https://docs.travis-ci.com/user/languages/android/ | 2019-12-10 06:48:02 | 25a10fcd9f405235de63bd791ea4ae4eb5453924

Fix emulators  (#1667)

* Revert "Fix travis (#1665)"

This reverts commit 00b9bd32d535022800153f34916d4c4667d2a5cd.

* Fix emulators

A recent emulator update breaks a few CI projects.  This PR applies
a fix suggested by Google.

https://issuetracker.google.com/issues/145622251#comment33 | 2019-12-10 05:43:06 | b678e1508e9ef3618ce2c44d44ff733f350d4185

Fix travis (#1665)

According to [this tweet](https://twitter.com/colinwhi/status/1204102384458194944) from @colinrtwhite, Travis is failing due to a bug in the most recent version of the emulator. Pinning the emulator to an older version works around it. This commit steals the fix from https://github.com/coil-kt/coil/pull/195 . | 2019-12-09 19:54:40 | 00b9bd32d535022800153f34916d4c4667d2a5cd

Add ability to customize class used to detect tests (#1654)

Developers should not ship JUnit in their app, even in debug. However, some debug libraries unfortunately ship with JUnit as a dependency (e.g. see https://github.com/square/okhttp/issues/4667).

Developers can change the default to target a different class (e.g assertj) to help LeakCanary detect unit tests, by overriding a public string:

```
  <string name="leak_canary_test_class_name">org.assertj.core.api.Assertions</string>
```

Fixes #1649 | 2019-12-03 02:35:07 | dbbb969d59b066c3f9197ebc3863cc4f54dae5d2

fix changelog | 2019-11-25 19:32:41 | 50ae3ba7558e5a3f83fc11b4d17a281f072ff078

Fix bug in handling JNI roots (#1636)

* When adding support for native reference leaks (879ab7c) there was a missing bracket in an if/else branch that led to all native gc roots being ignored.

Fixes #1634 | 2019-11-25 19:00:23 | aff338544b5eebbb0b3c792c628cca11fa888373

fix typos | 2019-11-19 03:58:07 | 25b0df0da4f6e93dedcd90342c9cd1d0eab080ed

Merge pull request #1596 from fernandospr/patch-1

Update blog-articles.md | 2019-10-04 16:35:24 | e65236dae7c5827b7c9f64c19c8b1a16ea19e5a7

Merge pull request #1598 from PaulWoitaschek/patch-1

Fixed the german string placeholder for sharing the heap dump | 2019-10-03 16:16:23 | 029f28eefd7aa966520ac3649fd2688732c02867

Fix crash when pressing home from root screen (#1578)

This bug only happens on older Android devices.

Fixes #1555 | 2019-09-11 01:51:06 | 274f58f96e8de7dcd3000c06ba3e2b50e427747d

Merge pull request #1559 from bric3/fix-primitive-array-dump-skip

Fixes the primitive array dump record skipping | 2019-09-09 22:16:57 | c0fd4d812cb8d6c5723231e501c121da2af86f06

Parsing and applying proguard mapping during heap analysis (#1542)

* Parsing and applying proguard mapping during heap analysis

* Parsing and applying proguard mapping during heap analysis

* Rebased onto master

* Post review changes and updated shark-cli to support mapping files

* Post review fixes

* Moving proguard mapping reader out of the analyzer and formatting fixes | 2019-08-30 16:54:20 | 66182a52069d9be59d0af6220aa9afd74218aa9b

fix images | 2019-08-27 20:02:50 | 8f5030e9faa8690217e1bd436274a3de5b9d3fb3

fix image links in docs | 2019-08-27 19:59:20 | edca56a947278508350bfa5dd33d3fa10699001f

Merge pull request #1549 from Armaxis/patch-1

Added section about using Detekt to Contributing | 2019-08-24 22:16:26 | c923d14909888860a99d5899af17f5b52c9b000f

Revert "Replaced accessor with a call to setter to fix the build issue"

This reverts commit 82db0398 | 2019-08-17 02:21:08 | c570cb9b0fd7bd7fcc88c4d3b529df8837e98fdc

Replaced accessor with a call to setter to fix the build issue | 2019-08-16 04:32:25 | 82db039843303044f91d36ba7c43595ab59bacd5

fix typo | 2019-08-02 15:31:17 | a2452f61e78e689efb59adaf71384d74447578b0

Add / fix android inspectors (#1491)

* Added MortarScope and ViewRootImpl inspectors
* Fixed the ContextWrapper inspector

Fixes #1490
Fixes #1389 | 2019-07-25 22:50:48 | 915f8359690a016a09e66608a041454b9c8c52cb

Documenting public APIs (#1476)

Also fixed naming and other things that weren't right.

Fixes #1474 | 2019-07-19 06:57:25 | 41c69a5d424b4236114c5ce1b077afdad38e57a5

Adding CLI for LeakCanary (#1456)

Example usage:
```
./gradlew leakcanary-cli:run --args='analyze-process com.example.leakcanary'

./gradlew leakcanary-cli:run --args='dump-process com.example.leakcanary'

./gradlew leakcanary-cli:run --args='analyze-file /path/to/heapdump.hprof'
```

Also fixed a bug in ShortestPathFinder which did not ignore null references in object arrays | 2019-07-11 19:11:30 | eded1c96e84f37393857ba4de2580aec784b2391

Behavior change & bugfixes for retained count notification (#1433)

* Bugfix: when tapping the "dump heap" notification, if the GC found no retained instance we didn't use a distinct notification id to communicate that, and then soon after we'd dismiss the notification that let's the user know there is no retained instances on tap.
* Bugfix: we weren't running the GC when checking for retained instances and the count was under the threshold
* Change: we now update the notification and keep it around for 30 seconds when the count goes to 0
* Change: the "no retained instance" notification that shows on tap is identical and also auto dismisses after 30 seconds.
* Change: we're checking for retained references (and running the GC) every 2 seconds instead of 5.

Fixes #1427 | 2019-07-03 20:55:47 | 968083a915343d881bd63e40587c070fde543732

Update how to fix a leak | 2019-06-25 05:46:56 | 177e7fd12933d99eca7a526851c53e598a03bf90

Text rendering tests (#1378)

* Added test coverage for text rendering
* Fixed bug: labels were not rendered on the last node (leaking instance)
* Matched exclusions are now rendered on their own line

Fixes #1375
Fixes #1350 | 2019-06-04 09:32:11 | 1926cb1db73f9583e11c557dbf2e5d46e3896a6e

Thread name based exclusions (#1353)

* Readded support for exclusions of local variable based on thread names
* Renamed ThreadExclusion to JavaLocalExclusion
* Fixed bug: KeyedWeakReference was not always ignored because its superclass is has a weakly reachable exclusion.
* Fixed bug: all root nodes had the same visit order as the first non root enqueued item, making it possible for a non root node to be dequeued before we're done with all roots.
* Redded gc root sorting
* Added tests to cover all uncovered bugs
* Added support for parsing StackFrameRecord

Fixes #1339 | 2019-05-20 13:17:18 | 6c2ee609efda323e88a4964d31fc5a5f0532f776

Reachability => LeakStatus (#1340)

* Combined leaking information from inspectors to solving conflicts while keeping all reasons
* Made reason from view leak inspector more obvious, and added label data about internals
* Moved reachability into LeakTraceElement
* Reachability renamed to LeakNodeStatus and leaking / not leaking
* ReachabilityInspector and Labeler are now functions with type aliases

Related to #1336: should fix the crash, though it's still unclear why AppCompatButton was a gc root there. | 2019-05-07 14:56:59 | 01210bbbfaecb3bcb6057c62b2195366d3bfa4f9

Revamp notifications (#1335)

* New notification that shows the count of retained instances. Tapping it triggers a heap dump. Fixes #1325
* Notifications are now split into two channels: default for results, and low for everything else.
* New config options: LeakCanary.config.dumpHeapWhenDebugging (default false) and LeakCanary.config.retainedVisibleThreshold (default 5)
* Replaced notification int constants and timestamps with resource ids.
* Don't show background notifications in instant apps (#1197) | 2019-05-05 16:38:26 | b14d9bc9c0a87119137bc0998bdec9314186dfcf

Highlighting new leaks (#1334)

New leaks are leaks that have a leak group that doesn't exist in any prior analysis.

* The notification now reports the count of leaks, with a split of new, known, and won't fix.
* The analysis success screen shows new leaks
* Moved description prefixes to be computed rather than inserted in the DB

Fixes #1328 | 2019-05-05 09:37:38 | f9a0518d4ddd69b782b6302caa3e3039787038e4

LeakSentry can be disabled (#1332)

LeakCanary has an enabled config option. Default is on in debug builds off in release builds.

Fixes #1327 | 2019-05-04 17:52:47 | f74f60901f34c751e8b8798d626678aa6233c893

Revert "fix trailing spaces per checkstyle"

This reverts commit ff17f879ec92ec326f8b1c6b7b8d77a5266d6622. | 2019-05-04 08:04:21 | 03136ca7dc1680299d710f79ca885412a1564144

Add test coverage for heap analysis (#1329)

* Fixed bug when reachability inspectors conflicts (reachable should win and erase unreachable)
* Added back support for leaking instances being empty objects, strings, primitive arrays or any object that we otherwise don't follow to find shortest paths. | 2019-05-04 07:51:02 | 59558e655d537c7654c411eebfd840773a8b77c9

Introducing exclusion priority (#1317)

* Add segmented FIFO queue

Unified several queues into one segmented FIFO queue. This will enable us to add several levels of priority.

* Introducing exclusion priority

* "excludedLeak" is now known as "won't fix leak", which matches its reality better. It's a leak that is known and real yet we're not fixing.
* Exclusion.alwaysExclude is replaced with Exclusion.status, with 3 possible values: NEVER_REACHABLE, WONT_FIX_LEAK, WEAKLY_REACHABLE.
* The shortest path finder will now follow weak references after all other paths have been exhausted.
* Removed class exclusion, was confusing, replaced with less lazy approach of listing fields to exclude
* VIEWLOCATIONHOLDER_ROOT should not have been always excluded, fixed.

Fixes #1173 ... well kinda. Instead of "non leaking retained instances", LeakCanary will report weakly reachable traces. Not sure if that'll help but it's a foundation we can build on. | 2019-04-30 17:44:15 | b0eedc553995e354e2382b3378bf0348801cd3c5

AllFieldsLabeler & cleanups (#1316)

* Add new optional labeler that prints all fields (useful for debugging)
* Move deprecated AnalysisResult to perflib
* Made DefaultAnalysisResultListener an object | 2019-04-30 07:08:29 | b9ee5356db265412db39c4c341880f305fbf2c76

fix format | 2019-04-22 06:25:09 | 4a2b158913e5a9eb0d5c6fdfbf949a80fc1b2c6b

Rename default to perflib and experimental to default (#1282)

* Remove experimental from module names

* Remove experimental prefix, add perflib prefix:

* update docs | 2019-04-19 06:01:39 | 425a9f24deb72691b02cdc85f80d177c05afebc5

fix list | 2019-04-18 21:55:43 | 8e3f9d26e8d3555bf934b99ac062aabc3aba528f

fix broken master | 2019-04-10 15:00:30 | f067ae53e050c5f52f47237440a6ac7eee3ca94c

fix broken build due to typo | 2019-04-10 05:44:19 | 7d4ddb4ffe3c9b0f30a84848675452dded0d4115

Leaking information aligned below simple class name. (#1258)

Also fixed issue where extraString + exclusionString were showing after the squiggly line.

Before: 
``` 
┬
├─ java.lang.Thread
│                 Leaking: NO (it's a GC root)
│                 ↓ thread Thread.<Java Local>
│                                ~~~~~~~~~~~~~ (named 'Thread-4')
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                 Leaking: UNKNOWN
│                 ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                     ~~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) 
```
After: 
``` 
┬
├─ java.lang.Thread
│            Leaking: NO (it's a GC root)
│            ↓ thread Thread.<Java Local> (named 'Thread-4')
│                            ~~~~~~~~~~~~
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                         Leaking: UNKNOWN
│                         ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                              ~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) ``` | 2019-04-05 20:11:47 | a938855585c7cf2522ffbd143d4bb66a234eea66

Add share to Stack Overflow button when viewing a leak (#1252)

* Add share to Stack Overflow button when viewing a leak

* Add question tag, lengthen toast and fix build failure. | 2019-04-04 20:49:50 | 8724d2aaffc07904517a3b823867802ca43233ae

Check if serviceInfo.processName is null. When LeakCanary runs on a seperate process and that process for some reason does not have a assigned processName, then we will crash on a NullPointerException. Also a debug log explaining this. (#1225) | 2019-04-01 19:20:40 | 3efc43608ed71dc20b0ad1e0e80e33d15249666f

fix master broken | 2019-04-01 19:07:27 | fe42130029174681a708b7d8622412efbaf81e73

fix trailing spaces per checkstyle | 2019-03-29 22:34:58 | ff17f879ec92ec326f8b1c6b7b8d77a5266d6622

Fix GC Root bugs that missed leaks (#1168)

In Perflib, Snapshot.getGcRoots() only returns the GC roots from the first heap. Based on empirical evidence, it seems like Android has 4 heaps, and the GC Roots used to only be in the first heap, but more recent versions of Android have GC Roots in other heaps as well.

This means LeakCanary would sometimes show "No Leak Found" when there actually was a leak.

Fixes #1163 | 2019-01-10 23:32:27 | 64b6e5a41796ae1587c50c8cc860cea25f28f382

fix typo | 2018-10-17 00:43:01 | 044b1e4827bc71ec008dc3f7e43c78f58885f1e1

Fix LeakCanary toasting (#1116)

- Prior attempts to get it to work with the application context turned out to be buggy.
- This makes LeakCanary use whatever the current resumed activity is, if any.
- If there is no resumed activity, then the toast isn't displayed.

This supersedes #1080 | 2018-10-16 13:23:14 | 0e39e2eea79bc05bf7147a4074dd7163f7c401ff

fix the wrong word (#1111) | 2018-10-16 01:25:28 | 636b9b6c2b39c0c887c9ed78e904239db9bc131e

Merge pull request #1104 from IlyaGulya/bug/travis-ci-cache-fix

Fix travis caching and improve build time. | 2018-09-22 21:25:59 | 344728b906daf6d010f66bdf4ccc29ad8fedede5

Error prone 2.3.1 + suggested fix and specify version

See http://errorprone.info/bugpattern/StringSplitter | 2018-08-22 07:37:33 | a6b6960d73a1da9661f4e85254570bf5f867f954

Merge pull request #1089 from hzsweers/z/fixAnother

Quick followup to #1088 | 2018-08-22 03:15:15 | be973f5f5da6a3516aedab98e639690697617747

Merge pull request #1087 from Goddchen/patch-2

Updated german translation | 2018-08-20 13:52:47 | b43c279b3e1623c193e1dc81955527f70e93f822

Merge pull request #1063 from javmarina/patch-1

Fixed wrong versions in AndroidExcludedRefs | 2018-07-25 18:31:55 | 3b4ebe3e2571377f93e9a6976e021324502a0f78

Fixed wrong versions in AndroidExcludedRefs

Commit https://android.googlesource.com/platform/frameworks/base/+/27db46850b708070452c0ce49daf5f79503fbde6 introduced this issue. This commit was first included in Jelly Bean 4.3 (JELLY_BEAN_MR2), not Jelly Bean 4.1 (JELLY_BEAN)
Commit https://android.googlesource.com/platform/frameworks/base/+/5200e1cb07190a1f6874d72a4561064cad3ee3e0 fixes this issue and was first included in Oreo 8.0 (O). Nougat still has this memory leak. | 2018-07-24 18:24:59 | e4778b25f2c6e65ebc485d255e38586c7d45ec97

Merge pull request #1057 from square/py/ui_bug

Fix drawing of start line | 2018-07-20 22:21:19 | af96577a7d19e4df9f63d95fd9c3bfd2adcddb5d

Avoid Toast crashes

Showing a toast can crash on API 25 because the Window Manager can throw a BadTokenException when addView is called.

This change fixes it by configuring the toast manually and calling the window manager directly. This is based on https://github.com/pyricau/frenchtoast/blob/master/frenchtoast/src/main/java/frenchtoast/Mixture.java#L49 .

Fixes #844 | 2018-07-20 16:11:22 | c9ebc5cf5099c093bde5d3309b2692cb0e2016d8

Fixing setup bug | 2018-06-28 04:07:09 | 505933817cf6e2eb0dad4a78d4c7c35a072b9868

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

Fixed compilation issue by extracting example application to debug/release folders | 2019-10-09 01:29:24 | b9f1bf88c4b0ac9f0a91cc54638899d9c6ecb8e1

fix missing toString | 2020-01-04 01:28:33 | 47bad9fec441ea462129ece0c4f1125f578ba1ec

Use "x minutes ago" format for dates (#1675)

Also fixed some of the ordering (leaks types by counts desc, leaks by date desc)

Fixes #1672 | 2019-12-16 23:56:38 | 9fae7ed497e1760abe74cf2c22535fbd51f16331

Gradle plugin that puts proguard mapping file in the apk as an asset (#1589)

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Add unit tests for copy obfuscation file task

* Add recipe describing how to use the plugin

* Add plugin usage instruction

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Rebased onto master

* Add missing test dependencies

* Use lambda function instead of a collection for plugin configuration

* Post code review fixups

* Rename according to code review suggestions

* Fix detekt warning

* Pass empty file if mapping doesn't exist

* Improved recipe

* Code review fixups

* Fix CopyObfuscationMappingFileTask tests

* Code review fixes

* Fix detekt issues

* Add plugin tests

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Rebased onto master

* Use lambda function instead of a collection for plugin configuration

* Post code review fixups

* Rename according to code review suggestions

* Fix detekt warning

* Pass empty file if mapping doesn't exist

* Improved recipe

* Code review fixups

* Fix CopyObfuscationMappingFileTask tests

* Code review fixes

* Fix detekt issues

* Add plugin tests

* Rebased onto master

* Add one more test for plugin

* Try fixing CI tests by reading $ANDROID_HOME value

* Try fixing CI tests by hardcoding android sdk path

* Debugging CI failing test

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Post review fixes

* Debugging failing test on CI

* Try fixing CI tests by hardcoding android sdk path

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debug failing test on CI

* Debug failing test on CI

* Debug failing test on CI

* Debug failing test on CI

* Debug failing test on CI

* Debug failing test on CI

* Use trusty dist in travis config

* Debug failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debug failing CI test

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Prevent GradleRunner from running builds in a separate process

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* sni: modernize travis script. Solve emulator issue.
The build now uses build tools 28 which requires little adjustments
from the original recipe. In the future we can just use the original recipe
Original recipe: https://docs.travis-ci.com/user/languages/android/ | 2019-12-10 06:48:02 | 25a10fcd9f405235de63bd791ea4ae4eb5453924

Fix emulators  (#1667)

* Revert "Fix travis (#1665)"

This reverts commit 00b9bd32d535022800153f34916d4c4667d2a5cd.

* Fix emulators

A recent emulator update breaks a few CI projects.  This PR applies
a fix suggested by Google.

https://issuetracker.google.com/issues/145622251#comment33 | 2019-12-10 05:43:06 | b678e1508e9ef3618ce2c44d44ff733f350d4185

Fix travis (#1665)

According to [this tweet](https://twitter.com/colinwhi/status/1204102384458194944) from @colinrtwhite, Travis is failing due to a bug in the most recent version of the emulator. Pinning the emulator to an older version works around it. This commit steals the fix from https://github.com/coil-kt/coil/pull/195 . | 2019-12-09 19:54:40 | 00b9bd32d535022800153f34916d4c4667d2a5cd

Add ability to customize class used to detect tests (#1654)

Developers should not ship JUnit in their app, even in debug. However, some debug libraries unfortunately ship with JUnit as a dependency (e.g. see https://github.com/square/okhttp/issues/4667).

Developers can change the default to target a different class (e.g assertj) to help LeakCanary detect unit tests, by overriding a public string:

```
  <string name="leak_canary_test_class_name">org.assertj.core.api.Assertions</string>
```

Fixes #1649 | 2019-12-03 02:35:07 | dbbb969d59b066c3f9197ebc3863cc4f54dae5d2

fix changelog | 2019-11-25 19:32:41 | 50ae3ba7558e5a3f83fc11b4d17a281f072ff078

Fix bug in handling JNI roots (#1636)

* When adding support for native reference leaks (879ab7c) there was a missing bracket in an if/else branch that led to all native gc roots being ignored.

Fixes #1634 | 2019-11-25 19:00:23 | aff338544b5eebbb0b3c792c628cca11fa888373

fix typos | 2019-11-19 03:58:07 | 25b0df0da4f6e93dedcd90342c9cd1d0eab080ed

Merge pull request #1596 from fernandospr/patch-1

Update blog-articles.md | 2019-10-04 16:35:24 | e65236dae7c5827b7c9f64c19c8b1a16ea19e5a7

Merge pull request #1598 from PaulWoitaschek/patch-1

Fixed the german string placeholder for sharing the heap dump | 2019-10-03 16:16:23 | 029f28eefd7aa966520ac3649fd2688732c02867

Fix crash when pressing home from root screen (#1578)

This bug only happens on older Android devices.

Fixes #1555 | 2019-09-11 01:51:06 | 274f58f96e8de7dcd3000c06ba3e2b50e427747d

Merge pull request #1559 from bric3/fix-primitive-array-dump-skip

Fixes the primitive array dump record skipping | 2019-09-09 22:16:57 | c0fd4d812cb8d6c5723231e501c121da2af86f06

Parsing and applying proguard mapping during heap analysis (#1542)

* Parsing and applying proguard mapping during heap analysis

* Parsing and applying proguard mapping during heap analysis

* Rebased onto master

* Post review changes and updated shark-cli to support mapping files

* Post review fixes

* Moving proguard mapping reader out of the analyzer and formatting fixes | 2019-08-30 16:54:20 | 66182a52069d9be59d0af6220aa9afd74218aa9b

fix images | 2019-08-27 20:02:50 | 8f5030e9faa8690217e1bd436274a3de5b9d3fb3

fix image links in docs | 2019-08-27 19:59:20 | edca56a947278508350bfa5dd33d3fa10699001f

Merge pull request #1549 from Armaxis/patch-1

Added section about using Detekt to Contributing | 2019-08-24 22:16:26 | c923d14909888860a99d5899af17f5b52c9b000f

Revert "Replaced accessor with a call to setter to fix the build issue"

This reverts commit 82db0398 | 2019-08-17 02:21:08 | c570cb9b0fd7bd7fcc88c4d3b529df8837e98fdc

Replaced accessor with a call to setter to fix the build issue | 2019-08-16 04:32:25 | 82db039843303044f91d36ba7c43595ab59bacd5

fix typo | 2019-08-02 15:31:17 | a2452f61e78e689efb59adaf71384d74447578b0

Add / fix android inspectors (#1491)

* Added MortarScope and ViewRootImpl inspectors
* Fixed the ContextWrapper inspector

Fixes #1490
Fixes #1389 | 2019-07-25 22:50:48 | 915f8359690a016a09e66608a041454b9c8c52cb

Documenting public APIs (#1476)

Also fixed naming and other things that weren't right.

Fixes #1474 | 2019-07-19 06:57:25 | 41c69a5d424b4236114c5ce1b077afdad38e57a5

Adding CLI for LeakCanary (#1456)

Example usage:
```
./gradlew leakcanary-cli:run --args='analyze-process com.example.leakcanary'

./gradlew leakcanary-cli:run --args='dump-process com.example.leakcanary'

./gradlew leakcanary-cli:run --args='analyze-file /path/to/heapdump.hprof'
```

Also fixed a bug in ShortestPathFinder which did not ignore null references in object arrays | 2019-07-11 19:11:30 | eded1c96e84f37393857ba4de2580aec784b2391

Behavior change & bugfixes for retained count notification (#1433)

* Bugfix: when tapping the "dump heap" notification, if the GC found no retained instance we didn't use a distinct notification id to communicate that, and then soon after we'd dismiss the notification that let's the user know there is no retained instances on tap.
* Bugfix: we weren't running the GC when checking for retained instances and the count was under the threshold
* Change: we now update the notification and keep it around for 30 seconds when the count goes to 0
* Change: the "no retained instance" notification that shows on tap is identical and also auto dismisses after 30 seconds.
* Change: we're checking for retained references (and running the GC) every 2 seconds instead of 5.

Fixes #1427 | 2019-07-03 20:55:47 | 968083a915343d881bd63e40587c070fde543732

Update how to fix a leak | 2019-06-25 05:46:56 | 177e7fd12933d99eca7a526851c53e598a03bf90

Text rendering tests (#1378)

* Added test coverage for text rendering
* Fixed bug: labels were not rendered on the last node (leaking instance)
* Matched exclusions are now rendered on their own line

Fixes #1375
Fixes #1350 | 2019-06-04 09:32:11 | 1926cb1db73f9583e11c557dbf2e5d46e3896a6e

Thread name based exclusions (#1353)

* Readded support for exclusions of local variable based on thread names
* Renamed ThreadExclusion to JavaLocalExclusion
* Fixed bug: KeyedWeakReference was not always ignored because its superclass is has a weakly reachable exclusion.
* Fixed bug: all root nodes had the same visit order as the first non root enqueued item, making it possible for a non root node to be dequeued before we're done with all roots.
* Redded gc root sorting
* Added tests to cover all uncovered bugs
* Added support for parsing StackFrameRecord

Fixes #1339 | 2019-05-20 13:17:18 | 6c2ee609efda323e88a4964d31fc5a5f0532f776

Reachability => LeakStatus (#1340)

* Combined leaking information from inspectors to solving conflicts while keeping all reasons
* Made reason from view leak inspector more obvious, and added label data about internals
* Moved reachability into LeakTraceElement
* Reachability renamed to LeakNodeStatus and leaking / not leaking
* ReachabilityInspector and Labeler are now functions with type aliases

Related to #1336: should fix the crash, though it's still unclear why AppCompatButton was a gc root there. | 2019-05-07 14:56:59 | 01210bbbfaecb3bcb6057c62b2195366d3bfa4f9

Revamp notifications (#1335)

* New notification that shows the count of retained instances. Tapping it triggers a heap dump. Fixes #1325
* Notifications are now split into two channels: default for results, and low for everything else.
* New config options: LeakCanary.config.dumpHeapWhenDebugging (default false) and LeakCanary.config.retainedVisibleThreshold (default 5)
* Replaced notification int constants and timestamps with resource ids.
* Don't show background notifications in instant apps (#1197) | 2019-05-05 16:38:26 | b14d9bc9c0a87119137bc0998bdec9314186dfcf

Highlighting new leaks (#1334)

New leaks are leaks that have a leak group that doesn't exist in any prior analysis.

* The notification now reports the count of leaks, with a split of new, known, and won't fix.
* The analysis success screen shows new leaks
* Moved description prefixes to be computed rather than inserted in the DB

Fixes #1328 | 2019-05-05 09:37:38 | f9a0518d4ddd69b782b6302caa3e3039787038e4

LeakSentry can be disabled (#1332)

LeakCanary has an enabled config option. Default is on in debug builds off in release builds.

Fixes #1327 | 2019-05-04 17:52:47 | f74f60901f34c751e8b8798d626678aa6233c893

Revert "fix trailing spaces per checkstyle"

This reverts commit ff17f879ec92ec326f8b1c6b7b8d77a5266d6622. | 2019-05-04 08:04:21 | 03136ca7dc1680299d710f79ca885412a1564144

Add test coverage for heap analysis (#1329)

* Fixed bug when reachability inspectors conflicts (reachable should win and erase unreachable)
* Added back support for leaking instances being empty objects, strings, primitive arrays or any object that we otherwise don't follow to find shortest paths. | 2019-05-04 07:51:02 | 59558e655d537c7654c411eebfd840773a8b77c9

Introducing exclusion priority (#1317)

* Add segmented FIFO queue

Unified several queues into one segmented FIFO queue. This will enable us to add several levels of priority.

* Introducing exclusion priority

* "excludedLeak" is now known as "won't fix leak", which matches its reality better. It's a leak that is known and real yet we're not fixing.
* Exclusion.alwaysExclude is replaced with Exclusion.status, with 3 possible values: NEVER_REACHABLE, WONT_FIX_LEAK, WEAKLY_REACHABLE.
* The shortest path finder will now follow weak references after all other paths have been exhausted.
* Removed class exclusion, was confusing, replaced with less lazy approach of listing fields to exclude
* VIEWLOCATIONHOLDER_ROOT should not have been always excluded, fixed.

Fixes #1173 ... well kinda. Instead of "non leaking retained instances", LeakCanary will report weakly reachable traces. Not sure if that'll help but it's a foundation we can build on. | 2019-04-30 17:44:15 | b0eedc553995e354e2382b3378bf0348801cd3c5

AllFieldsLabeler & cleanups (#1316)

* Add new optional labeler that prints all fields (useful for debugging)
* Move deprecated AnalysisResult to perflib
* Made DefaultAnalysisResultListener an object | 2019-04-30 07:08:29 | b9ee5356db265412db39c4c341880f305fbf2c76

fix format | 2019-04-22 06:25:09 | 4a2b158913e5a9eb0d5c6fdfbf949a80fc1b2c6b

Rename default to perflib and experimental to default (#1282)

* Remove experimental from module names

* Remove experimental prefix, add perflib prefix:

* update docs | 2019-04-19 06:01:39 | 425a9f24deb72691b02cdc85f80d177c05afebc5

fix list | 2019-04-18 21:55:43 | 8e3f9d26e8d3555bf934b99ac062aabc3aba528f

fix broken master | 2019-04-10 15:00:30 | f067ae53e050c5f52f47237440a6ac7eee3ca94c

fix broken build due to typo | 2019-04-10 05:44:19 | 7d4ddb4ffe3c9b0f30a84848675452dded0d4115

Leaking information aligned below simple class name. (#1258)

Also fixed issue where extraString + exclusionString were showing after the squiggly line.

Before: 
``` 
┬
├─ java.lang.Thread
│                 Leaking: NO (it's a GC root)
│                 ↓ thread Thread.<Java Local>
│                                ~~~~~~~~~~~~~ (named 'Thread-4')
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                 Leaking: UNKNOWN
│                 ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                     ~~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) 
```
After: 
``` 
┬
├─ java.lang.Thread
│            Leaking: NO (it's a GC root)
│            ↓ thread Thread.<Java Local> (named 'Thread-4')
│                            ~~~~~~~~~~~~
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                         Leaking: UNKNOWN
│                         ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                              ~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) ``` | 2019-04-05 20:11:47 | a938855585c7cf2522ffbd143d4bb66a234eea66

Add share to Stack Overflow button when viewing a leak (#1252)

* Add share to Stack Overflow button when viewing a leak

* Add question tag, lengthen toast and fix build failure. | 2019-04-04 20:49:50 | 8724d2aaffc07904517a3b823867802ca43233ae

Check if serviceInfo.processName is null. When LeakCanary runs on a seperate process and that process for some reason does not have a assigned processName, then we will crash on a NullPointerException. Also a debug log explaining this. (#1225) | 2019-04-01 19:20:40 | 3efc43608ed71dc20b0ad1e0e80e33d15249666f

fix master broken | 2019-04-01 19:07:27 | fe42130029174681a708b7d8622412efbaf81e73

fix trailing spaces per checkstyle | 2019-03-29 22:34:58 | ff17f879ec92ec326f8b1c6b7b8d77a5266d6622

Fix GC Root bugs that missed leaks (#1168)

In Perflib, Snapshot.getGcRoots() only returns the GC roots from the first heap. Based on empirical evidence, it seems like Android has 4 heaps, and the GC Roots used to only be in the first heap, but more recent versions of Android have GC Roots in other heaps as well.

This means LeakCanary would sometimes show "No Leak Found" when there actually was a leak.

Fixes #1163 | 2019-01-10 23:32:27 | 64b6e5a41796ae1587c50c8cc860cea25f28f382

fix typo | 2018-10-17 00:43:01 | 044b1e4827bc71ec008dc3f7e43c78f58885f1e1

Fix LeakCanary toasting (#1116)

- Prior attempts to get it to work with the application context turned out to be buggy.
- This makes LeakCanary use whatever the current resumed activity is, if any.
- If there is no resumed activity, then the toast isn't displayed.

This supersedes #1080 | 2018-10-16 13:23:14 | 0e39e2eea79bc05bf7147a4074dd7163f7c401ff

fix the wrong word (#1111) | 2018-10-16 01:25:28 | 636b9b6c2b39c0c887c9ed78e904239db9bc131e

Merge pull request #1104 from IlyaGulya/bug/travis-ci-cache-fix

Fix travis caching and improve build time. | 2018-09-22 21:25:59 | 344728b906daf6d010f66bdf4ccc29ad8fedede5

Error prone 2.3.1 + suggested fix and specify version

See http://errorprone.info/bugpattern/StringSplitter | 2018-08-22 07:37:33 | a6b6960d73a1da9661f4e85254570bf5f867f954

Merge pull request #1089 from hzsweers/z/fixAnother

Quick followup to #1088 | 2018-08-22 03:15:15 | be973f5f5da6a3516aedab98e639690697617747

Merge pull request #1087 from Goddchen/patch-2

Updated german translation | 2018-08-20 13:52:47 | b43c279b3e1623c193e1dc81955527f70e93f822

Merge pull request #1063 from javmarina/patch-1

Fixed wrong versions in AndroidExcludedRefs | 2018-07-25 18:31:55 | 3b4ebe3e2571377f93e9a6976e021324502a0f78

Fixed wrong versions in AndroidExcludedRefs

Commit https://android.googlesource.com/platform/frameworks/base/+/27db46850b708070452c0ce49daf5f79503fbde6 introduced this issue. This commit was first included in Jelly Bean 4.3 (JELLY_BEAN_MR2), not Jelly Bean 4.1 (JELLY_BEAN)
Commit https://android.googlesource.com/platform/frameworks/base/+/5200e1cb07190a1f6874d72a4561064cad3ee3e0 fixes this issue and was first included in Oreo 8.0 (O). Nougat still has this memory leak. | 2018-07-24 18:24:59 | e4778b25f2c6e65ebc485d255e38586c7d45ec97

Merge pull request #1057 from square/py/ui_bug

Fix drawing of start line | 2018-07-20 22:21:19 | af96577a7d19e4df9f63d95fd9c3bfd2adcddb5d

Avoid Toast crashes

Showing a toast can crash on API 25 because the Window Manager can throw a BadTokenException when addView is called.

This change fixes it by configuring the toast manually and calling the window manager directly. This is based on https://github.com/pyricau/frenchtoast/blob/master/frenchtoast/src/main/java/frenchtoast/Mixture.java#L49 .

Fixes #844 | 2018-07-20 16:11:22 | c9ebc5cf5099c093bde5d3309b2692cb0e2016d8

Fixing setup bug | 2018-06-28 04:07:09 | 505933817cf6e2eb0dad4a78d4c7c35a072b9868

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

Fix LeakCanary toasting

- Prior attempts to get it to work with the application context turned out to be buggy.
- This makes LeakCanary use whatever the current resumed activity is, if any.
- If there is no resumed activity, then the toast isn't displayed.

This supersedes #1080 | 2018-10-16 01:55:23 | 4e547c1e0a4c36fc7b1d5b429b25646ddcaf935c

Merge pull request #1104 from IlyaGulya/bug/travis-ci-cache-fix

Fix travis caching and improve build time. | 2018-09-22 21:25:59 | 344728b906daf6d010f66bdf4ccc29ad8fedede5

Error prone 2.3.1 + suggested fix and specify version

See http://errorprone.info/bugpattern/StringSplitter | 2018-08-22 07:37:33 | a6b6960d73a1da9661f4e85254570bf5f867f954

Merge pull request #1089 from hzsweers/z/fixAnother

Quick followup to #1088 | 2018-08-22 03:15:15 | be973f5f5da6a3516aedab98e639690697617747

Merge pull request #1087 from Goddchen/patch-2

Updated german translation | 2018-08-20 13:52:47 | b43c279b3e1623c193e1dc81955527f70e93f822

Merge pull request #1063 from javmarina/patch-1

Fixed wrong versions in AndroidExcludedRefs | 2018-07-25 18:31:55 | 3b4ebe3e2571377f93e9a6976e021324502a0f78

Fixed wrong versions in AndroidExcludedRefs

Commit https://android.googlesource.com/platform/frameworks/base/+/27db46850b708070452c0ce49daf5f79503fbde6 introduced this issue. This commit was first included in Jelly Bean 4.3 (JELLY_BEAN_MR2), not Jelly Bean 4.1 (JELLY_BEAN)
Commit https://android.googlesource.com/platform/frameworks/base/+/5200e1cb07190a1f6874d72a4561064cad3ee3e0 fixes this issue and was first included in Oreo 8.0 (O). Nougat still has this memory leak. | 2018-07-24 18:24:59 | e4778b25f2c6e65ebc485d255e38586c7d45ec97

Merge pull request #1057 from square/py/ui_bug

Fix drawing of start line | 2018-07-20 22:21:19 | af96577a7d19e4df9f63d95fd9c3bfd2adcddb5d

Avoid Toast crashes

Showing a toast can crash on API 25 because the Window Manager can throw a BadTokenException when addView is called.

This change fixes it by configuring the toast manually and calling the window manager directly. This is based on https://github.com/pyricau/frenchtoast/blob/master/frenchtoast/src/main/java/frenchtoast/Mixture.java#L49 .

Fixes #844 | 2018-07-20 16:11:22 | c9ebc5cf5099c093bde5d3309b2692cb0e2016d8

Fixing setup bug | 2018-06-28 04:07:09 | 505933817cf6e2eb0dad4a78d4c7c35a072b9868

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

Check if serviceInfo.processName is null. When LeakCanary runs on a seperate process and that process for some reason does not have a assigned processName, then we will crash on a NullPointerException. Also a debug log explaining this. (#1225) | 2019-04-01 19:20:40 | 3efc43608ed71dc20b0ad1e0e80e33d15249666f

fix master broken | 2019-04-01 19:07:27 | fe42130029174681a708b7d8622412efbaf81e73

Fix GC Root bugs that missed leaks (#1168)

In Perflib, Snapshot.getGcRoots() only returns the GC roots from the first heap. Based on empirical evidence, it seems like Android has 4 heaps, and the GC Roots used to only be in the first heap, but more recent versions of Android have GC Roots in other heaps as well.

This means LeakCanary would sometimes show "No Leak Found" when there actually was a leak.

Fixes #1163 | 2019-01-10 23:32:27 | 64b6e5a41796ae1587c50c8cc860cea25f28f382

fix typo | 2018-10-17 00:43:01 | 044b1e4827bc71ec008dc3f7e43c78f58885f1e1

Fix LeakCanary toasting (#1116)

- Prior attempts to get it to work with the application context turned out to be buggy.
- This makes LeakCanary use whatever the current resumed activity is, if any.
- If there is no resumed activity, then the toast isn't displayed.

This supersedes #1080 | 2018-10-16 13:23:14 | 0e39e2eea79bc05bf7147a4074dd7163f7c401ff

fix the wrong word (#1111) | 2018-10-16 01:25:28 | 636b9b6c2b39c0c887c9ed78e904239db9bc131e

Merge pull request #1104 from IlyaGulya/bug/travis-ci-cache-fix

Fix travis caching and improve build time. | 2018-09-22 21:25:59 | 344728b906daf6d010f66bdf4ccc29ad8fedede5

Error prone 2.3.1 + suggested fix and specify version

See http://errorprone.info/bugpattern/StringSplitter | 2018-08-22 07:37:33 | a6b6960d73a1da9661f4e85254570bf5f867f954

Merge pull request #1089 from hzsweers/z/fixAnother

Quick followup to #1088 | 2018-08-22 03:15:15 | be973f5f5da6a3516aedab98e639690697617747

Merge pull request #1087 from Goddchen/patch-2

Updated german translation | 2018-08-20 13:52:47 | b43c279b3e1623c193e1dc81955527f70e93f822

Merge pull request #1063 from javmarina/patch-1

Fixed wrong versions in AndroidExcludedRefs | 2018-07-25 18:31:55 | 3b4ebe3e2571377f93e9a6976e021324502a0f78

Fixed wrong versions in AndroidExcludedRefs

Commit https://android.googlesource.com/platform/frameworks/base/+/27db46850b708070452c0ce49daf5f79503fbde6 introduced this issue. This commit was first included in Jelly Bean 4.3 (JELLY_BEAN_MR2), not Jelly Bean 4.1 (JELLY_BEAN)
Commit https://android.googlesource.com/platform/frameworks/base/+/5200e1cb07190a1f6874d72a4561064cad3ee3e0 fixes this issue and was first included in Oreo 8.0 (O). Nougat still has this memory leak. | 2018-07-24 18:24:59 | e4778b25f2c6e65ebc485d255e38586c7d45ec97

Merge pull request #1057 from square/py/ui_bug

Fix drawing of start line | 2018-07-20 22:21:19 | af96577a7d19e4df9f63d95fd9c3bfd2adcddb5d

Avoid Toast crashes

Showing a toast can crash on API 25 because the Window Manager can throw a BadTokenException when addView is called.

This change fixes it by configuring the toast manually and calling the window manager directly. This is based on https://github.com/pyricau/frenchtoast/blob/master/frenchtoast/src/main/java/frenchtoast/Mixture.java#L49 .

Fixes #844 | 2018-07-20 16:11:22 | c9ebc5cf5099c093bde5d3309b2692cb0e2016d8

Fixing setup bug | 2018-06-28 04:07:09 | 505933817cf6e2eb0dad4a78d4c7c35a072b9868

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

Behavior change & bugfixes for retained count notification (#1433)

* Bugfix: when tapping the "dump heap" notification, if the GC found no retained instance we didn't use a distinct notification id to communicate that, and then soon after we'd dismiss the notification that let's the user know there is no retained instances on tap.
* Bugfix: we weren't running the GC when checking for retained instances and the count was under the threshold
* Change: we now update the notification and keep it around for 30 seconds when the count goes to 0
* Change: the "no retained instance" notification that shows on tap is identical and also auto dismisses after 30 seconds.
* Change: we're checking for retained references (and running the GC) every 2 seconds instead of 5.

Fixes #1427 | 2019-07-03 20:55:47 | 968083a915343d881bd63e40587c070fde543732

Update how to fix a leak | 2019-06-25 05:46:56 | 177e7fd12933d99eca7a526851c53e598a03bf90

Text rendering tests (#1378)

* Added test coverage for text rendering
* Fixed bug: labels were not rendered on the last node (leaking instance)
* Matched exclusions are now rendered on their own line

Fixes #1375
Fixes #1350 | 2019-06-04 09:32:11 | 1926cb1db73f9583e11c557dbf2e5d46e3896a6e

Thread name based exclusions (#1353)

* Readded support for exclusions of local variable based on thread names
* Renamed ThreadExclusion to JavaLocalExclusion
* Fixed bug: KeyedWeakReference was not always ignored because its superclass is has a weakly reachable exclusion.
* Fixed bug: all root nodes had the same visit order as the first non root enqueued item, making it possible for a non root node to be dequeued before we're done with all roots.
* Redded gc root sorting
* Added tests to cover all uncovered bugs
* Added support for parsing StackFrameRecord

Fixes #1339 | 2019-05-20 13:17:18 | 6c2ee609efda323e88a4964d31fc5a5f0532f776

Reachability => LeakStatus (#1340)

* Combined leaking information from inspectors to solving conflicts while keeping all reasons
* Made reason from view leak inspector more obvious, and added label data about internals
* Moved reachability into LeakTraceElement
* Reachability renamed to LeakNodeStatus and leaking / not leaking
* ReachabilityInspector and Labeler are now functions with type aliases

Related to #1336: should fix the crash, though it's still unclear why AppCompatButton was a gc root there. | 2019-05-07 14:56:59 | 01210bbbfaecb3bcb6057c62b2195366d3bfa4f9

Revamp notifications (#1335)

* New notification that shows the count of retained instances. Tapping it triggers a heap dump. Fixes #1325
* Notifications are now split into two channels: default for results, and low for everything else.
* New config options: LeakCanary.config.dumpHeapWhenDebugging (default false) and LeakCanary.config.retainedVisibleThreshold (default 5)
* Replaced notification int constants and timestamps with resource ids.
* Don't show background notifications in instant apps (#1197) | 2019-05-05 16:38:26 | b14d9bc9c0a87119137bc0998bdec9314186dfcf

Highlighting new leaks (#1334)

New leaks are leaks that have a leak group that doesn't exist in any prior analysis.

* The notification now reports the count of leaks, with a split of new, known, and won't fix.
* The analysis success screen shows new leaks
* Moved description prefixes to be computed rather than inserted in the DB

Fixes #1328 | 2019-05-05 09:37:38 | f9a0518d4ddd69b782b6302caa3e3039787038e4

LeakSentry can be disabled (#1332)

LeakCanary has an enabled config option. Default is on in debug builds off in release builds.

Fixes #1327 | 2019-05-04 17:52:47 | f74f60901f34c751e8b8798d626678aa6233c893

Revert "fix trailing spaces per checkstyle"

This reverts commit ff17f879ec92ec326f8b1c6b7b8d77a5266d6622. | 2019-05-04 08:04:21 | 03136ca7dc1680299d710f79ca885412a1564144

Add test coverage for heap analysis (#1329)

* Fixed bug when reachability inspectors conflicts (reachable should win and erase unreachable)
* Added back support for leaking instances being empty objects, strings, primitive arrays or any object that we otherwise don't follow to find shortest paths. | 2019-05-04 07:51:02 | 59558e655d537c7654c411eebfd840773a8b77c9

Introducing exclusion priority (#1317)

* Add segmented FIFO queue

Unified several queues into one segmented FIFO queue. This will enable us to add several levels of priority.

* Introducing exclusion priority

* "excludedLeak" is now known as "won't fix leak", which matches its reality better. It's a leak that is known and real yet we're not fixing.
* Exclusion.alwaysExclude is replaced with Exclusion.status, with 3 possible values: NEVER_REACHABLE, WONT_FIX_LEAK, WEAKLY_REACHABLE.
* The shortest path finder will now follow weak references after all other paths have been exhausted.
* Removed class exclusion, was confusing, replaced with less lazy approach of listing fields to exclude
* VIEWLOCATIONHOLDER_ROOT should not have been always excluded, fixed.

Fixes #1173 ... well kinda. Instead of "non leaking retained instances", LeakCanary will report weakly reachable traces. Not sure if that'll help but it's a foundation we can build on. | 2019-04-30 17:44:15 | b0eedc553995e354e2382b3378bf0348801cd3c5

AllFieldsLabeler & cleanups (#1316)

* Add new optional labeler that prints all fields (useful for debugging)
* Move deprecated AnalysisResult to perflib
* Made DefaultAnalysisResultListener an object | 2019-04-30 07:08:29 | b9ee5356db265412db39c4c341880f305fbf2c76

fix format | 2019-04-22 06:25:09 | 4a2b158913e5a9eb0d5c6fdfbf949a80fc1b2c6b

Rename default to perflib and experimental to default (#1282)

* Remove experimental from module names

* Remove experimental prefix, add perflib prefix:

* update docs | 2019-04-19 06:01:39 | 425a9f24deb72691b02cdc85f80d177c05afebc5

fix list | 2019-04-18 21:55:43 | 8e3f9d26e8d3555bf934b99ac062aabc3aba528f

fix broken master | 2019-04-10 15:00:30 | f067ae53e050c5f52f47237440a6ac7eee3ca94c

fix broken build due to typo | 2019-04-10 05:44:19 | 7d4ddb4ffe3c9b0f30a84848675452dded0d4115

Leaking information aligned below simple class name. (#1258)

Also fixed issue where extraString + exclusionString were showing after the squiggly line.

Before: 
``` 
┬
├─ java.lang.Thread
│                 Leaking: NO (it's a GC root)
│                 ↓ thread Thread.<Java Local>
│                                ~~~~~~~~~~~~~ (named 'Thread-4')
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                 Leaking: UNKNOWN
│                 ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                     ~~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) 
```
After: 
``` 
┬
├─ java.lang.Thread
│            Leaking: NO (it's a GC root)
│            ↓ thread Thread.<Java Local> (named 'Thread-4')
│                            ~~~~~~~~~~~~
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                         Leaking: UNKNOWN
│                         ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                              ~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) ``` | 2019-04-05 20:11:47 | a938855585c7cf2522ffbd143d4bb66a234eea66

Add share to Stack Overflow button when viewing a leak (#1252)

* Add share to Stack Overflow button when viewing a leak

* Add question tag, lengthen toast and fix build failure. | 2019-04-04 20:49:50 | 8724d2aaffc07904517a3b823867802ca43233ae

Check if serviceInfo.processName is null. When LeakCanary runs on a seperate process and that process for some reason does not have a assigned processName, then we will crash on a NullPointerException. Also a debug log explaining this. (#1225) | 2019-04-01 19:20:40 | 3efc43608ed71dc20b0ad1e0e80e33d15249666f

fix master broken | 2019-04-01 19:07:27 | fe42130029174681a708b7d8622412efbaf81e73

fix trailing spaces per checkstyle | 2019-03-29 22:34:58 | ff17f879ec92ec326f8b1c6b7b8d77a5266d6622

Fix GC Root bugs that missed leaks (#1168)

In Perflib, Snapshot.getGcRoots() only returns the GC roots from the first heap. Based on empirical evidence, it seems like Android has 4 heaps, and the GC Roots used to only be in the first heap, but more recent versions of Android have GC Roots in other heaps as well.

This means LeakCanary would sometimes show "No Leak Found" when there actually was a leak.

Fixes #1163 | 2019-01-10 23:32:27 | 64b6e5a41796ae1587c50c8cc860cea25f28f382

fix typo | 2018-10-17 00:43:01 | 044b1e4827bc71ec008dc3f7e43c78f58885f1e1

Fix LeakCanary toasting (#1116)

- Prior attempts to get it to work with the application context turned out to be buggy.
- This makes LeakCanary use whatever the current resumed activity is, if any.
- If there is no resumed activity, then the toast isn't displayed.

This supersedes #1080 | 2018-10-16 13:23:14 | 0e39e2eea79bc05bf7147a4074dd7163f7c401ff

fix the wrong word (#1111) | 2018-10-16 01:25:28 | 636b9b6c2b39c0c887c9ed78e904239db9bc131e

Merge pull request #1104 from IlyaGulya/bug/travis-ci-cache-fix

Fix travis caching and improve build time. | 2018-09-22 21:25:59 | 344728b906daf6d010f66bdf4ccc29ad8fedede5

Error prone 2.3.1 + suggested fix and specify version

See http://errorprone.info/bugpattern/StringSplitter | 2018-08-22 07:37:33 | a6b6960d73a1da9661f4e85254570bf5f867f954

Merge pull request #1089 from hzsweers/z/fixAnother

Quick followup to #1088 | 2018-08-22 03:15:15 | be973f5f5da6a3516aedab98e639690697617747

Merge pull request #1087 from Goddchen/patch-2

Updated german translation | 2018-08-20 13:52:47 | b43c279b3e1623c193e1dc81955527f70e93f822

Merge pull request #1063 from javmarina/patch-1

Fixed wrong versions in AndroidExcludedRefs | 2018-07-25 18:31:55 | 3b4ebe3e2571377f93e9a6976e021324502a0f78

Fixed wrong versions in AndroidExcludedRefs

Commit https://android.googlesource.com/platform/frameworks/base/+/27db46850b708070452c0ce49daf5f79503fbde6 introduced this issue. This commit was first included in Jelly Bean 4.3 (JELLY_BEAN_MR2), not Jelly Bean 4.1 (JELLY_BEAN)
Commit https://android.googlesource.com/platform/frameworks/base/+/5200e1cb07190a1f6874d72a4561064cad3ee3e0 fixes this issue and was first included in Oreo 8.0 (O). Nougat still has this memory leak. | 2018-07-24 18:24:59 | e4778b25f2c6e65ebc485d255e38586c7d45ec97

Merge pull request #1057 from square/py/ui_bug

Fix drawing of start line | 2018-07-20 22:21:19 | af96577a7d19e4df9f63d95fd9c3bfd2adcddb5d

Avoid Toast crashes

Showing a toast can crash on API 25 because the Window Manager can throw a BadTokenException when addView is called.

This change fixes it by configuring the toast manually and calling the window manager directly. This is based on https://github.com/pyricau/frenchtoast/blob/master/frenchtoast/src/main/java/frenchtoast/Mixture.java#L49 .

Fixes #844 | 2018-07-20 16:11:22 | c9ebc5cf5099c093bde5d3309b2692cb0e2016d8

Fixing setup bug | 2018-06-28 04:07:09 | 505933817cf6e2eb0dad4a78d4c7c35a072b9868

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

Text rendering tests (#1378)

* Added test coverage for text rendering
* Fixed bug: labels were not rendered on the last node (leaking instance)
* Matched exclusions are now rendered on their own line

Fixes #1375
Fixes #1350 | 2019-06-04 09:32:11 | 1926cb1db73f9583e11c557dbf2e5d46e3896a6e

Thread name based exclusions (#1353)

* Readded support for exclusions of local variable based on thread names
* Renamed ThreadExclusion to JavaLocalExclusion
* Fixed bug: KeyedWeakReference was not always ignored because its superclass is has a weakly reachable exclusion.
* Fixed bug: all root nodes had the same visit order as the first non root enqueued item, making it possible for a non root node to be dequeued before we're done with all roots.
* Redded gc root sorting
* Added tests to cover all uncovered bugs
* Added support for parsing StackFrameRecord

Fixes #1339 | 2019-05-20 13:17:18 | 6c2ee609efda323e88a4964d31fc5a5f0532f776

Reachability => LeakStatus (#1340)

* Combined leaking information from inspectors to solving conflicts while keeping all reasons
* Made reason from view leak inspector more obvious, and added label data about internals
* Moved reachability into LeakTraceElement
* Reachability renamed to LeakNodeStatus and leaking / not leaking
* ReachabilityInspector and Labeler are now functions with type aliases

Related to #1336: should fix the crash, though it's still unclear why AppCompatButton was a gc root there. | 2019-05-07 14:56:59 | 01210bbbfaecb3bcb6057c62b2195366d3bfa4f9

Revamp notifications (#1335)

* New notification that shows the count of retained instances. Tapping it triggers a heap dump. Fixes #1325
* Notifications are now split into two channels: default for results, and low for everything else.
* New config options: LeakCanary.config.dumpHeapWhenDebugging (default false) and LeakCanary.config.retainedVisibleThreshold (default 5)
* Replaced notification int constants and timestamps with resource ids.
* Don't show background notifications in instant apps (#1197) | 2019-05-05 16:38:26 | b14d9bc9c0a87119137bc0998bdec9314186dfcf

Highlighting new leaks (#1334)

New leaks are leaks that have a leak group that doesn't exist in any prior analysis.

* The notification now reports the count of leaks, with a split of new, known, and won't fix.
* The analysis success screen shows new leaks
* Moved description prefixes to be computed rather than inserted in the DB

Fixes #1328 | 2019-05-05 09:37:38 | f9a0518d4ddd69b782b6302caa3e3039787038e4

LeakSentry can be disabled (#1332)

LeakCanary has an enabled config option. Default is on in debug builds off in release builds.

Fixes #1327 | 2019-05-04 17:52:47 | f74f60901f34c751e8b8798d626678aa6233c893

Revert "fix trailing spaces per checkstyle"

This reverts commit ff17f879ec92ec326f8b1c6b7b8d77a5266d6622. | 2019-05-04 08:04:21 | 03136ca7dc1680299d710f79ca885412a1564144

Add test coverage for heap analysis (#1329)

* Fixed bug when reachability inspectors conflicts (reachable should win and erase unreachable)
* Added back support for leaking instances being empty objects, strings, primitive arrays or any object that we otherwise don't follow to find shortest paths. | 2019-05-04 07:51:02 | 59558e655d537c7654c411eebfd840773a8b77c9

Introducing exclusion priority (#1317)

* Add segmented FIFO queue

Unified several queues into one segmented FIFO queue. This will enable us to add several levels of priority.

* Introducing exclusion priority

* "excludedLeak" is now known as "won't fix leak", which matches its reality better. It's a leak that is known and real yet we're not fixing.
* Exclusion.alwaysExclude is replaced with Exclusion.status, with 3 possible values: NEVER_REACHABLE, WONT_FIX_LEAK, WEAKLY_REACHABLE.
* The shortest path finder will now follow weak references after all other paths have been exhausted.
* Removed class exclusion, was confusing, replaced with less lazy approach of listing fields to exclude
* VIEWLOCATIONHOLDER_ROOT should not have been always excluded, fixed.

Fixes #1173 ... well kinda. Instead of "non leaking retained instances", LeakCanary will report weakly reachable traces. Not sure if that'll help but it's a foundation we can build on. | 2019-04-30 17:44:15 | b0eedc553995e354e2382b3378bf0348801cd3c5

AllFieldsLabeler & cleanups (#1316)

* Add new optional labeler that prints all fields (useful for debugging)
* Move deprecated AnalysisResult to perflib
* Made DefaultAnalysisResultListener an object | 2019-04-30 07:08:29 | b9ee5356db265412db39c4c341880f305fbf2c76

fix format | 2019-04-22 06:25:09 | 4a2b158913e5a9eb0d5c6fdfbf949a80fc1b2c6b

Rename default to perflib and experimental to default (#1282)

* Remove experimental from module names

* Remove experimental prefix, add perflib prefix:

* update docs | 2019-04-19 06:01:39 | 425a9f24deb72691b02cdc85f80d177c05afebc5

fix list | 2019-04-18 21:55:43 | 8e3f9d26e8d3555bf934b99ac062aabc3aba528f

fix broken master | 2019-04-10 15:00:30 | f067ae53e050c5f52f47237440a6ac7eee3ca94c

fix broken build due to typo | 2019-04-10 05:44:19 | 7d4ddb4ffe3c9b0f30a84848675452dded0d4115

Leaking information aligned below simple class name. (#1258)

Also fixed issue where extraString + exclusionString were showing after the squiggly line.

Before: 
``` 
┬
├─ java.lang.Thread
│                 Leaking: NO (it's a GC root)
│                 ↓ thread Thread.<Java Local>
│                                ~~~~~~~~~~~~~ (named 'Thread-4')
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                 Leaking: UNKNOWN
│                 ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                     ~~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) 
```
After: 
``` 
┬
├─ java.lang.Thread
│            Leaking: NO (it's a GC root)
│            ↓ thread Thread.<Java Local> (named 'Thread-4')
│                            ~~~~~~~~~~~~
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                         Leaking: UNKNOWN
│                         ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                              ~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) ``` | 2019-04-05 20:11:47 | a938855585c7cf2522ffbd143d4bb66a234eea66

Add share to Stack Overflow button when viewing a leak (#1252)

* Add share to Stack Overflow button when viewing a leak

* Add question tag, lengthen toast and fix build failure. | 2019-04-04 20:49:50 | 8724d2aaffc07904517a3b823867802ca43233ae

Check if serviceInfo.processName is null. When LeakCanary runs on a seperate process and that process for some reason does not have a assigned processName, then we will crash on a NullPointerException. Also a debug log explaining this. (#1225) | 2019-04-01 19:20:40 | 3efc43608ed71dc20b0ad1e0e80e33d15249666f

fix master broken | 2019-04-01 19:07:27 | fe42130029174681a708b7d8622412efbaf81e73

fix trailing spaces per checkstyle | 2019-03-29 22:34:58 | ff17f879ec92ec326f8b1c6b7b8d77a5266d6622

Fix GC Root bugs that missed leaks (#1168)

In Perflib, Snapshot.getGcRoots() only returns the GC roots from the first heap. Based on empirical evidence, it seems like Android has 4 heaps, and the GC Roots used to only be in the first heap, but more recent versions of Android have GC Roots in other heaps as well.

This means LeakCanary would sometimes show "No Leak Found" when there actually was a leak.

Fixes #1163 | 2019-01-10 23:32:27 | 64b6e5a41796ae1587c50c8cc860cea25f28f382

fix typo | 2018-10-17 00:43:01 | 044b1e4827bc71ec008dc3f7e43c78f58885f1e1

Fix LeakCanary toasting (#1116)

- Prior attempts to get it to work with the application context turned out to be buggy.
- This makes LeakCanary use whatever the current resumed activity is, if any.
- If there is no resumed activity, then the toast isn't displayed.

This supersedes #1080 | 2018-10-16 13:23:14 | 0e39e2eea79bc05bf7147a4074dd7163f7c401ff

fix the wrong word (#1111) | 2018-10-16 01:25:28 | 636b9b6c2b39c0c887c9ed78e904239db9bc131e

Merge pull request #1104 from IlyaGulya/bug/travis-ci-cache-fix

Fix travis caching and improve build time. | 2018-09-22 21:25:59 | 344728b906daf6d010f66bdf4ccc29ad8fedede5

Error prone 2.3.1 + suggested fix and specify version

See http://errorprone.info/bugpattern/StringSplitter | 2018-08-22 07:37:33 | a6b6960d73a1da9661f4e85254570bf5f867f954

Merge pull request #1089 from hzsweers/z/fixAnother

Quick followup to #1088 | 2018-08-22 03:15:15 | be973f5f5da6a3516aedab98e639690697617747

Merge pull request #1087 from Goddchen/patch-2

Updated german translation | 2018-08-20 13:52:47 | b43c279b3e1623c193e1dc81955527f70e93f822

Merge pull request #1063 from javmarina/patch-1

Fixed wrong versions in AndroidExcludedRefs | 2018-07-25 18:31:55 | 3b4ebe3e2571377f93e9a6976e021324502a0f78

Fixed wrong versions in AndroidExcludedRefs

Commit https://android.googlesource.com/platform/frameworks/base/+/27db46850b708070452c0ce49daf5f79503fbde6 introduced this issue. This commit was first included in Jelly Bean 4.3 (JELLY_BEAN_MR2), not Jelly Bean 4.1 (JELLY_BEAN)
Commit https://android.googlesource.com/platform/frameworks/base/+/5200e1cb07190a1f6874d72a4561064cad3ee3e0 fixes this issue and was first included in Oreo 8.0 (O). Nougat still has this memory leak. | 2018-07-24 18:24:59 | e4778b25f2c6e65ebc485d255e38586c7d45ec97

Merge pull request #1057 from square/py/ui_bug

Fix drawing of start line | 2018-07-20 22:21:19 | af96577a7d19e4df9f63d95fd9c3bfd2adcddb5d

Avoid Toast crashes

Showing a toast can crash on API 25 because the Window Manager can throw a BadTokenException when addView is called.

This change fixes it by configuring the toast manually and calling the window manager directly. This is based on https://github.com/pyricau/frenchtoast/blob/master/frenchtoast/src/main/java/frenchtoast/Mixture.java#L49 .

Fixes #844 | 2018-07-20 16:11:22 | c9ebc5cf5099c093bde5d3309b2692cb0e2016d8

Fixing setup bug | 2018-06-28 04:07:09 | 505933817cf6e2eb0dad4a78d4c7c35a072b9868

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

fix broken master | 2019-04-10 15:00:30 | f067ae53e050c5f52f47237440a6ac7eee3ca94c

fix broken build due to typo | 2019-04-10 05:44:19 | 7d4ddb4ffe3c9b0f30a84848675452dded0d4115

Leaking information aligned below simple class name. (#1258)

Also fixed issue where extraString + exclusionString were showing after the squiggly line.

Before: 
``` 
┬
├─ java.lang.Thread
│                 Leaking: NO (it's a GC root)
│                 ↓ thread Thread.<Java Local>
│                                ~~~~~~~~~~~~~ (named 'Thread-4')
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                 Leaking: UNKNOWN
│                 ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                     ~~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) 
```
After: 
``` 
┬
├─ java.lang.Thread
│            Leaking: NO (it's a GC root)
│            ↓ thread Thread.<Java Local> (named 'Thread-4')
│                            ~~~~~~~~~~~~
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                         Leaking: UNKNOWN
│                         ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                              ~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) ``` | 2019-04-05 20:11:47 | a938855585c7cf2522ffbd143d4bb66a234eea66

Add share to Stack Overflow button when viewing a leak (#1252)

* Add share to Stack Overflow button when viewing a leak

* Add question tag, lengthen toast and fix build failure. | 2019-04-04 20:49:50 | 8724d2aaffc07904517a3b823867802ca43233ae

Check if serviceInfo.processName is null. When LeakCanary runs on a seperate process and that process for some reason does not have a assigned processName, then we will crash on a NullPointerException. Also a debug log explaining this. (#1225) | 2019-04-01 19:20:40 | 3efc43608ed71dc20b0ad1e0e80e33d15249666f

fix master broken | 2019-04-01 19:07:27 | fe42130029174681a708b7d8622412efbaf81e73

Fix GC Root bugs that missed leaks (#1168)

In Perflib, Snapshot.getGcRoots() only returns the GC roots from the first heap. Based on empirical evidence, it seems like Android has 4 heaps, and the GC Roots used to only be in the first heap, but more recent versions of Android have GC Roots in other heaps as well.

This means LeakCanary would sometimes show "No Leak Found" when there actually was a leak.

Fixes #1163 | 2019-01-10 23:32:27 | 64b6e5a41796ae1587c50c8cc860cea25f28f382

fix typo | 2018-10-17 00:43:01 | 044b1e4827bc71ec008dc3f7e43c78f58885f1e1

Fix LeakCanary toasting (#1116)

- Prior attempts to get it to work with the application context turned out to be buggy.
- This makes LeakCanary use whatever the current resumed activity is, if any.
- If there is no resumed activity, then the toast isn't displayed.

This supersedes #1080 | 2018-10-16 13:23:14 | 0e39e2eea79bc05bf7147a4074dd7163f7c401ff

fix the wrong word (#1111) | 2018-10-16 01:25:28 | 636b9b6c2b39c0c887c9ed78e904239db9bc131e

Merge pull request #1104 from IlyaGulya/bug/travis-ci-cache-fix

Fix travis caching and improve build time. | 2018-09-22 21:25:59 | 344728b906daf6d010f66bdf4ccc29ad8fedede5

Error prone 2.3.1 + suggested fix and specify version

See http://errorprone.info/bugpattern/StringSplitter | 2018-08-22 07:37:33 | a6b6960d73a1da9661f4e85254570bf5f867f954

Merge pull request #1089 from hzsweers/z/fixAnother

Quick followup to #1088 | 2018-08-22 03:15:15 | be973f5f5da6a3516aedab98e639690697617747

Merge pull request #1087 from Goddchen/patch-2

Updated german translation | 2018-08-20 13:52:47 | b43c279b3e1623c193e1dc81955527f70e93f822

Merge pull request #1063 from javmarina/patch-1

Fixed wrong versions in AndroidExcludedRefs | 2018-07-25 18:31:55 | 3b4ebe3e2571377f93e9a6976e021324502a0f78

Fixed wrong versions in AndroidExcludedRefs

Commit https://android.googlesource.com/platform/frameworks/base/+/27db46850b708070452c0ce49daf5f79503fbde6 introduced this issue. This commit was first included in Jelly Bean 4.3 (JELLY_BEAN_MR2), not Jelly Bean 4.1 (JELLY_BEAN)
Commit https://android.googlesource.com/platform/frameworks/base/+/5200e1cb07190a1f6874d72a4561064cad3ee3e0 fixes this issue and was first included in Oreo 8.0 (O). Nougat still has this memory leak. | 2018-07-24 18:24:59 | e4778b25f2c6e65ebc485d255e38586c7d45ec97

Merge pull request #1057 from square/py/ui_bug

Fix drawing of start line | 2018-07-20 22:21:19 | af96577a7d19e4df9f63d95fd9c3bfd2adcddb5d

Avoid Toast crashes

Showing a toast can crash on API 25 because the Window Manager can throw a BadTokenException when addView is called.

This change fixes it by configuring the toast manually and calling the window manager directly. This is based on https://github.com/pyricau/frenchtoast/blob/master/frenchtoast/src/main/java/frenchtoast/Mixture.java#L49 .

Fixes #844 | 2018-07-20 16:11:22 | c9ebc5cf5099c093bde5d3309b2692cb0e2016d8

Fixing setup bug | 2018-06-28 04:07:09 | 505933817cf6e2eb0dad4a78d4c7c35a072b9868

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

Fix crash when pressing home from root screen (#1578)

This bug only happens on older Android devices.

Fixes #1555 | 2019-09-11 01:51:06 | 274f58f96e8de7dcd3000c06ba3e2b50e427747d

Merge pull request #1559 from bric3/fix-primitive-array-dump-skip

Fixes the primitive array dump record skipping | 2019-09-09 22:16:57 | c0fd4d812cb8d6c5723231e501c121da2af86f06

Parsing and applying proguard mapping during heap analysis (#1542)

* Parsing and applying proguard mapping during heap analysis

* Parsing and applying proguard mapping during heap analysis

* Rebased onto master

* Post review changes and updated shark-cli to support mapping files

* Post review fixes

* Moving proguard mapping reader out of the analyzer and formatting fixes | 2019-08-30 16:54:20 | 66182a52069d9be59d0af6220aa9afd74218aa9b

fix images | 2019-08-27 20:02:50 | 8f5030e9faa8690217e1bd436274a3de5b9d3fb3

fix image links in docs | 2019-08-27 19:59:20 | edca56a947278508350bfa5dd33d3fa10699001f

Merge pull request #1549 from Armaxis/patch-1

Added section about using Detekt to Contributing | 2019-08-24 22:16:26 | c923d14909888860a99d5899af17f5b52c9b000f

Revert "Replaced accessor with a call to setter to fix the build issue"

This reverts commit 82db0398 | 2019-08-17 02:21:08 | c570cb9b0fd7bd7fcc88c4d3b529df8837e98fdc

Replaced accessor with a call to setter to fix the build issue | 2019-08-16 04:32:25 | 82db039843303044f91d36ba7c43595ab59bacd5

fix typo | 2019-08-02 15:31:17 | a2452f61e78e689efb59adaf71384d74447578b0

Add / fix android inspectors (#1491)

* Added MortarScope and ViewRootImpl inspectors
* Fixed the ContextWrapper inspector

Fixes #1490
Fixes #1389 | 2019-07-25 22:50:48 | 915f8359690a016a09e66608a041454b9c8c52cb

Documenting public APIs (#1476)

Also fixed naming and other things that weren't right.

Fixes #1474 | 2019-07-19 06:57:25 | 41c69a5d424b4236114c5ce1b077afdad38e57a5

Adding CLI for LeakCanary (#1456)

Example usage:
```
./gradlew leakcanary-cli:run --args='analyze-process com.example.leakcanary'

./gradlew leakcanary-cli:run --args='dump-process com.example.leakcanary'

./gradlew leakcanary-cli:run --args='analyze-file /path/to/heapdump.hprof'
```

Also fixed a bug in ShortestPathFinder which did not ignore null references in object arrays | 2019-07-11 19:11:30 | eded1c96e84f37393857ba4de2580aec784b2391

Behavior change & bugfixes for retained count notification (#1433)

* Bugfix: when tapping the "dump heap" notification, if the GC found no retained instance we didn't use a distinct notification id to communicate that, and then soon after we'd dismiss the notification that let's the user know there is no retained instances on tap.
* Bugfix: we weren't running the GC when checking for retained instances and the count was under the threshold
* Change: we now update the notification and keep it around for 30 seconds when the count goes to 0
* Change: the "no retained instance" notification that shows on tap is identical and also auto dismisses after 30 seconds.
* Change: we're checking for retained references (and running the GC) every 2 seconds instead of 5.

Fixes #1427 | 2019-07-03 20:55:47 | 968083a915343d881bd63e40587c070fde543732

Update how to fix a leak | 2019-06-25 05:46:56 | 177e7fd12933d99eca7a526851c53e598a03bf90

Text rendering tests (#1378)

* Added test coverage for text rendering
* Fixed bug: labels were not rendered on the last node (leaking instance)
* Matched exclusions are now rendered on their own line

Fixes #1375
Fixes #1350 | 2019-06-04 09:32:11 | 1926cb1db73f9583e11c557dbf2e5d46e3896a6e

Thread name based exclusions (#1353)

* Readded support for exclusions of local variable based on thread names
* Renamed ThreadExclusion to JavaLocalExclusion
* Fixed bug: KeyedWeakReference was not always ignored because its superclass is has a weakly reachable exclusion.
* Fixed bug: all root nodes had the same visit order as the first non root enqueued item, making it possible for a non root node to be dequeued before we're done with all roots.
* Redded gc root sorting
* Added tests to cover all uncovered bugs
* Added support for parsing StackFrameRecord

Fixes #1339 | 2019-05-20 13:17:18 | 6c2ee609efda323e88a4964d31fc5a5f0532f776

Reachability => LeakStatus (#1340)

* Combined leaking information from inspectors to solving conflicts while keeping all reasons
* Made reason from view leak inspector more obvious, and added label data about internals
* Moved reachability into LeakTraceElement
* Reachability renamed to LeakNodeStatus and leaking / not leaking
* ReachabilityInspector and Labeler are now functions with type aliases

Related to #1336: should fix the crash, though it's still unclear why AppCompatButton was a gc root there. | 2019-05-07 14:56:59 | 01210bbbfaecb3bcb6057c62b2195366d3bfa4f9

Revamp notifications (#1335)

* New notification that shows the count of retained instances. Tapping it triggers a heap dump. Fixes #1325
* Notifications are now split into two channels: default for results, and low for everything else.
* New config options: LeakCanary.config.dumpHeapWhenDebugging (default false) and LeakCanary.config.retainedVisibleThreshold (default 5)
* Replaced notification int constants and timestamps with resource ids.
* Don't show background notifications in instant apps (#1197) | 2019-05-05 16:38:26 | b14d9bc9c0a87119137bc0998bdec9314186dfcf

Highlighting new leaks (#1334)

New leaks are leaks that have a leak group that doesn't exist in any prior analysis.

* The notification now reports the count of leaks, with a split of new, known, and won't fix.
* The analysis success screen shows new leaks
* Moved description prefixes to be computed rather than inserted in the DB

Fixes #1328 | 2019-05-05 09:37:38 | f9a0518d4ddd69b782b6302caa3e3039787038e4

LeakSentry can be disabled (#1332)

LeakCanary has an enabled config option. Default is on in debug builds off in release builds.

Fixes #1327 | 2019-05-04 17:52:47 | f74f60901f34c751e8b8798d626678aa6233c893

Revert "fix trailing spaces per checkstyle"

This reverts commit ff17f879ec92ec326f8b1c6b7b8d77a5266d6622. | 2019-05-04 08:04:21 | 03136ca7dc1680299d710f79ca885412a1564144

Add test coverage for heap analysis (#1329)

* Fixed bug when reachability inspectors conflicts (reachable should win and erase unreachable)
* Added back support for leaking instances being empty objects, strings, primitive arrays or any object that we otherwise don't follow to find shortest paths. | 2019-05-04 07:51:02 | 59558e655d537c7654c411eebfd840773a8b77c9

Introducing exclusion priority (#1317)

* Add segmented FIFO queue

Unified several queues into one segmented FIFO queue. This will enable us to add several levels of priority.

* Introducing exclusion priority

* "excludedLeak" is now known as "won't fix leak", which matches its reality better. It's a leak that is known and real yet we're not fixing.
* Exclusion.alwaysExclude is replaced with Exclusion.status, with 3 possible values: NEVER_REACHABLE, WONT_FIX_LEAK, WEAKLY_REACHABLE.
* The shortest path finder will now follow weak references after all other paths have been exhausted.
* Removed class exclusion, was confusing, replaced with less lazy approach of listing fields to exclude
* VIEWLOCATIONHOLDER_ROOT should not have been always excluded, fixed.

Fixes #1173 ... well kinda. Instead of "non leaking retained instances", LeakCanary will report weakly reachable traces. Not sure if that'll help but it's a foundation we can build on. | 2019-04-30 17:44:15 | b0eedc553995e354e2382b3378bf0348801cd3c5

AllFieldsLabeler & cleanups (#1316)

* Add new optional labeler that prints all fields (useful for debugging)
* Move deprecated AnalysisResult to perflib
* Made DefaultAnalysisResultListener an object | 2019-04-30 07:08:29 | b9ee5356db265412db39c4c341880f305fbf2c76

fix format | 2019-04-22 06:25:09 | 4a2b158913e5a9eb0d5c6fdfbf949a80fc1b2c6b

Rename default to perflib and experimental to default (#1282)

* Remove experimental from module names

* Remove experimental prefix, add perflib prefix:

* update docs | 2019-04-19 06:01:39 | 425a9f24deb72691b02cdc85f80d177c05afebc5

fix list | 2019-04-18 21:55:43 | 8e3f9d26e8d3555bf934b99ac062aabc3aba528f

fix broken master | 2019-04-10 15:00:30 | f067ae53e050c5f52f47237440a6ac7eee3ca94c

fix broken build due to typo | 2019-04-10 05:44:19 | 7d4ddb4ffe3c9b0f30a84848675452dded0d4115

Leaking information aligned below simple class name. (#1258)

Also fixed issue where extraString + exclusionString were showing after the squiggly line.

Before: 
``` 
┬
├─ java.lang.Thread
│                 Leaking: NO (it's a GC root)
│                 ↓ thread Thread.<Java Local>
│                                ~~~~~~~~~~~~~ (named 'Thread-4')
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                 Leaking: UNKNOWN
│                 ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                     ~~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) 
```
After: 
``` 
┬
├─ java.lang.Thread
│            Leaking: NO (it's a GC root)
│            ↓ thread Thread.<Java Local> (named 'Thread-4')
│                            ~~~~~~~~~~~~
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                         Leaking: UNKNOWN
│                         ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                              ~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) ``` | 2019-04-05 20:11:47 | a938855585c7cf2522ffbd143d4bb66a234eea66

Add share to Stack Overflow button when viewing a leak (#1252)

* Add share to Stack Overflow button when viewing a leak

* Add question tag, lengthen toast and fix build failure. | 2019-04-04 20:49:50 | 8724d2aaffc07904517a3b823867802ca43233ae

Check if serviceInfo.processName is null. When LeakCanary runs on a seperate process and that process for some reason does not have a assigned processName, then we will crash on a NullPointerException. Also a debug log explaining this. (#1225) | 2019-04-01 19:20:40 | 3efc43608ed71dc20b0ad1e0e80e33d15249666f

fix master broken | 2019-04-01 19:07:27 | fe42130029174681a708b7d8622412efbaf81e73

fix trailing spaces per checkstyle | 2019-03-29 22:34:58 | ff17f879ec92ec326f8b1c6b7b8d77a5266d6622

Fix GC Root bugs that missed leaks (#1168)

In Perflib, Snapshot.getGcRoots() only returns the GC roots from the first heap. Based on empirical evidence, it seems like Android has 4 heaps, and the GC Roots used to only be in the first heap, but more recent versions of Android have GC Roots in other heaps as well.

This means LeakCanary would sometimes show "No Leak Found" when there actually was a leak.

Fixes #1163 | 2019-01-10 23:32:27 | 64b6e5a41796ae1587c50c8cc860cea25f28f382

fix typo | 2018-10-17 00:43:01 | 044b1e4827bc71ec008dc3f7e43c78f58885f1e1

Fix LeakCanary toasting (#1116)

- Prior attempts to get it to work with the application context turned out to be buggy.
- This makes LeakCanary use whatever the current resumed activity is, if any.
- If there is no resumed activity, then the toast isn't displayed.

This supersedes #1080 | 2018-10-16 13:23:14 | 0e39e2eea79bc05bf7147a4074dd7163f7c401ff

fix the wrong word (#1111) | 2018-10-16 01:25:28 | 636b9b6c2b39c0c887c9ed78e904239db9bc131e

Merge pull request #1104 from IlyaGulya/bug/travis-ci-cache-fix

Fix travis caching and improve build time. | 2018-09-22 21:25:59 | 344728b906daf6d010f66bdf4ccc29ad8fedede5

Error prone 2.3.1 + suggested fix and specify version

See http://errorprone.info/bugpattern/StringSplitter | 2018-08-22 07:37:33 | a6b6960d73a1da9661f4e85254570bf5f867f954

Merge pull request #1089 from hzsweers/z/fixAnother

Quick followup to #1088 | 2018-08-22 03:15:15 | be973f5f5da6a3516aedab98e639690697617747

Merge pull request #1087 from Goddchen/patch-2

Updated german translation | 2018-08-20 13:52:47 | b43c279b3e1623c193e1dc81955527f70e93f822

Merge pull request #1063 from javmarina/patch-1

Fixed wrong versions in AndroidExcludedRefs | 2018-07-25 18:31:55 | 3b4ebe3e2571377f93e9a6976e021324502a0f78

Fixed wrong versions in AndroidExcludedRefs

Commit https://android.googlesource.com/platform/frameworks/base/+/27db46850b708070452c0ce49daf5f79503fbde6 introduced this issue. This commit was first included in Jelly Bean 4.3 (JELLY_BEAN_MR2), not Jelly Bean 4.1 (JELLY_BEAN)
Commit https://android.googlesource.com/platform/frameworks/base/+/5200e1cb07190a1f6874d72a4561064cad3ee3e0 fixes this issue and was first included in Oreo 8.0 (O). Nougat still has this memory leak. | 2018-07-24 18:24:59 | e4778b25f2c6e65ebc485d255e38586c7d45ec97

Merge pull request #1057 from square/py/ui_bug

Fix drawing of start line | 2018-07-20 22:21:19 | af96577a7d19e4df9f63d95fd9c3bfd2adcddb5d

Avoid Toast crashes

Showing a toast can crash on API 25 because the Window Manager can throw a BadTokenException when addView is called.

This change fixes it by configuring the toast manually and calling the window manager directly. This is based on https://github.com/pyricau/frenchtoast/blob/master/frenchtoast/src/main/java/frenchtoast/Mixture.java#L49 .

Fixes #844 | 2018-07-20 16:11:22 | c9ebc5cf5099c093bde5d3309b2692cb0e2016d8

Fixing setup bug | 2018-06-28 04:07:09 | 505933817cf6e2eb0dad4a78d4c7c35a072b9868

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

Adding CLI for LeakCanary (#1456)

Example usage:
```
./gradlew leakcanary-cli:run --args='analyze-process com.example.leakcanary'

./gradlew leakcanary-cli:run --args='dump-process com.example.leakcanary'

./gradlew leakcanary-cli:run --args='analyze-file /path/to/heapdump.hprof'
```

Also fixed a bug in ShortestPathFinder which did not ignore null references in object arrays | 2019-07-11 19:11:30 | eded1c96e84f37393857ba4de2580aec784b2391

Behavior change & bugfixes for retained count notification (#1433)

* Bugfix: when tapping the "dump heap" notification, if the GC found no retained instance we didn't use a distinct notification id to communicate that, and then soon after we'd dismiss the notification that let's the user know there is no retained instances on tap.
* Bugfix: we weren't running the GC when checking for retained instances and the count was under the threshold
* Change: we now update the notification and keep it around for 30 seconds when the count goes to 0
* Change: the "no retained instance" notification that shows on tap is identical and also auto dismisses after 30 seconds.
* Change: we're checking for retained references (and running the GC) every 2 seconds instead of 5.

Fixes #1427 | 2019-07-03 20:55:47 | 968083a915343d881bd63e40587c070fde543732

Update how to fix a leak | 2019-06-25 05:46:56 | 177e7fd12933d99eca7a526851c53e598a03bf90

Text rendering tests (#1378)

* Added test coverage for text rendering
* Fixed bug: labels were not rendered on the last node (leaking instance)
* Matched exclusions are now rendered on their own line

Fixes #1375
Fixes #1350 | 2019-06-04 09:32:11 | 1926cb1db73f9583e11c557dbf2e5d46e3896a6e

Thread name based exclusions (#1353)

* Readded support for exclusions of local variable based on thread names
* Renamed ThreadExclusion to JavaLocalExclusion
* Fixed bug: KeyedWeakReference was not always ignored because its superclass is has a weakly reachable exclusion.
* Fixed bug: all root nodes had the same visit order as the first non root enqueued item, making it possible for a non root node to be dequeued before we're done with all roots.
* Redded gc root sorting
* Added tests to cover all uncovered bugs
* Added support for parsing StackFrameRecord

Fixes #1339 | 2019-05-20 13:17:18 | 6c2ee609efda323e88a4964d31fc5a5f0532f776

Reachability => LeakStatus (#1340)

* Combined leaking information from inspectors to solving conflicts while keeping all reasons
* Made reason from view leak inspector more obvious, and added label data about internals
* Moved reachability into LeakTraceElement
* Reachability renamed to LeakNodeStatus and leaking / not leaking
* ReachabilityInspector and Labeler are now functions with type aliases

Related to #1336: should fix the crash, though it's still unclear why AppCompatButton was a gc root there. | 2019-05-07 14:56:59 | 01210bbbfaecb3bcb6057c62b2195366d3bfa4f9

Revamp notifications (#1335)

* New notification that shows the count of retained instances. Tapping it triggers a heap dump. Fixes #1325
* Notifications are now split into two channels: default for results, and low for everything else.
* New config options: LeakCanary.config.dumpHeapWhenDebugging (default false) and LeakCanary.config.retainedVisibleThreshold (default 5)
* Replaced notification int constants and timestamps with resource ids.
* Don't show background notifications in instant apps (#1197) | 2019-05-05 16:38:26 | b14d9bc9c0a87119137bc0998bdec9314186dfcf

Highlighting new leaks (#1334)

New leaks are leaks that have a leak group that doesn't exist in any prior analysis.

* The notification now reports the count of leaks, with a split of new, known, and won't fix.
* The analysis success screen shows new leaks
* Moved description prefixes to be computed rather than inserted in the DB

Fixes #1328 | 2019-05-05 09:37:38 | f9a0518d4ddd69b782b6302caa3e3039787038e4

LeakSentry can be disabled (#1332)

LeakCanary has an enabled config option. Default is on in debug builds off in release builds.

Fixes #1327 | 2019-05-04 17:52:47 | f74f60901f34c751e8b8798d626678aa6233c893

Revert "fix trailing spaces per checkstyle"

This reverts commit ff17f879ec92ec326f8b1c6b7b8d77a5266d6622. | 2019-05-04 08:04:21 | 03136ca7dc1680299d710f79ca885412a1564144

Add test coverage for heap analysis (#1329)

* Fixed bug when reachability inspectors conflicts (reachable should win and erase unreachable)
* Added back support for leaking instances being empty objects, strings, primitive arrays or any object that we otherwise don't follow to find shortest paths. | 2019-05-04 07:51:02 | 59558e655d537c7654c411eebfd840773a8b77c9

Introducing exclusion priority (#1317)

* Add segmented FIFO queue

Unified several queues into one segmented FIFO queue. This will enable us to add several levels of priority.

* Introducing exclusion priority

* "excludedLeak" is now known as "won't fix leak", which matches its reality better. It's a leak that is known and real yet we're not fixing.
* Exclusion.alwaysExclude is replaced with Exclusion.status, with 3 possible values: NEVER_REACHABLE, WONT_FIX_LEAK, WEAKLY_REACHABLE.
* The shortest path finder will now follow weak references after all other paths have been exhausted.
* Removed class exclusion, was confusing, replaced with less lazy approach of listing fields to exclude
* VIEWLOCATIONHOLDER_ROOT should not have been always excluded, fixed.

Fixes #1173 ... well kinda. Instead of "non leaking retained instances", LeakCanary will report weakly reachable traces. Not sure if that'll help but it's a foundation we can build on. | 2019-04-30 17:44:15 | b0eedc553995e354e2382b3378bf0348801cd3c5

AllFieldsLabeler & cleanups (#1316)

* Add new optional labeler that prints all fields (useful for debugging)
* Move deprecated AnalysisResult to perflib
* Made DefaultAnalysisResultListener an object | 2019-04-30 07:08:29 | b9ee5356db265412db39c4c341880f305fbf2c76

fix format | 2019-04-22 06:25:09 | 4a2b158913e5a9eb0d5c6fdfbf949a80fc1b2c6b

Rename default to perflib and experimental to default (#1282)

* Remove experimental from module names

* Remove experimental prefix, add perflib prefix:

* update docs | 2019-04-19 06:01:39 | 425a9f24deb72691b02cdc85f80d177c05afebc5

fix list | 2019-04-18 21:55:43 | 8e3f9d26e8d3555bf934b99ac062aabc3aba528f

fix broken master | 2019-04-10 15:00:30 | f067ae53e050c5f52f47237440a6ac7eee3ca94c

fix broken build due to typo | 2019-04-10 05:44:19 | 7d4ddb4ffe3c9b0f30a84848675452dded0d4115

Leaking information aligned below simple class name. (#1258)

Also fixed issue where extraString + exclusionString were showing after the squiggly line.

Before: 
``` 
┬
├─ java.lang.Thread
│                 Leaking: NO (it's a GC root)
│                 ↓ thread Thread.<Java Local>
│                                ~~~~~~~~~~~~~ (named 'Thread-4')
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                 Leaking: UNKNOWN
│                 ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                     ~~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) 
```
After: 
``` 
┬
├─ java.lang.Thread
│            Leaking: NO (it's a GC root)
│            ↓ thread Thread.<Java Local> (named 'Thread-4')
│                            ~~~~~~~~~~~~
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                         Leaking: UNKNOWN
│                         ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                              ~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) ``` | 2019-04-05 20:11:47 | a938855585c7cf2522ffbd143d4bb66a234eea66

Add share to Stack Overflow button when viewing a leak (#1252)

* Add share to Stack Overflow button when viewing a leak

* Add question tag, lengthen toast and fix build failure. | 2019-04-04 20:49:50 | 8724d2aaffc07904517a3b823867802ca43233ae

Check if serviceInfo.processName is null. When LeakCanary runs on a seperate process and that process for some reason does not have a assigned processName, then we will crash on a NullPointerException. Also a debug log explaining this. (#1225) | 2019-04-01 19:20:40 | 3efc43608ed71dc20b0ad1e0e80e33d15249666f

fix master broken | 2019-04-01 19:07:27 | fe42130029174681a708b7d8622412efbaf81e73

fix trailing spaces per checkstyle | 2019-03-29 22:34:58 | ff17f879ec92ec326f8b1c6b7b8d77a5266d6622

Fix GC Root bugs that missed leaks (#1168)

In Perflib, Snapshot.getGcRoots() only returns the GC roots from the first heap. Based on empirical evidence, it seems like Android has 4 heaps, and the GC Roots used to only be in the first heap, but more recent versions of Android have GC Roots in other heaps as well.

This means LeakCanary would sometimes show "No Leak Found" when there actually was a leak.

Fixes #1163 | 2019-01-10 23:32:27 | 64b6e5a41796ae1587c50c8cc860cea25f28f382

fix typo | 2018-10-17 00:43:01 | 044b1e4827bc71ec008dc3f7e43c78f58885f1e1

Fix LeakCanary toasting (#1116)

- Prior attempts to get it to work with the application context turned out to be buggy.
- This makes LeakCanary use whatever the current resumed activity is, if any.
- If there is no resumed activity, then the toast isn't displayed.

This supersedes #1080 | 2018-10-16 13:23:14 | 0e39e2eea79bc05bf7147a4074dd7163f7c401ff

fix the wrong word (#1111) | 2018-10-16 01:25:28 | 636b9b6c2b39c0c887c9ed78e904239db9bc131e

Merge pull request #1104 from IlyaGulya/bug/travis-ci-cache-fix

Fix travis caching and improve build time. | 2018-09-22 21:25:59 | 344728b906daf6d010f66bdf4ccc29ad8fedede5

Error prone 2.3.1 + suggested fix and specify version

See http://errorprone.info/bugpattern/StringSplitter | 2018-08-22 07:37:33 | a6b6960d73a1da9661f4e85254570bf5f867f954

Merge pull request #1089 from hzsweers/z/fixAnother

Quick followup to #1088 | 2018-08-22 03:15:15 | be973f5f5da6a3516aedab98e639690697617747

Merge pull request #1087 from Goddchen/patch-2

Updated german translation | 2018-08-20 13:52:47 | b43c279b3e1623c193e1dc81955527f70e93f822

Merge pull request #1063 from javmarina/patch-1

Fixed wrong versions in AndroidExcludedRefs | 2018-07-25 18:31:55 | 3b4ebe3e2571377f93e9a6976e021324502a0f78

Fixed wrong versions in AndroidExcludedRefs

Commit https://android.googlesource.com/platform/frameworks/base/+/27db46850b708070452c0ce49daf5f79503fbde6 introduced this issue. This commit was first included in Jelly Bean 4.3 (JELLY_BEAN_MR2), not Jelly Bean 4.1 (JELLY_BEAN)
Commit https://android.googlesource.com/platform/frameworks/base/+/5200e1cb07190a1f6874d72a4561064cad3ee3e0 fixes this issue and was first included in Oreo 8.0 (O). Nougat still has this memory leak. | 2018-07-24 18:24:59 | e4778b25f2c6e65ebc485d255e38586c7d45ec97

Merge pull request #1057 from square/py/ui_bug

Fix drawing of start line | 2018-07-20 22:21:19 | af96577a7d19e4df9f63d95fd9c3bfd2adcddb5d

Avoid Toast crashes

Showing a toast can crash on API 25 because the Window Manager can throw a BadTokenException when addView is called.

This change fixes it by configuring the toast manually and calling the window manager directly. This is based on https://github.com/pyricau/frenchtoast/blob/master/frenchtoast/src/main/java/frenchtoast/Mixture.java#L49 .

Fixes #844 | 2018-07-20 16:11:22 | c9ebc5cf5099c093bde5d3309b2692cb0e2016d8

Fixing setup bug | 2018-06-28 04:07:09 | 505933817cf6e2eb0dad4a78d4c7c35a072b9868

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

Introducing exclusion priority (#1317)

* Add segmented FIFO queue

Unified several queues into one segmented FIFO queue. This will enable us to add several levels of priority.

* Introducing exclusion priority

* "excludedLeak" is now known as "won't fix leak", which matches its reality better. It's a leak that is known and real yet we're not fixing.
* Exclusion.alwaysExclude is replaced with Exclusion.status, with 3 possible values: NEVER_REACHABLE, WONT_FIX_LEAK, WEAKLY_REACHABLE.
* The shortest path finder will now follow weak references after all other paths have been exhausted.
* Removed class exclusion, was confusing, replaced with less lazy approach of listing fields to exclude
* VIEWLOCATIONHOLDER_ROOT should not have been always excluded, fixed.

Fixes #1173 ... well kinda. Instead of "non leaking retained instances", LeakCanary will report weakly reachable traces. Not sure if that'll help but it's a foundation we can build on. | 2019-04-30 17:44:15 | b0eedc553995e354e2382b3378bf0348801cd3c5

AllFieldsLabeler & cleanups (#1316)

* Add new optional labeler that prints all fields (useful for debugging)
* Move deprecated AnalysisResult to perflib
* Made DefaultAnalysisResultListener an object | 2019-04-30 07:08:29 | b9ee5356db265412db39c4c341880f305fbf2c76

fix format | 2019-04-22 06:25:09 | 4a2b158913e5a9eb0d5c6fdfbf949a80fc1b2c6b

Rename default to perflib and experimental to default (#1282)

* Remove experimental from module names

* Remove experimental prefix, add perflib prefix:

* update docs | 2019-04-19 06:01:39 | 425a9f24deb72691b02cdc85f80d177c05afebc5

fix list | 2019-04-18 21:55:43 | 8e3f9d26e8d3555bf934b99ac062aabc3aba528f

fix broken master | 2019-04-10 15:00:30 | f067ae53e050c5f52f47237440a6ac7eee3ca94c

fix broken build due to typo | 2019-04-10 05:44:19 | 7d4ddb4ffe3c9b0f30a84848675452dded0d4115

Leaking information aligned below simple class name. (#1258)

Also fixed issue where extraString + exclusionString were showing after the squiggly line.

Before: 
``` 
┬
├─ java.lang.Thread
│                 Leaking: NO (it's a GC root)
│                 ↓ thread Thread.<Java Local>
│                                ~~~~~~~~~~~~~ (named 'Thread-4')
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                 Leaking: UNKNOWN
│                 ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                     ~~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) 
```
After: 
``` 
┬
├─ java.lang.Thread
│            Leaking: NO (it's a GC root)
│            ↓ thread Thread.<Java Local> (named 'Thread-4')
│                            ~~~~~~~~~~~~
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                         Leaking: UNKNOWN
│                         ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                              ~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) ``` | 2019-04-05 20:11:47 | a938855585c7cf2522ffbd143d4bb66a234eea66

Add share to Stack Overflow button when viewing a leak (#1252)

* Add share to Stack Overflow button when viewing a leak

* Add question tag, lengthen toast and fix build failure. | 2019-04-04 20:49:50 | 8724d2aaffc07904517a3b823867802ca43233ae

Check if serviceInfo.processName is null. When LeakCanary runs on a seperate process and that process for some reason does not have a assigned processName, then we will crash on a NullPointerException. Also a debug log explaining this. (#1225) | 2019-04-01 19:20:40 | 3efc43608ed71dc20b0ad1e0e80e33d15249666f

fix master broken | 2019-04-01 19:07:27 | fe42130029174681a708b7d8622412efbaf81e73

Fix GC Root bugs that missed leaks (#1168)

In Perflib, Snapshot.getGcRoots() only returns the GC roots from the first heap. Based on empirical evidence, it seems like Android has 4 heaps, and the GC Roots used to only be in the first heap, but more recent versions of Android have GC Roots in other heaps as well.

This means LeakCanary would sometimes show "No Leak Found" when there actually was a leak.

Fixes #1163 | 2019-01-10 23:32:27 | 64b6e5a41796ae1587c50c8cc860cea25f28f382

fix typo | 2018-10-17 00:43:01 | 044b1e4827bc71ec008dc3f7e43c78f58885f1e1

Fix LeakCanary toasting (#1116)

- Prior attempts to get it to work with the application context turned out to be buggy.
- This makes LeakCanary use whatever the current resumed activity is, if any.
- If there is no resumed activity, then the toast isn't displayed.

This supersedes #1080 | 2018-10-16 13:23:14 | 0e39e2eea79bc05bf7147a4074dd7163f7c401ff

fix the wrong word (#1111) | 2018-10-16 01:25:28 | 636b9b6c2b39c0c887c9ed78e904239db9bc131e

Merge pull request #1104 from IlyaGulya/bug/travis-ci-cache-fix

Fix travis caching and improve build time. | 2018-09-22 21:25:59 | 344728b906daf6d010f66bdf4ccc29ad8fedede5

Error prone 2.3.1 + suggested fix and specify version

See http://errorprone.info/bugpattern/StringSplitter | 2018-08-22 07:37:33 | a6b6960d73a1da9661f4e85254570bf5f867f954

Merge pull request #1089 from hzsweers/z/fixAnother

Quick followup to #1088 | 2018-08-22 03:15:15 | be973f5f5da6a3516aedab98e639690697617747

Merge pull request #1087 from Goddchen/patch-2

Updated german translation | 2018-08-20 13:52:47 | b43c279b3e1623c193e1dc81955527f70e93f822

Merge pull request #1063 from javmarina/patch-1

Fixed wrong versions in AndroidExcludedRefs | 2018-07-25 18:31:55 | 3b4ebe3e2571377f93e9a6976e021324502a0f78

Fixed wrong versions in AndroidExcludedRefs

Commit https://android.googlesource.com/platform/frameworks/base/+/27db46850b708070452c0ce49daf5f79503fbde6 introduced this issue. This commit was first included in Jelly Bean 4.3 (JELLY_BEAN_MR2), not Jelly Bean 4.1 (JELLY_BEAN)
Commit https://android.googlesource.com/platform/frameworks/base/+/5200e1cb07190a1f6874d72a4561064cad3ee3e0 fixes this issue and was first included in Oreo 8.0 (O). Nougat still has this memory leak. | 2018-07-24 18:24:59 | e4778b25f2c6e65ebc485d255e38586c7d45ec97

Merge pull request #1057 from square/py/ui_bug

Fix drawing of start line | 2018-07-20 22:21:19 | af96577a7d19e4df9f63d95fd9c3bfd2adcddb5d

Avoid Toast crashes

Showing a toast can crash on API 25 because the Window Manager can throw a BadTokenException when addView is called.

This change fixes it by configuring the toast manually and calling the window manager directly. This is based on https://github.com/pyricau/frenchtoast/blob/master/frenchtoast/src/main/java/frenchtoast/Mixture.java#L49 .

Fixes #844 | 2018-07-20 16:11:22 | c9ebc5cf5099c093bde5d3309b2692cb0e2016d8

Fixing setup bug | 2018-06-28 04:07:09 | 505933817cf6e2eb0dad4a78d4c7c35a072b9868

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

fix typo | 2018-10-17 00:43:01 | 044b1e4827bc71ec008dc3f7e43c78f58885f1e1

Fix LeakCanary toasting (#1116)

- Prior attempts to get it to work with the application context turned out to be buggy.
- This makes LeakCanary use whatever the current resumed activity is, if any.
- If there is no resumed activity, then the toast isn't displayed.

This supersedes #1080 | 2018-10-16 13:23:14 | 0e39e2eea79bc05bf7147a4074dd7163f7c401ff

fix the wrong word (#1111) | 2018-10-16 01:25:28 | 636b9b6c2b39c0c887c9ed78e904239db9bc131e

Merge pull request #1104 from IlyaGulya/bug/travis-ci-cache-fix

Fix travis caching and improve build time. | 2018-09-22 21:25:59 | 344728b906daf6d010f66bdf4ccc29ad8fedede5

Error prone 2.3.1 + suggested fix and specify version

See http://errorprone.info/bugpattern/StringSplitter | 2018-08-22 07:37:33 | a6b6960d73a1da9661f4e85254570bf5f867f954

Merge pull request #1089 from hzsweers/z/fixAnother

Quick followup to #1088 | 2018-08-22 03:15:15 | be973f5f5da6a3516aedab98e639690697617747

Merge pull request #1087 from Goddchen/patch-2

Updated german translation | 2018-08-20 13:52:47 | b43c279b3e1623c193e1dc81955527f70e93f822

Merge pull request #1063 from javmarina/patch-1

Fixed wrong versions in AndroidExcludedRefs | 2018-07-25 18:31:55 | 3b4ebe3e2571377f93e9a6976e021324502a0f78

Fixed wrong versions in AndroidExcludedRefs

Commit https://android.googlesource.com/platform/frameworks/base/+/27db46850b708070452c0ce49daf5f79503fbde6 introduced this issue. This commit was first included in Jelly Bean 4.3 (JELLY_BEAN_MR2), not Jelly Bean 4.1 (JELLY_BEAN)
Commit https://android.googlesource.com/platform/frameworks/base/+/5200e1cb07190a1f6874d72a4561064cad3ee3e0 fixes this issue and was first included in Oreo 8.0 (O). Nougat still has this memory leak. | 2018-07-24 18:24:59 | e4778b25f2c6e65ebc485d255e38586c7d45ec97

Merge pull request #1057 from square/py/ui_bug

Fix drawing of start line | 2018-07-20 22:21:19 | af96577a7d19e4df9f63d95fd9c3bfd2adcddb5d

Avoid Toast crashes

Showing a toast can crash on API 25 because the Window Manager can throw a BadTokenException when addView is called.

This change fixes it by configuring the toast manually and calling the window manager directly. This is based on https://github.com/pyricau/frenchtoast/blob/master/frenchtoast/src/main/java/frenchtoast/Mixture.java#L49 .

Fixes #844 | 2018-07-20 16:11:22 | c9ebc5cf5099c093bde5d3309b2692cb0e2016d8

Fixing setup bug | 2018-06-28 04:07:09 | 505933817cf6e2eb0dad4a78d4c7c35a072b9868

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

fix format | 2019-04-22 06:25:09 | 4a2b158913e5a9eb0d5c6fdfbf949a80fc1b2c6b

Rename default to perflib and experimental to default (#1282)

* Remove experimental from module names

* Remove experimental prefix, add perflib prefix:

* update docs | 2019-04-19 06:01:39 | 425a9f24deb72691b02cdc85f80d177c05afebc5

fix list | 2019-04-18 21:55:43 | 8e3f9d26e8d3555bf934b99ac062aabc3aba528f

fix broken master | 2019-04-10 15:00:30 | f067ae53e050c5f52f47237440a6ac7eee3ca94c

fix broken build due to typo | 2019-04-10 05:44:19 | 7d4ddb4ffe3c9b0f30a84848675452dded0d4115

Leaking information aligned below simple class name. (#1258)

Also fixed issue where extraString + exclusionString were showing after the squiggly line.

Before: 
``` 
┬
├─ java.lang.Thread
│                 Leaking: NO (it's a GC root)
│                 ↓ thread Thread.<Java Local>
│                                ~~~~~~~~~~~~~ (named 'Thread-4')
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                 Leaking: UNKNOWN
│                 ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                     ~~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) 
```
After: 
``` 
┬
├─ java.lang.Thread
│            Leaking: NO (it's a GC root)
│            ↓ thread Thread.<Java Local> (named 'Thread-4')
│                            ~~~~~~~~~~~~
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                         Leaking: UNKNOWN
│                         ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                              ~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) ``` | 2019-04-05 20:11:47 | a938855585c7cf2522ffbd143d4bb66a234eea66

Add share to Stack Overflow button when viewing a leak (#1252)

* Add share to Stack Overflow button when viewing a leak

* Add question tag, lengthen toast and fix build failure. | 2019-04-04 20:49:50 | 8724d2aaffc07904517a3b823867802ca43233ae

Check if serviceInfo.processName is null. When LeakCanary runs on a seperate process and that process for some reason does not have a assigned processName, then we will crash on a NullPointerException. Also a debug log explaining this. (#1225) | 2019-04-01 19:20:40 | 3efc43608ed71dc20b0ad1e0e80e33d15249666f

fix master broken | 2019-04-01 19:07:27 | fe42130029174681a708b7d8622412efbaf81e73

Fix GC Root bugs that missed leaks (#1168)

In Perflib, Snapshot.getGcRoots() only returns the GC roots from the first heap. Based on empirical evidence, it seems like Android has 4 heaps, and the GC Roots used to only be in the first heap, but more recent versions of Android have GC Roots in other heaps as well.

This means LeakCanary would sometimes show "No Leak Found" when there actually was a leak.

Fixes #1163 | 2019-01-10 23:32:27 | 64b6e5a41796ae1587c50c8cc860cea25f28f382

fix typo | 2018-10-17 00:43:01 | 044b1e4827bc71ec008dc3f7e43c78f58885f1e1

Fix LeakCanary toasting (#1116)

- Prior attempts to get it to work with the application context turned out to be buggy.
- This makes LeakCanary use whatever the current resumed activity is, if any.
- If there is no resumed activity, then the toast isn't displayed.

This supersedes #1080 | 2018-10-16 13:23:14 | 0e39e2eea79bc05bf7147a4074dd7163f7c401ff

fix the wrong word (#1111) | 2018-10-16 01:25:28 | 636b9b6c2b39c0c887c9ed78e904239db9bc131e

Merge pull request #1104 from IlyaGulya/bug/travis-ci-cache-fix

Fix travis caching and improve build time. | 2018-09-22 21:25:59 | 344728b906daf6d010f66bdf4ccc29ad8fedede5

Error prone 2.3.1 + suggested fix and specify version

See http://errorprone.info/bugpattern/StringSplitter | 2018-08-22 07:37:33 | a6b6960d73a1da9661f4e85254570bf5f867f954

Merge pull request #1089 from hzsweers/z/fixAnother

Quick followup to #1088 | 2018-08-22 03:15:15 | be973f5f5da6a3516aedab98e639690697617747

Merge pull request #1087 from Goddchen/patch-2

Updated german translation | 2018-08-20 13:52:47 | b43c279b3e1623c193e1dc81955527f70e93f822

Merge pull request #1063 from javmarina/patch-1

Fixed wrong versions in AndroidExcludedRefs | 2018-07-25 18:31:55 | 3b4ebe3e2571377f93e9a6976e021324502a0f78

Fixed wrong versions in AndroidExcludedRefs

Commit https://android.googlesource.com/platform/frameworks/base/+/27db46850b708070452c0ce49daf5f79503fbde6 introduced this issue. This commit was first included in Jelly Bean 4.3 (JELLY_BEAN_MR2), not Jelly Bean 4.1 (JELLY_BEAN)
Commit https://android.googlesource.com/platform/frameworks/base/+/5200e1cb07190a1f6874d72a4561064cad3ee3e0 fixes this issue and was first included in Oreo 8.0 (O). Nougat still has this memory leak. | 2018-07-24 18:24:59 | e4778b25f2c6e65ebc485d255e38586c7d45ec97

Merge pull request #1057 from square/py/ui_bug

Fix drawing of start line | 2018-07-20 22:21:19 | af96577a7d19e4df9f63d95fd9c3bfd2adcddb5d

Avoid Toast crashes

Showing a toast can crash on API 25 because the Window Manager can throw a BadTokenException when addView is called.

This change fixes it by configuring the toast manually and calling the window manager directly. This is based on https://github.com/pyricau/frenchtoast/blob/master/frenchtoast/src/main/java/frenchtoast/Mixture.java#L49 .

Fixes #844 | 2018-07-20 16:11:22 | c9ebc5cf5099c093bde5d3309b2692cb0e2016d8

Fixing setup bug | 2018-06-28 04:07:09 | 505933817cf6e2eb0dad4a78d4c7c35a072b9868

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

Update fundamentals-fixing-a-memory-leak.md (#1775)

Fixed typo in  fundamentals-fixing-a-memory-leak.md | 2020-03-16 17:56:58 | 7e8aab836e57ce9c3fcff537f3df66542939137a

Doc fixes and updates (#1744)

* Fixes to properly render recipes in MkDoc

* Bumped release date
Updated release doc | 2020-02-06 18:00:48 | 57057c636b816cd73f9b344a4201aa04a3a8cca8

[bugfix]AppWatcher manualInstall function not works bugfix (#1734)

* manualInstall config not enabled by default bugfix

* Make manualInstall config enable decided by isDebuggableBuild

* Make manualInstall config copy from existing customized config

* Make manualInstall config copy from existing customized config and set enabled to true forcely

* Make manualInstall config enable decided by InternalAppWatcher.isDebuggableBuild | 2020-02-04 03:30:50 | 00604fce8f86e3b8a9fe4ea2ea0e71fc1a74eb28

Merge pull request #1729 from square/py/fix_text

Fix helper text | 2020-01-24 19:53:15 | 825ac6242cde0a4c0488547d03e12a8df91a5f31

Fixed compilation issue by extracting example application to debug/release folders | 2019-10-09 01:29:24 | b9f1bf88c4b0ac9f0a91cc54638899d9c6ecb8e1

fix missing toString | 2020-01-04 01:28:33 | 47bad9fec441ea462129ece0c4f1125f578ba1ec

Use "x minutes ago" format for dates (#1675)

Also fixed some of the ordering (leaks types by counts desc, leaks by date desc)

Fixes #1672 | 2019-12-16 23:56:38 | 9fae7ed497e1760abe74cf2c22535fbd51f16331

Gradle plugin that puts proguard mapping file in the apk as an asset (#1589)

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Add unit tests for copy obfuscation file task

* Add recipe describing how to use the plugin

* Add plugin usage instruction

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Rebased onto master

* Add missing test dependencies

* Use lambda function instead of a collection for plugin configuration

* Post code review fixups

* Rename according to code review suggestions

* Fix detekt warning

* Pass empty file if mapping doesn't exist

* Improved recipe

* Code review fixups

* Fix CopyObfuscationMappingFileTask tests

* Code review fixes

* Fix detekt issues

* Add plugin tests

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Rebased onto master

* Use lambda function instead of a collection for plugin configuration

* Post code review fixups

* Rename according to code review suggestions

* Fix detekt warning

* Pass empty file if mapping doesn't exist

* Improved recipe

* Code review fixups

* Fix CopyObfuscationMappingFileTask tests

* Code review fixes

* Fix detekt issues

* Add plugin tests

* Rebased onto master

* Add one more test for plugin

* Try fixing CI tests by reading $ANDROID_HOME value

* Try fixing CI tests by hardcoding android sdk path

* Debugging CI failing test

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Post review fixes

* Debugging failing test on CI

* Try fixing CI tests by hardcoding android sdk path

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debug failing test on CI

* Debug failing test on CI

* Debug failing test on CI

* Debug failing test on CI

* Debug failing test on CI

* Debug failing test on CI

* Use trusty dist in travis config

* Debug failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debug failing CI test

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Prevent GradleRunner from running builds in a separate process

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* sni: modernize travis script. Solve emulator issue.
The build now uses build tools 28 which requires little adjustments
from the original recipe. In the future we can just use the original recipe
Original recipe: https://docs.travis-ci.com/user/languages/android/ | 2019-12-10 06:48:02 | 25a10fcd9f405235de63bd791ea4ae4eb5453924

Fix emulators  (#1667)

* Revert "Fix travis (#1665)"

This reverts commit 00b9bd32d535022800153f34916d4c4667d2a5cd.

* Fix emulators

A recent emulator update breaks a few CI projects.  This PR applies
a fix suggested by Google.

https://issuetracker.google.com/issues/145622251#comment33 | 2019-12-10 05:43:06 | b678e1508e9ef3618ce2c44d44ff733f350d4185

Fix travis (#1665)

According to [this tweet](https://twitter.com/colinwhi/status/1204102384458194944) from @colinrtwhite, Travis is failing due to a bug in the most recent version of the emulator. Pinning the emulator to an older version works around it. This commit steals the fix from https://github.com/coil-kt/coil/pull/195 . | 2019-12-09 19:54:40 | 00b9bd32d535022800153f34916d4c4667d2a5cd

Add ability to customize class used to detect tests (#1654)

Developers should not ship JUnit in their app, even in debug. However, some debug libraries unfortunately ship with JUnit as a dependency (e.g. see https://github.com/square/okhttp/issues/4667).

Developers can change the default to target a different class (e.g assertj) to help LeakCanary detect unit tests, by overriding a public string:

```
  <string name="leak_canary_test_class_name">org.assertj.core.api.Assertions</string>
```

Fixes #1649 | 2019-12-03 02:35:07 | dbbb969d59b066c3f9197ebc3863cc4f54dae5d2

fix changelog | 2019-11-25 19:32:41 | 50ae3ba7558e5a3f83fc11b4d17a281f072ff078

Fix bug in handling JNI roots (#1636)

* When adding support for native reference leaks (879ab7c) there was a missing bracket in an if/else branch that led to all native gc roots being ignored.

Fixes #1634 | 2019-11-25 19:00:23 | aff338544b5eebbb0b3c792c628cca11fa888373

fix typos | 2019-11-19 03:58:07 | 25b0df0da4f6e93dedcd90342c9cd1d0eab080ed

Merge pull request #1596 from fernandospr/patch-1

Update blog-articles.md | 2019-10-04 16:35:24 | e65236dae7c5827b7c9f64c19c8b1a16ea19e5a7

Merge pull request #1598 from PaulWoitaschek/patch-1

Fixed the german string placeholder for sharing the heap dump | 2019-10-03 16:16:23 | 029f28eefd7aa966520ac3649fd2688732c02867

Fix crash when pressing home from root screen (#1578)

This bug only happens on older Android devices.

Fixes #1555 | 2019-09-11 01:51:06 | 274f58f96e8de7dcd3000c06ba3e2b50e427747d

Merge pull request #1559 from bric3/fix-primitive-array-dump-skip

Fixes the primitive array dump record skipping | 2019-09-09 22:16:57 | c0fd4d812cb8d6c5723231e501c121da2af86f06

Parsing and applying proguard mapping during heap analysis (#1542)

* Parsing and applying proguard mapping during heap analysis

* Parsing and applying proguard mapping during heap analysis

* Rebased onto master

* Post review changes and updated shark-cli to support mapping files

* Post review fixes

* Moving proguard mapping reader out of the analyzer and formatting fixes | 2019-08-30 16:54:20 | 66182a52069d9be59d0af6220aa9afd74218aa9b

fix images | 2019-08-27 20:02:50 | 8f5030e9faa8690217e1bd436274a3de5b9d3fb3

fix image links in docs | 2019-08-27 19:59:20 | edca56a947278508350bfa5dd33d3fa10699001f

Merge pull request #1549 from Armaxis/patch-1

Added section about using Detekt to Contributing | 2019-08-24 22:16:26 | c923d14909888860a99d5899af17f5b52c9b000f

Revert "Replaced accessor with a call to setter to fix the build issue"

This reverts commit 82db0398 | 2019-08-17 02:21:08 | c570cb9b0fd7bd7fcc88c4d3b529df8837e98fdc

Replaced accessor with a call to setter to fix the build issue | 2019-08-16 04:32:25 | 82db039843303044f91d36ba7c43595ab59bacd5

fix typo | 2019-08-02 15:31:17 | a2452f61e78e689efb59adaf71384d74447578b0

Add / fix android inspectors (#1491)

* Added MortarScope and ViewRootImpl inspectors
* Fixed the ContextWrapper inspector

Fixes #1490
Fixes #1389 | 2019-07-25 22:50:48 | 915f8359690a016a09e66608a041454b9c8c52cb

Documenting public APIs (#1476)

Also fixed naming and other things that weren't right.

Fixes #1474 | 2019-07-19 06:57:25 | 41c69a5d424b4236114c5ce1b077afdad38e57a5

Adding CLI for LeakCanary (#1456)

Example usage:
```
./gradlew leakcanary-cli:run --args='analyze-process com.example.leakcanary'

./gradlew leakcanary-cli:run --args='dump-process com.example.leakcanary'

./gradlew leakcanary-cli:run --args='analyze-file /path/to/heapdump.hprof'
```

Also fixed a bug in ShortestPathFinder which did not ignore null references in object arrays | 2019-07-11 19:11:30 | eded1c96e84f37393857ba4de2580aec784b2391

Behavior change & bugfixes for retained count notification (#1433)

* Bugfix: when tapping the "dump heap" notification, if the GC found no retained instance we didn't use a distinct notification id to communicate that, and then soon after we'd dismiss the notification that let's the user know there is no retained instances on tap.
* Bugfix: we weren't running the GC when checking for retained instances and the count was under the threshold
* Change: we now update the notification and keep it around for 30 seconds when the count goes to 0
* Change: the "no retained instance" notification that shows on tap is identical and also auto dismisses after 30 seconds.
* Change: we're checking for retained references (and running the GC) every 2 seconds instead of 5.

Fixes #1427 | 2019-07-03 20:55:47 | 968083a915343d881bd63e40587c070fde543732

Update how to fix a leak | 2019-06-25 05:46:56 | 177e7fd12933d99eca7a526851c53e598a03bf90

Text rendering tests (#1378)

* Added test coverage for text rendering
* Fixed bug: labels were not rendered on the last node (leaking instance)
* Matched exclusions are now rendered on their own line

Fixes #1375
Fixes #1350 | 2019-06-04 09:32:11 | 1926cb1db73f9583e11c557dbf2e5d46e3896a6e

Thread name based exclusions (#1353)

* Readded support for exclusions of local variable based on thread names
* Renamed ThreadExclusion to JavaLocalExclusion
* Fixed bug: KeyedWeakReference was not always ignored because its superclass is has a weakly reachable exclusion.
* Fixed bug: all root nodes had the same visit order as the first non root enqueued item, making it possible for a non root node to be dequeued before we're done with all roots.
* Redded gc root sorting
* Added tests to cover all uncovered bugs
* Added support for parsing StackFrameRecord

Fixes #1339 | 2019-05-20 13:17:18 | 6c2ee609efda323e88a4964d31fc5a5f0532f776

Reachability => LeakStatus (#1340)

* Combined leaking information from inspectors to solving conflicts while keeping all reasons
* Made reason from view leak inspector more obvious, and added label data about internals
* Moved reachability into LeakTraceElement
* Reachability renamed to LeakNodeStatus and leaking / not leaking
* ReachabilityInspector and Labeler are now functions with type aliases

Related to #1336: should fix the crash, though it's still unclear why AppCompatButton was a gc root there. | 2019-05-07 14:56:59 | 01210bbbfaecb3bcb6057c62b2195366d3bfa4f9

Revamp notifications (#1335)

* New notification that shows the count of retained instances. Tapping it triggers a heap dump. Fixes #1325
* Notifications are now split into two channels: default for results, and low for everything else.
* New config options: LeakCanary.config.dumpHeapWhenDebugging (default false) and LeakCanary.config.retainedVisibleThreshold (default 5)
* Replaced notification int constants and timestamps with resource ids.
* Don't show background notifications in instant apps (#1197) | 2019-05-05 16:38:26 | b14d9bc9c0a87119137bc0998bdec9314186dfcf

Highlighting new leaks (#1334)

New leaks are leaks that have a leak group that doesn't exist in any prior analysis.

* The notification now reports the count of leaks, with a split of new, known, and won't fix.
* The analysis success screen shows new leaks
* Moved description prefixes to be computed rather than inserted in the DB

Fixes #1328 | 2019-05-05 09:37:38 | f9a0518d4ddd69b782b6302caa3e3039787038e4

LeakSentry can be disabled (#1332)

LeakCanary has an enabled config option. Default is on in debug builds off in release builds.

Fixes #1327 | 2019-05-04 17:52:47 | f74f60901f34c751e8b8798d626678aa6233c893

Revert "fix trailing spaces per checkstyle"

This reverts commit ff17f879ec92ec326f8b1c6b7b8d77a5266d6622. | 2019-05-04 08:04:21 | 03136ca7dc1680299d710f79ca885412a1564144

Add test coverage for heap analysis (#1329)

* Fixed bug when reachability inspectors conflicts (reachable should win and erase unreachable)
* Added back support for leaking instances being empty objects, strings, primitive arrays or any object that we otherwise don't follow to find shortest paths. | 2019-05-04 07:51:02 | 59558e655d537c7654c411eebfd840773a8b77c9

Introducing exclusion priority (#1317)

* Add segmented FIFO queue

Unified several queues into one segmented FIFO queue. This will enable us to add several levels of priority.

* Introducing exclusion priority

* "excludedLeak" is now known as "won't fix leak", which matches its reality better. It's a leak that is known and real yet we're not fixing.
* Exclusion.alwaysExclude is replaced with Exclusion.status, with 3 possible values: NEVER_REACHABLE, WONT_FIX_LEAK, WEAKLY_REACHABLE.
* The shortest path finder will now follow weak references after all other paths have been exhausted.
* Removed class exclusion, was confusing, replaced with less lazy approach of listing fields to exclude
* VIEWLOCATIONHOLDER_ROOT should not have been always excluded, fixed.

Fixes #1173 ... well kinda. Instead of "non leaking retained instances", LeakCanary will report weakly reachable traces. Not sure if that'll help but it's a foundation we can build on. | 2019-04-30 17:44:15 | b0eedc553995e354e2382b3378bf0348801cd3c5

AllFieldsLabeler & cleanups (#1316)

* Add new optional labeler that prints all fields (useful for debugging)
* Move deprecated AnalysisResult to perflib
* Made DefaultAnalysisResultListener an object | 2019-04-30 07:08:29 | b9ee5356db265412db39c4c341880f305fbf2c76

fix format | 2019-04-22 06:25:09 | 4a2b158913e5a9eb0d5c6fdfbf949a80fc1b2c6b

Rename default to perflib and experimental to default (#1282)

* Remove experimental from module names

* Remove experimental prefix, add perflib prefix:

* update docs | 2019-04-19 06:01:39 | 425a9f24deb72691b02cdc85f80d177c05afebc5

fix list | 2019-04-18 21:55:43 | 8e3f9d26e8d3555bf934b99ac062aabc3aba528f

fix broken master | 2019-04-10 15:00:30 | f067ae53e050c5f52f47237440a6ac7eee3ca94c

fix broken build due to typo | 2019-04-10 05:44:19 | 7d4ddb4ffe3c9b0f30a84848675452dded0d4115

Leaking information aligned below simple class name. (#1258)

Also fixed issue where extraString + exclusionString were showing after the squiggly line.

Before: 
``` 
┬
├─ java.lang.Thread
│                 Leaking: NO (it's a GC root)
│                 ↓ thread Thread.<Java Local>
│                                ~~~~~~~~~~~~~ (named 'Thread-4')
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                 Leaking: UNKNOWN
│                 ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                     ~~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) 
```
After: 
``` 
┬
├─ java.lang.Thread
│            Leaking: NO (it's a GC root)
│            ↓ thread Thread.<Java Local> (named 'Thread-4')
│                            ~~~~~~~~~~~~
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                         Leaking: UNKNOWN
│                         ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                              ~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) ``` | 2019-04-05 20:11:47 | a938855585c7cf2522ffbd143d4bb66a234eea66

Add share to Stack Overflow button when viewing a leak (#1252)

* Add share to Stack Overflow button when viewing a leak

* Add question tag, lengthen toast and fix build failure. | 2019-04-04 20:49:50 | 8724d2aaffc07904517a3b823867802ca43233ae

Check if serviceInfo.processName is null. When LeakCanary runs on a seperate process and that process for some reason does not have a assigned processName, then we will crash on a NullPointerException. Also a debug log explaining this. (#1225) | 2019-04-01 19:20:40 | 3efc43608ed71dc20b0ad1e0e80e33d15249666f

fix master broken | 2019-04-01 19:07:27 | fe42130029174681a708b7d8622412efbaf81e73

fix trailing spaces per checkstyle | 2019-03-29 22:34:58 | ff17f879ec92ec326f8b1c6b7b8d77a5266d6622

Fix GC Root bugs that missed leaks (#1168)

In Perflib, Snapshot.getGcRoots() only returns the GC roots from the first heap. Based on empirical evidence, it seems like Android has 4 heaps, and the GC Roots used to only be in the first heap, but more recent versions of Android have GC Roots in other heaps as well.

This means LeakCanary would sometimes show "No Leak Found" when there actually was a leak.

Fixes #1163 | 2019-01-10 23:32:27 | 64b6e5a41796ae1587c50c8cc860cea25f28f382

fix typo | 2018-10-17 00:43:01 | 044b1e4827bc71ec008dc3f7e43c78f58885f1e1

Fix LeakCanary toasting (#1116)

- Prior attempts to get it to work with the application context turned out to be buggy.
- This makes LeakCanary use whatever the current resumed activity is, if any.
- If there is no resumed activity, then the toast isn't displayed.

This supersedes #1080 | 2018-10-16 13:23:14 | 0e39e2eea79bc05bf7147a4074dd7163f7c401ff

fix the wrong word (#1111) | 2018-10-16 01:25:28 | 636b9b6c2b39c0c887c9ed78e904239db9bc131e

Merge pull request #1104 from IlyaGulya/bug/travis-ci-cache-fix

Fix travis caching and improve build time. | 2018-09-22 21:25:59 | 344728b906daf6d010f66bdf4ccc29ad8fedede5

Error prone 2.3.1 + suggested fix and specify version

See http://errorprone.info/bugpattern/StringSplitter | 2018-08-22 07:37:33 | a6b6960d73a1da9661f4e85254570bf5f867f954

Merge pull request #1089 from hzsweers/z/fixAnother

Quick followup to #1088 | 2018-08-22 03:15:15 | be973f5f5da6a3516aedab98e639690697617747

Merge pull request #1087 from Goddchen/patch-2

Updated german translation | 2018-08-20 13:52:47 | b43c279b3e1623c193e1dc81955527f70e93f822

Merge pull request #1063 from javmarina/patch-1

Fixed wrong versions in AndroidExcludedRefs | 2018-07-25 18:31:55 | 3b4ebe3e2571377f93e9a6976e021324502a0f78

Fixed wrong versions in AndroidExcludedRefs

Commit https://android.googlesource.com/platform/frameworks/base/+/27db46850b708070452c0ce49daf5f79503fbde6 introduced this issue. This commit was first included in Jelly Bean 4.3 (JELLY_BEAN_MR2), not Jelly Bean 4.1 (JELLY_BEAN)
Commit https://android.googlesource.com/platform/frameworks/base/+/5200e1cb07190a1f6874d72a4561064cad3ee3e0 fixes this issue and was first included in Oreo 8.0 (O). Nougat still has this memory leak. | 2018-07-24 18:24:59 | e4778b25f2c6e65ebc485d255e38586c7d45ec97

Merge pull request #1057 from square/py/ui_bug

Fix drawing of start line | 2018-07-20 22:21:19 | af96577a7d19e4df9f63d95fd9c3bfd2adcddb5d

Avoid Toast crashes

Showing a toast can crash on API 25 because the Window Manager can throw a BadTokenException when addView is called.

This change fixes it by configuring the toast manually and calling the window manager directly. This is based on https://github.com/pyricau/frenchtoast/blob/master/frenchtoast/src/main/java/frenchtoast/Mixture.java#L49 .

Fixes #844 | 2018-07-20 16:11:22 | c9ebc5cf5099c093bde5d3309b2692cb0e2016d8

Fixing setup bug | 2018-06-28 04:07:09 | 505933817cf6e2eb0dad4a78d4c7c35a072b9868

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

Behavior change & bugfixes for retained count notification

* Bugfix: when tapping the "dump heap" notification, if the GC found no retained instance we didn't use a distinct notification id to communicate that, and then soon after we'd dismiss the notification that let's the user know there is no retained instances on tap.
* Bugfix: we weren't running the GC when checking for retained instances and the count was under the threshold
* Change: we now update the notification and keep it around for 30 seconds when the count goes to 0
* Change: the "no retained instance" notification that shows on tap is identical and also auto dismisses after 30 seconds.
* Change: we're checking for retained references (and running the GC) every 2 seconds instead of 5.

Fixes #1427 | 2019-07-03 19:57:30 | ff131ba81f1afe55ab6ab54609858112490ee3c4

Update how to fix a leak | 2019-06-25 05:46:56 | 177e7fd12933d99eca7a526851c53e598a03bf90

Text rendering tests (#1378)

* Added test coverage for text rendering
* Fixed bug: labels were not rendered on the last node (leaking instance)
* Matched exclusions are now rendered on their own line

Fixes #1375
Fixes #1350 | 2019-06-04 09:32:11 | 1926cb1db73f9583e11c557dbf2e5d46e3896a6e

Thread name based exclusions (#1353)

* Readded support for exclusions of local variable based on thread names
* Renamed ThreadExclusion to JavaLocalExclusion
* Fixed bug: KeyedWeakReference was not always ignored because its superclass is has a weakly reachable exclusion.
* Fixed bug: all root nodes had the same visit order as the first non root enqueued item, making it possible for a non root node to be dequeued before we're done with all roots.
* Redded gc root sorting
* Added tests to cover all uncovered bugs
* Added support for parsing StackFrameRecord

Fixes #1339 | 2019-05-20 13:17:18 | 6c2ee609efda323e88a4964d31fc5a5f0532f776

Reachability => LeakStatus (#1340)

* Combined leaking information from inspectors to solving conflicts while keeping all reasons
* Made reason from view leak inspector more obvious, and added label data about internals
* Moved reachability into LeakTraceElement
* Reachability renamed to LeakNodeStatus and leaking / not leaking
* ReachabilityInspector and Labeler are now functions with type aliases

Related to #1336: should fix the crash, though it's still unclear why AppCompatButton was a gc root there. | 2019-05-07 14:56:59 | 01210bbbfaecb3bcb6057c62b2195366d3bfa4f9

Revamp notifications (#1335)

* New notification that shows the count of retained instances. Tapping it triggers a heap dump. Fixes #1325
* Notifications are now split into two channels: default for results, and low for everything else.
* New config options: LeakCanary.config.dumpHeapWhenDebugging (default false) and LeakCanary.config.retainedVisibleThreshold (default 5)
* Replaced notification int constants and timestamps with resource ids.
* Don't show background notifications in instant apps (#1197) | 2019-05-05 16:38:26 | b14d9bc9c0a87119137bc0998bdec9314186dfcf

Highlighting new leaks (#1334)

New leaks are leaks that have a leak group that doesn't exist in any prior analysis.

* The notification now reports the count of leaks, with a split of new, known, and won't fix.
* The analysis success screen shows new leaks
* Moved description prefixes to be computed rather than inserted in the DB

Fixes #1328 | 2019-05-05 09:37:38 | f9a0518d4ddd69b782b6302caa3e3039787038e4

LeakSentry can be disabled (#1332)

LeakCanary has an enabled config option. Default is on in debug builds off in release builds.

Fixes #1327 | 2019-05-04 17:52:47 | f74f60901f34c751e8b8798d626678aa6233c893

Revert "fix trailing spaces per checkstyle"

This reverts commit ff17f879ec92ec326f8b1c6b7b8d77a5266d6622. | 2019-05-04 08:04:21 | 03136ca7dc1680299d710f79ca885412a1564144

Add test coverage for heap analysis (#1329)

* Fixed bug when reachability inspectors conflicts (reachable should win and erase unreachable)
* Added back support for leaking instances being empty objects, strings, primitive arrays or any object that we otherwise don't follow to find shortest paths. | 2019-05-04 07:51:02 | 59558e655d537c7654c411eebfd840773a8b77c9

Introducing exclusion priority (#1317)

* Add segmented FIFO queue

Unified several queues into one segmented FIFO queue. This will enable us to add several levels of priority.

* Introducing exclusion priority

* "excludedLeak" is now known as "won't fix leak", which matches its reality better. It's a leak that is known and real yet we're not fixing.
* Exclusion.alwaysExclude is replaced with Exclusion.status, with 3 possible values: NEVER_REACHABLE, WONT_FIX_LEAK, WEAKLY_REACHABLE.
* The shortest path finder will now follow weak references after all other paths have been exhausted.
* Removed class exclusion, was confusing, replaced with less lazy approach of listing fields to exclude
* VIEWLOCATIONHOLDER_ROOT should not have been always excluded, fixed.

Fixes #1173 ... well kinda. Instead of "non leaking retained instances", LeakCanary will report weakly reachable traces. Not sure if that'll help but it's a foundation we can build on. | 2019-04-30 17:44:15 | b0eedc553995e354e2382b3378bf0348801cd3c5

AllFieldsLabeler & cleanups (#1316)

* Add new optional labeler that prints all fields (useful for debugging)
* Move deprecated AnalysisResult to perflib
* Made DefaultAnalysisResultListener an object | 2019-04-30 07:08:29 | b9ee5356db265412db39c4c341880f305fbf2c76

fix format | 2019-04-22 06:25:09 | 4a2b158913e5a9eb0d5c6fdfbf949a80fc1b2c6b

Rename default to perflib and experimental to default (#1282)

* Remove experimental from module names

* Remove experimental prefix, add perflib prefix:

* update docs | 2019-04-19 06:01:39 | 425a9f24deb72691b02cdc85f80d177c05afebc5

fix list | 2019-04-18 21:55:43 | 8e3f9d26e8d3555bf934b99ac062aabc3aba528f

fix broken master | 2019-04-10 15:00:30 | f067ae53e050c5f52f47237440a6ac7eee3ca94c

fix broken build due to typo | 2019-04-10 05:44:19 | 7d4ddb4ffe3c9b0f30a84848675452dded0d4115

Leaking information aligned below simple class name. (#1258)

Also fixed issue where extraString + exclusionString were showing after the squiggly line.

Before: 
``` 
┬
├─ java.lang.Thread
│                 Leaking: NO (it's a GC root)
│                 ↓ thread Thread.<Java Local>
│                                ~~~~~~~~~~~~~ (named 'Thread-4')
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                 Leaking: UNKNOWN
│                 ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                     ~~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) 
```
After: 
``` 
┬
├─ java.lang.Thread
│            Leaking: NO (it's a GC root)
│            ↓ thread Thread.<Java Local> (named 'Thread-4')
│                            ~~~~~~~~~~~~
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                         Leaking: UNKNOWN
│                         ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                              ~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) ``` | 2019-04-05 20:11:47 | a938855585c7cf2522ffbd143d4bb66a234eea66

Add share to Stack Overflow button when viewing a leak (#1252)

* Add share to Stack Overflow button when viewing a leak

* Add question tag, lengthen toast and fix build failure. | 2019-04-04 20:49:50 | 8724d2aaffc07904517a3b823867802ca43233ae

Check if serviceInfo.processName is null. When LeakCanary runs on a seperate process and that process for some reason does not have a assigned processName, then we will crash on a NullPointerException. Also a debug log explaining this. (#1225) | 2019-04-01 19:20:40 | 3efc43608ed71dc20b0ad1e0e80e33d15249666f

fix master broken | 2019-04-01 19:07:27 | fe42130029174681a708b7d8622412efbaf81e73

fix trailing spaces per checkstyle | 2019-03-29 22:34:58 | ff17f879ec92ec326f8b1c6b7b8d77a5266d6622

Fix GC Root bugs that missed leaks (#1168)

In Perflib, Snapshot.getGcRoots() only returns the GC roots from the first heap. Based on empirical evidence, it seems like Android has 4 heaps, and the GC Roots used to only be in the first heap, but more recent versions of Android have GC Roots in other heaps as well.

This means LeakCanary would sometimes show "No Leak Found" when there actually was a leak.

Fixes #1163 | 2019-01-10 23:32:27 | 64b6e5a41796ae1587c50c8cc860cea25f28f382

fix typo | 2018-10-17 00:43:01 | 044b1e4827bc71ec008dc3f7e43c78f58885f1e1

Fix LeakCanary toasting (#1116)

- Prior attempts to get it to work with the application context turned out to be buggy.
- This makes LeakCanary use whatever the current resumed activity is, if any.
- If there is no resumed activity, then the toast isn't displayed.

This supersedes #1080 | 2018-10-16 13:23:14 | 0e39e2eea79bc05bf7147a4074dd7163f7c401ff

fix the wrong word (#1111) | 2018-10-16 01:25:28 | 636b9b6c2b39c0c887c9ed78e904239db9bc131e

Merge pull request #1104 from IlyaGulya/bug/travis-ci-cache-fix

Fix travis caching and improve build time. | 2018-09-22 21:25:59 | 344728b906daf6d010f66bdf4ccc29ad8fedede5

Error prone 2.3.1 + suggested fix and specify version

See http://errorprone.info/bugpattern/StringSplitter | 2018-08-22 07:37:33 | a6b6960d73a1da9661f4e85254570bf5f867f954

Merge pull request #1089 from hzsweers/z/fixAnother

Quick followup to #1088 | 2018-08-22 03:15:15 | be973f5f5da6a3516aedab98e639690697617747

Merge pull request #1087 from Goddchen/patch-2

Updated german translation | 2018-08-20 13:52:47 | b43c279b3e1623c193e1dc81955527f70e93f822

Merge pull request #1063 from javmarina/patch-1

Fixed wrong versions in AndroidExcludedRefs | 2018-07-25 18:31:55 | 3b4ebe3e2571377f93e9a6976e021324502a0f78

Fixed wrong versions in AndroidExcludedRefs

Commit https://android.googlesource.com/platform/frameworks/base/+/27db46850b708070452c0ce49daf5f79503fbde6 introduced this issue. This commit was first included in Jelly Bean 4.3 (JELLY_BEAN_MR2), not Jelly Bean 4.1 (JELLY_BEAN)
Commit https://android.googlesource.com/platform/frameworks/base/+/5200e1cb07190a1f6874d72a4561064cad3ee3e0 fixes this issue and was first included in Oreo 8.0 (O). Nougat still has this memory leak. | 2018-07-24 18:24:59 | e4778b25f2c6e65ebc485d255e38586c7d45ec97

Merge pull request #1057 from square/py/ui_bug

Fix drawing of start line | 2018-07-20 22:21:19 | af96577a7d19e4df9f63d95fd9c3bfd2adcddb5d

Avoid Toast crashes

Showing a toast can crash on API 25 because the Window Manager can throw a BadTokenException when addView is called.

This change fixes it by configuring the toast manually and calling the window manager directly. This is based on https://github.com/pyricau/frenchtoast/blob/master/frenchtoast/src/main/java/frenchtoast/Mixture.java#L49 .

Fixes #844 | 2018-07-20 16:11:22 | c9ebc5cf5099c093bde5d3309b2692cb0e2016d8

Fixing setup bug | 2018-06-28 04:07:09 | 505933817cf6e2eb0dad4a78d4c7c35a072b9868

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

Parsing and applying proguard mapping during heap analysis (#1542)

* Parsing and applying proguard mapping during heap analysis

* Parsing and applying proguard mapping during heap analysis

* Rebased onto master

* Post review changes and updated shark-cli to support mapping files

* Post review fixes

* Moving proguard mapping reader out of the analyzer and formatting fixes | 2019-08-30 16:54:20 | 66182a52069d9be59d0af6220aa9afd74218aa9b

fix images | 2019-08-27 20:02:50 | 8f5030e9faa8690217e1bd436274a3de5b9d3fb3

fix image links in docs | 2019-08-27 19:59:20 | edca56a947278508350bfa5dd33d3fa10699001f

Merge pull request #1549 from Armaxis/patch-1

Added section about using Detekt to Contributing | 2019-08-24 22:16:26 | c923d14909888860a99d5899af17f5b52c9b000f

Revert "Replaced accessor with a call to setter to fix the build issue"

This reverts commit 82db0398 | 2019-08-17 02:21:08 | c570cb9b0fd7bd7fcc88c4d3b529df8837e98fdc

Replaced accessor with a call to setter to fix the build issue | 2019-08-16 04:32:25 | 82db039843303044f91d36ba7c43595ab59bacd5

fix typo | 2019-08-02 15:31:17 | a2452f61e78e689efb59adaf71384d74447578b0

Add / fix android inspectors (#1491)

* Added MortarScope and ViewRootImpl inspectors
* Fixed the ContextWrapper inspector

Fixes #1490
Fixes #1389 | 2019-07-25 22:50:48 | 915f8359690a016a09e66608a041454b9c8c52cb

Documenting public APIs (#1476)

Also fixed naming and other things that weren't right.

Fixes #1474 | 2019-07-19 06:57:25 | 41c69a5d424b4236114c5ce1b077afdad38e57a5

Adding CLI for LeakCanary (#1456)

Example usage:
```
./gradlew leakcanary-cli:run --args='analyze-process com.example.leakcanary'

./gradlew leakcanary-cli:run --args='dump-process com.example.leakcanary'

./gradlew leakcanary-cli:run --args='analyze-file /path/to/heapdump.hprof'
```

Also fixed a bug in ShortestPathFinder which did not ignore null references in object arrays | 2019-07-11 19:11:30 | eded1c96e84f37393857ba4de2580aec784b2391

Behavior change & bugfixes for retained count notification (#1433)

* Bugfix: when tapping the "dump heap" notification, if the GC found no retained instance we didn't use a distinct notification id to communicate that, and then soon after we'd dismiss the notification that let's the user know there is no retained instances on tap.
* Bugfix: we weren't running the GC when checking for retained instances and the count was under the threshold
* Change: we now update the notification and keep it around for 30 seconds when the count goes to 0
* Change: the "no retained instance" notification that shows on tap is identical and also auto dismisses after 30 seconds.
* Change: we're checking for retained references (and running the GC) every 2 seconds instead of 5.

Fixes #1427 | 2019-07-03 20:55:47 | 968083a915343d881bd63e40587c070fde543732

Update how to fix a leak | 2019-06-25 05:46:56 | 177e7fd12933d99eca7a526851c53e598a03bf90

Text rendering tests (#1378)

* Added test coverage for text rendering
* Fixed bug: labels were not rendered on the last node (leaking instance)
* Matched exclusions are now rendered on their own line

Fixes #1375
Fixes #1350 | 2019-06-04 09:32:11 | 1926cb1db73f9583e11c557dbf2e5d46e3896a6e

Thread name based exclusions (#1353)

* Readded support for exclusions of local variable based on thread names
* Renamed ThreadExclusion to JavaLocalExclusion
* Fixed bug: KeyedWeakReference was not always ignored because its superclass is has a weakly reachable exclusion.
* Fixed bug: all root nodes had the same visit order as the first non root enqueued item, making it possible for a non root node to be dequeued before we're done with all roots.
* Redded gc root sorting
* Added tests to cover all uncovered bugs
* Added support for parsing StackFrameRecord

Fixes #1339 | 2019-05-20 13:17:18 | 6c2ee609efda323e88a4964d31fc5a5f0532f776

Reachability => LeakStatus (#1340)

* Combined leaking information from inspectors to solving conflicts while keeping all reasons
* Made reason from view leak inspector more obvious, and added label data about internals
* Moved reachability into LeakTraceElement
* Reachability renamed to LeakNodeStatus and leaking / not leaking
* ReachabilityInspector and Labeler are now functions with type aliases

Related to #1336: should fix the crash, though it's still unclear why AppCompatButton was a gc root there. | 2019-05-07 14:56:59 | 01210bbbfaecb3bcb6057c62b2195366d3bfa4f9

Revamp notifications (#1335)

* New notification that shows the count of retained instances. Tapping it triggers a heap dump. Fixes #1325
* Notifications are now split into two channels: default for results, and low for everything else.
* New config options: LeakCanary.config.dumpHeapWhenDebugging (default false) and LeakCanary.config.retainedVisibleThreshold (default 5)
* Replaced notification int constants and timestamps with resource ids.
* Don't show background notifications in instant apps (#1197) | 2019-05-05 16:38:26 | b14d9bc9c0a87119137bc0998bdec9314186dfcf

Highlighting new leaks (#1334)

New leaks are leaks that have a leak group that doesn't exist in any prior analysis.

* The notification now reports the count of leaks, with a split of new, known, and won't fix.
* The analysis success screen shows new leaks
* Moved description prefixes to be computed rather than inserted in the DB

Fixes #1328 | 2019-05-05 09:37:38 | f9a0518d4ddd69b782b6302caa3e3039787038e4

LeakSentry can be disabled (#1332)

LeakCanary has an enabled config option. Default is on in debug builds off in release builds.

Fixes #1327 | 2019-05-04 17:52:47 | f74f60901f34c751e8b8798d626678aa6233c893

Revert "fix trailing spaces per checkstyle"

This reverts commit ff17f879ec92ec326f8b1c6b7b8d77a5266d6622. | 2019-05-04 08:04:21 | 03136ca7dc1680299d710f79ca885412a1564144

Add test coverage for heap analysis (#1329)

* Fixed bug when reachability inspectors conflicts (reachable should win and erase unreachable)
* Added back support for leaking instances being empty objects, strings, primitive arrays or any object that we otherwise don't follow to find shortest paths. | 2019-05-04 07:51:02 | 59558e655d537c7654c411eebfd840773a8b77c9

Introducing exclusion priority (#1317)

* Add segmented FIFO queue

Unified several queues into one segmented FIFO queue. This will enable us to add several levels of priority.

* Introducing exclusion priority

* "excludedLeak" is now known as "won't fix leak", which matches its reality better. It's a leak that is known and real yet we're not fixing.
* Exclusion.alwaysExclude is replaced with Exclusion.status, with 3 possible values: NEVER_REACHABLE, WONT_FIX_LEAK, WEAKLY_REACHABLE.
* The shortest path finder will now follow weak references after all other paths have been exhausted.
* Removed class exclusion, was confusing, replaced with less lazy approach of listing fields to exclude
* VIEWLOCATIONHOLDER_ROOT should not have been always excluded, fixed.

Fixes #1173 ... well kinda. Instead of "non leaking retained instances", LeakCanary will report weakly reachable traces. Not sure if that'll help but it's a foundation we can build on. | 2019-04-30 17:44:15 | b0eedc553995e354e2382b3378bf0348801cd3c5

AllFieldsLabeler & cleanups (#1316)

* Add new optional labeler that prints all fields (useful for debugging)
* Move deprecated AnalysisResult to perflib
* Made DefaultAnalysisResultListener an object | 2019-04-30 07:08:29 | b9ee5356db265412db39c4c341880f305fbf2c76

fix format | 2019-04-22 06:25:09 | 4a2b158913e5a9eb0d5c6fdfbf949a80fc1b2c6b

Rename default to perflib and experimental to default (#1282)

* Remove experimental from module names

* Remove experimental prefix, add perflib prefix:

* update docs | 2019-04-19 06:01:39 | 425a9f24deb72691b02cdc85f80d177c05afebc5

fix list | 2019-04-18 21:55:43 | 8e3f9d26e8d3555bf934b99ac062aabc3aba528f

fix broken master | 2019-04-10 15:00:30 | f067ae53e050c5f52f47237440a6ac7eee3ca94c

fix broken build due to typo | 2019-04-10 05:44:19 | 7d4ddb4ffe3c9b0f30a84848675452dded0d4115

Leaking information aligned below simple class name. (#1258)

Also fixed issue where extraString + exclusionString were showing after the squiggly line.

Before: 
``` 
┬
├─ java.lang.Thread
│                 Leaking: NO (it's a GC root)
│                 ↓ thread Thread.<Java Local>
│                                ~~~~~~~~~~~~~ (named 'Thread-4')
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                 Leaking: UNKNOWN
│                 ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                     ~~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) 
```
After: 
``` 
┬
├─ java.lang.Thread
│            Leaking: NO (it's a GC root)
│            ↓ thread Thread.<Java Local> (named 'Thread-4')
│                            ~~~~~~~~~~~~
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                         Leaking: UNKNOWN
│                         ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                              ~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) ``` | 2019-04-05 20:11:47 | a938855585c7cf2522ffbd143d4bb66a234eea66

Add share to Stack Overflow button when viewing a leak (#1252)

* Add share to Stack Overflow button when viewing a leak

* Add question tag, lengthen toast and fix build failure. | 2019-04-04 20:49:50 | 8724d2aaffc07904517a3b823867802ca43233ae

Check if serviceInfo.processName is null. When LeakCanary runs on a seperate process and that process for some reason does not have a assigned processName, then we will crash on a NullPointerException. Also a debug log explaining this. (#1225) | 2019-04-01 19:20:40 | 3efc43608ed71dc20b0ad1e0e80e33d15249666f

fix master broken | 2019-04-01 19:07:27 | fe42130029174681a708b7d8622412efbaf81e73

fix trailing spaces per checkstyle | 2019-03-29 22:34:58 | ff17f879ec92ec326f8b1c6b7b8d77a5266d6622

Fix GC Root bugs that missed leaks (#1168)

In Perflib, Snapshot.getGcRoots() only returns the GC roots from the first heap. Based on empirical evidence, it seems like Android has 4 heaps, and the GC Roots used to only be in the first heap, but more recent versions of Android have GC Roots in other heaps as well.

This means LeakCanary would sometimes show "No Leak Found" when there actually was a leak.

Fixes #1163 | 2019-01-10 23:32:27 | 64b6e5a41796ae1587c50c8cc860cea25f28f382

fix typo | 2018-10-17 00:43:01 | 044b1e4827bc71ec008dc3f7e43c78f58885f1e1

Fix LeakCanary toasting (#1116)

- Prior attempts to get it to work with the application context turned out to be buggy.
- This makes LeakCanary use whatever the current resumed activity is, if any.
- If there is no resumed activity, then the toast isn't displayed.

This supersedes #1080 | 2018-10-16 13:23:14 | 0e39e2eea79bc05bf7147a4074dd7163f7c401ff

fix the wrong word (#1111) | 2018-10-16 01:25:28 | 636b9b6c2b39c0c887c9ed78e904239db9bc131e

Merge pull request #1104 from IlyaGulya/bug/travis-ci-cache-fix

Fix travis caching and improve build time. | 2018-09-22 21:25:59 | 344728b906daf6d010f66bdf4ccc29ad8fedede5

Error prone 2.3.1 + suggested fix and specify version

See http://errorprone.info/bugpattern/StringSplitter | 2018-08-22 07:37:33 | a6b6960d73a1da9661f4e85254570bf5f867f954

Merge pull request #1089 from hzsweers/z/fixAnother

Quick followup to #1088 | 2018-08-22 03:15:15 | be973f5f5da6a3516aedab98e639690697617747

Merge pull request #1087 from Goddchen/patch-2

Updated german translation | 2018-08-20 13:52:47 | b43c279b3e1623c193e1dc81955527f70e93f822

Merge pull request #1063 from javmarina/patch-1

Fixed wrong versions in AndroidExcludedRefs | 2018-07-25 18:31:55 | 3b4ebe3e2571377f93e9a6976e021324502a0f78

Fixed wrong versions in AndroidExcludedRefs

Commit https://android.googlesource.com/platform/frameworks/base/+/27db46850b708070452c0ce49daf5f79503fbde6 introduced this issue. This commit was first included in Jelly Bean 4.3 (JELLY_BEAN_MR2), not Jelly Bean 4.1 (JELLY_BEAN)
Commit https://android.googlesource.com/platform/frameworks/base/+/5200e1cb07190a1f6874d72a4561064cad3ee3e0 fixes this issue and was first included in Oreo 8.0 (O). Nougat still has this memory leak. | 2018-07-24 18:24:59 | e4778b25f2c6e65ebc485d255e38586c7d45ec97

Merge pull request #1057 from square/py/ui_bug

Fix drawing of start line | 2018-07-20 22:21:19 | af96577a7d19e4df9f63d95fd9c3bfd2adcddb5d

Avoid Toast crashes

Showing a toast can crash on API 25 because the Window Manager can throw a BadTokenException when addView is called.

This change fixes it by configuring the toast manually and calling the window manager directly. This is based on https://github.com/pyricau/frenchtoast/blob/master/frenchtoast/src/main/java/frenchtoast/Mixture.java#L49 .

Fixes #844 | 2018-07-20 16:11:22 | c9ebc5cf5099c093bde5d3309b2692cb0e2016d8

Fixing setup bug | 2018-06-28 04:07:09 | 505933817cf6e2eb0dad4a78d4c7c35a072b9868

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

Fix LeakCanary toasting (#1116)

- Prior attempts to get it to work with the application context turned out to be buggy.
- This makes LeakCanary use whatever the current resumed activity is, if any.
- If there is no resumed activity, then the toast isn't displayed.

This supersedes #1080 | 2018-10-16 13:23:14 | 0e39e2eea79bc05bf7147a4074dd7163f7c401ff

fix the wrong word (#1111) | 2018-10-16 01:25:28 | 636b9b6c2b39c0c887c9ed78e904239db9bc131e

Merge pull request #1104 from IlyaGulya/bug/travis-ci-cache-fix

Fix travis caching and improve build time. | 2018-09-22 21:25:59 | 344728b906daf6d010f66bdf4ccc29ad8fedede5

Error prone 2.3.1 + suggested fix and specify version

See http://errorprone.info/bugpattern/StringSplitter | 2018-08-22 07:37:33 | a6b6960d73a1da9661f4e85254570bf5f867f954

Merge pull request #1089 from hzsweers/z/fixAnother

Quick followup to #1088 | 2018-08-22 03:15:15 | be973f5f5da6a3516aedab98e639690697617747

Merge pull request #1087 from Goddchen/patch-2

Updated german translation | 2018-08-20 13:52:47 | b43c279b3e1623c193e1dc81955527f70e93f822

Merge pull request #1063 from javmarina/patch-1

Fixed wrong versions in AndroidExcludedRefs | 2018-07-25 18:31:55 | 3b4ebe3e2571377f93e9a6976e021324502a0f78

Fixed wrong versions in AndroidExcludedRefs

Commit https://android.googlesource.com/platform/frameworks/base/+/27db46850b708070452c0ce49daf5f79503fbde6 introduced this issue. This commit was first included in Jelly Bean 4.3 (JELLY_BEAN_MR2), not Jelly Bean 4.1 (JELLY_BEAN)
Commit https://android.googlesource.com/platform/frameworks/base/+/5200e1cb07190a1f6874d72a4561064cad3ee3e0 fixes this issue and was first included in Oreo 8.0 (O). Nougat still has this memory leak. | 2018-07-24 18:24:59 | e4778b25f2c6e65ebc485d255e38586c7d45ec97

Merge pull request #1057 from square/py/ui_bug

Fix drawing of start line | 2018-07-20 22:21:19 | af96577a7d19e4df9f63d95fd9c3bfd2adcddb5d

Avoid Toast crashes

Showing a toast can crash on API 25 because the Window Manager can throw a BadTokenException when addView is called.

This change fixes it by configuring the toast manually and calling the window manager directly. This is based on https://github.com/pyricau/frenchtoast/blob/master/frenchtoast/src/main/java/frenchtoast/Mixture.java#L49 .

Fixes #844 | 2018-07-20 16:11:22 | c9ebc5cf5099c093bde5d3309b2692cb0e2016d8

Fixing setup bug | 2018-06-28 04:07:09 | 505933817cf6e2eb0dad4a78d4c7c35a072b9868

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

Update fundamentals-fixing-a-memory-leak.md (#1775)

Fixed typo in  fundamentals-fixing-a-memory-leak.md | 2020-03-16 17:56:58 | 7e8aab836e57ce9c3fcff537f3df66542939137a

Doc fixes and updates (#1744)

* Fixes to properly render recipes in MkDoc

* Bumped release date
Updated release doc | 2020-02-06 18:00:48 | 57057c636b816cd73f9b344a4201aa04a3a8cca8

[bugfix]AppWatcher manualInstall function not works bugfix (#1734)

* manualInstall config not enabled by default bugfix

* Make manualInstall config enable decided by isDebuggableBuild

* Make manualInstall config copy from existing customized config

* Make manualInstall config copy from existing customized config and set enabled to true forcely

* Make manualInstall config enable decided by InternalAppWatcher.isDebuggableBuild | 2020-02-04 03:30:50 | 00604fce8f86e3b8a9fe4ea2ea0e71fc1a74eb28

Merge pull request #1729 from square/py/fix_text

Fix helper text | 2020-01-24 19:53:15 | 825ac6242cde0a4c0488547d03e12a8df91a5f31

Fixed compilation issue by extracting example application to debug/release folders | 2019-10-09 01:29:24 | b9f1bf88c4b0ac9f0a91cc54638899d9c6ecb8e1

fix missing toString | 2020-01-04 01:28:33 | 47bad9fec441ea462129ece0c4f1125f578ba1ec

Use "x minutes ago" format for dates (#1675)

Also fixed some of the ordering (leaks types by counts desc, leaks by date desc)

Fixes #1672 | 2019-12-16 23:56:38 | 9fae7ed497e1760abe74cf2c22535fbd51f16331

Gradle plugin that puts proguard mapping file in the apk as an asset (#1589)

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Add unit tests for copy obfuscation file task

* Add recipe describing how to use the plugin

* Add plugin usage instruction

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Rebased onto master

* Add missing test dependencies

* Use lambda function instead of a collection for plugin configuration

* Post code review fixups

* Rename according to code review suggestions

* Fix detekt warning

* Pass empty file if mapping doesn't exist

* Improved recipe

* Code review fixups

* Fix CopyObfuscationMappingFileTask tests

* Code review fixes

* Fix detekt issues

* Add plugin tests

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Rebased onto master

* Use lambda function instead of a collection for plugin configuration

* Post code review fixups

* Rename according to code review suggestions

* Fix detekt warning

* Pass empty file if mapping doesn't exist

* Improved recipe

* Code review fixups

* Fix CopyObfuscationMappingFileTask tests

* Code review fixes

* Fix detekt issues

* Add plugin tests

* Rebased onto master

* Add one more test for plugin

* Try fixing CI tests by reading $ANDROID_HOME value

* Try fixing CI tests by hardcoding android sdk path

* Debugging CI failing test

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Post review fixes

* Debugging failing test on CI

* Try fixing CI tests by hardcoding android sdk path

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debug failing test on CI

* Debug failing test on CI

* Debug failing test on CI

* Debug failing test on CI

* Debug failing test on CI

* Debug failing test on CI

* Use trusty dist in travis config

* Debug failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debug failing CI test

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Prevent GradleRunner from running builds in a separate process

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* sni: modernize travis script. Solve emulator issue.
The build now uses build tools 28 which requires little adjustments
from the original recipe. In the future we can just use the original recipe
Original recipe: https://docs.travis-ci.com/user/languages/android/ | 2019-12-10 06:48:02 | 25a10fcd9f405235de63bd791ea4ae4eb5453924

Fix emulators  (#1667)

* Revert "Fix travis (#1665)"

This reverts commit 00b9bd32d535022800153f34916d4c4667d2a5cd.

* Fix emulators

A recent emulator update breaks a few CI projects.  This PR applies
a fix suggested by Google.

https://issuetracker.google.com/issues/145622251#comment33 | 2019-12-10 05:43:06 | b678e1508e9ef3618ce2c44d44ff733f350d4185

Fix travis (#1665)

According to [this tweet](https://twitter.com/colinwhi/status/1204102384458194944) from @colinrtwhite, Travis is failing due to a bug in the most recent version of the emulator. Pinning the emulator to an older version works around it. This commit steals the fix from https://github.com/coil-kt/coil/pull/195 . | 2019-12-09 19:54:40 | 00b9bd32d535022800153f34916d4c4667d2a5cd

Add ability to customize class used to detect tests (#1654)

Developers should not ship JUnit in their app, even in debug. However, some debug libraries unfortunately ship with JUnit as a dependency (e.g. see https://github.com/square/okhttp/issues/4667).

Developers can change the default to target a different class (e.g assertj) to help LeakCanary detect unit tests, by overriding a public string:

```
  <string name="leak_canary_test_class_name">org.assertj.core.api.Assertions</string>
```

Fixes #1649 | 2019-12-03 02:35:07 | dbbb969d59b066c3f9197ebc3863cc4f54dae5d2

fix changelog | 2019-11-25 19:32:41 | 50ae3ba7558e5a3f83fc11b4d17a281f072ff078

Fix bug in handling JNI roots (#1636)

* When adding support for native reference leaks (879ab7c) there was a missing bracket in an if/else branch that led to all native gc roots being ignored.

Fixes #1634 | 2019-11-25 19:00:23 | aff338544b5eebbb0b3c792c628cca11fa888373

fix typos | 2019-11-19 03:58:07 | 25b0df0da4f6e93dedcd90342c9cd1d0eab080ed

Merge pull request #1596 from fernandospr/patch-1

Update blog-articles.md | 2019-10-04 16:35:24 | e65236dae7c5827b7c9f64c19c8b1a16ea19e5a7

Merge pull request #1598 from PaulWoitaschek/patch-1

Fixed the german string placeholder for sharing the heap dump | 2019-10-03 16:16:23 | 029f28eefd7aa966520ac3649fd2688732c02867

Fix crash when pressing home from root screen (#1578)

This bug only happens on older Android devices.

Fixes #1555 | 2019-09-11 01:51:06 | 274f58f96e8de7dcd3000c06ba3e2b50e427747d

Merge pull request #1559 from bric3/fix-primitive-array-dump-skip

Fixes the primitive array dump record skipping | 2019-09-09 22:16:57 | c0fd4d812cb8d6c5723231e501c121da2af86f06

Parsing and applying proguard mapping during heap analysis (#1542)

* Parsing and applying proguard mapping during heap analysis

* Parsing and applying proguard mapping during heap analysis

* Rebased onto master

* Post review changes and updated shark-cli to support mapping files

* Post review fixes

* Moving proguard mapping reader out of the analyzer and formatting fixes | 2019-08-30 16:54:20 | 66182a52069d9be59d0af6220aa9afd74218aa9b

fix images | 2019-08-27 20:02:50 | 8f5030e9faa8690217e1bd436274a3de5b9d3fb3

fix image links in docs | 2019-08-27 19:59:20 | edca56a947278508350bfa5dd33d3fa10699001f

Merge pull request #1549 from Armaxis/patch-1

Added section about using Detekt to Contributing | 2019-08-24 22:16:26 | c923d14909888860a99d5899af17f5b52c9b000f

Revert "Replaced accessor with a call to setter to fix the build issue"

This reverts commit 82db0398 | 2019-08-17 02:21:08 | c570cb9b0fd7bd7fcc88c4d3b529df8837e98fdc

Replaced accessor with a call to setter to fix the build issue | 2019-08-16 04:32:25 | 82db039843303044f91d36ba7c43595ab59bacd5

fix typo | 2019-08-02 15:31:17 | a2452f61e78e689efb59adaf71384d74447578b0

Add / fix android inspectors (#1491)

* Added MortarScope and ViewRootImpl inspectors
* Fixed the ContextWrapper inspector

Fixes #1490
Fixes #1389 | 2019-07-25 22:50:48 | 915f8359690a016a09e66608a041454b9c8c52cb

Documenting public APIs (#1476)

Also fixed naming and other things that weren't right.

Fixes #1474 | 2019-07-19 06:57:25 | 41c69a5d424b4236114c5ce1b077afdad38e57a5

Adding CLI for LeakCanary (#1456)

Example usage:
```
./gradlew leakcanary-cli:run --args='analyze-process com.example.leakcanary'

./gradlew leakcanary-cli:run --args='dump-process com.example.leakcanary'

./gradlew leakcanary-cli:run --args='analyze-file /path/to/heapdump.hprof'
```

Also fixed a bug in ShortestPathFinder which did not ignore null references in object arrays | 2019-07-11 19:11:30 | eded1c96e84f37393857ba4de2580aec784b2391

Behavior change & bugfixes for retained count notification (#1433)

* Bugfix: when tapping the "dump heap" notification, if the GC found no retained instance we didn't use a distinct notification id to communicate that, and then soon after we'd dismiss the notification that let's the user know there is no retained instances on tap.
* Bugfix: we weren't running the GC when checking for retained instances and the count was under the threshold
* Change: we now update the notification and keep it around for 30 seconds when the count goes to 0
* Change: the "no retained instance" notification that shows on tap is identical and also auto dismisses after 30 seconds.
* Change: we're checking for retained references (and running the GC) every 2 seconds instead of 5.

Fixes #1427 | 2019-07-03 20:55:47 | 968083a915343d881bd63e40587c070fde543732

Update how to fix a leak | 2019-06-25 05:46:56 | 177e7fd12933d99eca7a526851c53e598a03bf90

Text rendering tests (#1378)

* Added test coverage for text rendering
* Fixed bug: labels were not rendered on the last node (leaking instance)
* Matched exclusions are now rendered on their own line

Fixes #1375
Fixes #1350 | 2019-06-04 09:32:11 | 1926cb1db73f9583e11c557dbf2e5d46e3896a6e

Thread name based exclusions (#1353)

* Readded support for exclusions of local variable based on thread names
* Renamed ThreadExclusion to JavaLocalExclusion
* Fixed bug: KeyedWeakReference was not always ignored because its superclass is has a weakly reachable exclusion.
* Fixed bug: all root nodes had the same visit order as the first non root enqueued item, making it possible for a non root node to be dequeued before we're done with all roots.
* Redded gc root sorting
* Added tests to cover all uncovered bugs
* Added support for parsing StackFrameRecord

Fixes #1339 | 2019-05-20 13:17:18 | 6c2ee609efda323e88a4964d31fc5a5f0532f776

Reachability => LeakStatus (#1340)

* Combined leaking information from inspectors to solving conflicts while keeping all reasons
* Made reason from view leak inspector more obvious, and added label data about internals
* Moved reachability into LeakTraceElement
* Reachability renamed to LeakNodeStatus and leaking / not leaking
* ReachabilityInspector and Labeler are now functions with type aliases

Related to #1336: should fix the crash, though it's still unclear why AppCompatButton was a gc root there. | 2019-05-07 14:56:59 | 01210bbbfaecb3bcb6057c62b2195366d3bfa4f9

Revamp notifications (#1335)

* New notification that shows the count of retained instances. Tapping it triggers a heap dump. Fixes #1325
* Notifications are now split into two channels: default for results, and low for everything else.
* New config options: LeakCanary.config.dumpHeapWhenDebugging (default false) and LeakCanary.config.retainedVisibleThreshold (default 5)
* Replaced notification int constants and timestamps with resource ids.
* Don't show background notifications in instant apps (#1197) | 2019-05-05 16:38:26 | b14d9bc9c0a87119137bc0998bdec9314186dfcf

Highlighting new leaks (#1334)

New leaks are leaks that have a leak group that doesn't exist in any prior analysis.

* The notification now reports the count of leaks, with a split of new, known, and won't fix.
* The analysis success screen shows new leaks
* Moved description prefixes to be computed rather than inserted in the DB

Fixes #1328 | 2019-05-05 09:37:38 | f9a0518d4ddd69b782b6302caa3e3039787038e4

LeakSentry can be disabled (#1332)

LeakCanary has an enabled config option. Default is on in debug builds off in release builds.

Fixes #1327 | 2019-05-04 17:52:47 | f74f60901f34c751e8b8798d626678aa6233c893

Revert "fix trailing spaces per checkstyle"

This reverts commit ff17f879ec92ec326f8b1c6b7b8d77a5266d6622. | 2019-05-04 08:04:21 | 03136ca7dc1680299d710f79ca885412a1564144

Add test coverage for heap analysis (#1329)

* Fixed bug when reachability inspectors conflicts (reachable should win and erase unreachable)
* Added back support for leaking instances being empty objects, strings, primitive arrays or any object that we otherwise don't follow to find shortest paths. | 2019-05-04 07:51:02 | 59558e655d537c7654c411eebfd840773a8b77c9

Introducing exclusion priority (#1317)

* Add segmented FIFO queue

Unified several queues into one segmented FIFO queue. This will enable us to add several levels of priority.

* Introducing exclusion priority

* "excludedLeak" is now known as "won't fix leak", which matches its reality better. It's a leak that is known and real yet we're not fixing.
* Exclusion.alwaysExclude is replaced with Exclusion.status, with 3 possible values: NEVER_REACHABLE, WONT_FIX_LEAK, WEAKLY_REACHABLE.
* The shortest path finder will now follow weak references after all other paths have been exhausted.
* Removed class exclusion, was confusing, replaced with less lazy approach of listing fields to exclude
* VIEWLOCATIONHOLDER_ROOT should not have been always excluded, fixed.

Fixes #1173 ... well kinda. Instead of "non leaking retained instances", LeakCanary will report weakly reachable traces. Not sure if that'll help but it's a foundation we can build on. | 2019-04-30 17:44:15 | b0eedc553995e354e2382b3378bf0348801cd3c5

AllFieldsLabeler & cleanups (#1316)

* Add new optional labeler that prints all fields (useful for debugging)
* Move deprecated AnalysisResult to perflib
* Made DefaultAnalysisResultListener an object | 2019-04-30 07:08:29 | b9ee5356db265412db39c4c341880f305fbf2c76

fix format | 2019-04-22 06:25:09 | 4a2b158913e5a9eb0d5c6fdfbf949a80fc1b2c6b

Rename default to perflib and experimental to default (#1282)

* Remove experimental from module names

* Remove experimental prefix, add perflib prefix:

* update docs | 2019-04-19 06:01:39 | 425a9f24deb72691b02cdc85f80d177c05afebc5

fix list | 2019-04-18 21:55:43 | 8e3f9d26e8d3555bf934b99ac062aabc3aba528f

fix broken master | 2019-04-10 15:00:30 | f067ae53e050c5f52f47237440a6ac7eee3ca94c

fix broken build due to typo | 2019-04-10 05:44:19 | 7d4ddb4ffe3c9b0f30a84848675452dded0d4115

Leaking information aligned below simple class name. (#1258)

Also fixed issue where extraString + exclusionString were showing after the squiggly line.

Before: 
``` 
┬
├─ java.lang.Thread
│                 Leaking: NO (it's a GC root)
│                 ↓ thread Thread.<Java Local>
│                                ~~~~~~~~~~~~~ (named 'Thread-4')
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                 Leaking: UNKNOWN
│                 ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                     ~~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) 
```
After: 
``` 
┬
├─ java.lang.Thread
│            Leaking: NO (it's a GC root)
│            ↓ thread Thread.<Java Local> (named 'Thread-4')
│                            ~~~~~~~~~~~~
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                         Leaking: UNKNOWN
│                         ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                              ~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) ``` | 2019-04-05 20:11:47 | a938855585c7cf2522ffbd143d4bb66a234eea66

Add share to Stack Overflow button when viewing a leak (#1252)

* Add share to Stack Overflow button when viewing a leak

* Add question tag, lengthen toast and fix build failure. | 2019-04-04 20:49:50 | 8724d2aaffc07904517a3b823867802ca43233ae

Check if serviceInfo.processName is null. When LeakCanary runs on a seperate process and that process for some reason does not have a assigned processName, then we will crash on a NullPointerException. Also a debug log explaining this. (#1225) | 2019-04-01 19:20:40 | 3efc43608ed71dc20b0ad1e0e80e33d15249666f

fix master broken | 2019-04-01 19:07:27 | fe42130029174681a708b7d8622412efbaf81e73

fix trailing spaces per checkstyle | 2019-03-29 22:34:58 | ff17f879ec92ec326f8b1c6b7b8d77a5266d6622

Fix GC Root bugs that missed leaks (#1168)

In Perflib, Snapshot.getGcRoots() only returns the GC roots from the first heap. Based on empirical evidence, it seems like Android has 4 heaps, and the GC Roots used to only be in the first heap, but more recent versions of Android have GC Roots in other heaps as well.

This means LeakCanary would sometimes show "No Leak Found" when there actually was a leak.

Fixes #1163 | 2019-01-10 23:32:27 | 64b6e5a41796ae1587c50c8cc860cea25f28f382

fix typo | 2018-10-17 00:43:01 | 044b1e4827bc71ec008dc3f7e43c78f58885f1e1

Fix LeakCanary toasting (#1116)

- Prior attempts to get it to work with the application context turned out to be buggy.
- This makes LeakCanary use whatever the current resumed activity is, if any.
- If there is no resumed activity, then the toast isn't displayed.

This supersedes #1080 | 2018-10-16 13:23:14 | 0e39e2eea79bc05bf7147a4074dd7163f7c401ff

fix the wrong word (#1111) | 2018-10-16 01:25:28 | 636b9b6c2b39c0c887c9ed78e904239db9bc131e

Merge pull request #1104 from IlyaGulya/bug/travis-ci-cache-fix

Fix travis caching and improve build time. | 2018-09-22 21:25:59 | 344728b906daf6d010f66bdf4ccc29ad8fedede5

Error prone 2.3.1 + suggested fix and specify version

See http://errorprone.info/bugpattern/StringSplitter | 2018-08-22 07:37:33 | a6b6960d73a1da9661f4e85254570bf5f867f954

Merge pull request #1089 from hzsweers/z/fixAnother

Quick followup to #1088 | 2018-08-22 03:15:15 | be973f5f5da6a3516aedab98e639690697617747

Merge pull request #1087 from Goddchen/patch-2

Updated german translation | 2018-08-20 13:52:47 | b43c279b3e1623c193e1dc81955527f70e93f822

Merge pull request #1063 from javmarina/patch-1

Fixed wrong versions in AndroidExcludedRefs | 2018-07-25 18:31:55 | 3b4ebe3e2571377f93e9a6976e021324502a0f78

Fixed wrong versions in AndroidExcludedRefs

Commit https://android.googlesource.com/platform/frameworks/base/+/27db46850b708070452c0ce49daf5f79503fbde6 introduced this issue. This commit was first included in Jelly Bean 4.3 (JELLY_BEAN_MR2), not Jelly Bean 4.1 (JELLY_BEAN)
Commit https://android.googlesource.com/platform/frameworks/base/+/5200e1cb07190a1f6874d72a4561064cad3ee3e0 fixes this issue and was first included in Oreo 8.0 (O). Nougat still has this memory leak. | 2018-07-24 18:24:59 | e4778b25f2c6e65ebc485d255e38586c7d45ec97

Merge pull request #1057 from square/py/ui_bug

Fix drawing of start line | 2018-07-20 22:21:19 | af96577a7d19e4df9f63d95fd9c3bfd2adcddb5d

Avoid Toast crashes

Showing a toast can crash on API 25 because the Window Manager can throw a BadTokenException when addView is called.

This change fixes it by configuring the toast manually and calling the window manager directly. This is based on https://github.com/pyricau/frenchtoast/blob/master/frenchtoast/src/main/java/frenchtoast/Mixture.java#L49 .

Fixes #844 | 2018-07-20 16:11:22 | c9ebc5cf5099c093bde5d3309b2692cb0e2016d8

Fixing setup bug | 2018-06-28 04:07:09 | 505933817cf6e2eb0dad4a78d4c7c35a072b9868

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

fix format | 2019-04-22 06:25:09 | 4a2b158913e5a9eb0d5c6fdfbf949a80fc1b2c6b

Rename default to perflib and experimental to default (#1282)

* Remove experimental from module names

* Remove experimental prefix, add perflib prefix:

* update docs | 2019-04-19 06:01:39 | 425a9f24deb72691b02cdc85f80d177c05afebc5

fix list | 2019-04-18 21:55:43 | 8e3f9d26e8d3555bf934b99ac062aabc3aba528f

fix broken master | 2019-04-10 15:00:30 | f067ae53e050c5f52f47237440a6ac7eee3ca94c

fix broken build due to typo | 2019-04-10 05:44:19 | 7d4ddb4ffe3c9b0f30a84848675452dded0d4115

Leaking information aligned below simple class name. (#1258)

Also fixed issue where extraString + exclusionString were showing after the squiggly line.

Before: 
``` 
┬
├─ java.lang.Thread
│                 Leaking: NO (it's a GC root)
│                 ↓ thread Thread.<Java Local>
│                                ~~~~~~~~~~~~~ (named 'Thread-4')
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                 Leaking: UNKNOWN
│                 ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                     ~~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) 
```
After: 
``` 
┬
├─ java.lang.Thread
│            Leaking: NO (it's a GC root)
│            ↓ thread Thread.<Java Local> (named 'Thread-4')
│                            ~~~~~~~~~~~~
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                         Leaking: UNKNOWN
│                         ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                              ~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) ``` | 2019-04-05 20:11:47 | a938855585c7cf2522ffbd143d4bb66a234eea66

Add share to Stack Overflow button when viewing a leak (#1252)

* Add share to Stack Overflow button when viewing a leak

* Add question tag, lengthen toast and fix build failure. | 2019-04-04 20:49:50 | 8724d2aaffc07904517a3b823867802ca43233ae

Check if serviceInfo.processName is null. When LeakCanary runs on a seperate process and that process for some reason does not have a assigned processName, then we will crash on a NullPointerException. Also a debug log explaining this. (#1225) | 2019-04-01 19:20:40 | 3efc43608ed71dc20b0ad1e0e80e33d15249666f

fix master broken | 2019-04-01 19:07:27 | fe42130029174681a708b7d8622412efbaf81e73

Fix GC Root bugs that missed leaks (#1168)

In Perflib, Snapshot.getGcRoots() only returns the GC roots from the first heap. Based on empirical evidence, it seems like Android has 4 heaps, and the GC Roots used to only be in the first heap, but more recent versions of Android have GC Roots in other heaps as well.

This means LeakCanary would sometimes show "No Leak Found" when there actually was a leak.

Fixes #1163 | 2019-01-10 23:32:27 | 64b6e5a41796ae1587c50c8cc860cea25f28f382

fix typo | 2018-10-17 00:43:01 | 044b1e4827bc71ec008dc3f7e43c78f58885f1e1

Fix LeakCanary toasting (#1116)

- Prior attempts to get it to work with the application context turned out to be buggy.
- This makes LeakCanary use whatever the current resumed activity is, if any.
- If there is no resumed activity, then the toast isn't displayed.

This supersedes #1080 | 2018-10-16 13:23:14 | 0e39e2eea79bc05bf7147a4074dd7163f7c401ff

fix the wrong word (#1111) | 2018-10-16 01:25:28 | 636b9b6c2b39c0c887c9ed78e904239db9bc131e

Merge pull request #1104 from IlyaGulya/bug/travis-ci-cache-fix

Fix travis caching and improve build time. | 2018-09-22 21:25:59 | 344728b906daf6d010f66bdf4ccc29ad8fedede5

Error prone 2.3.1 + suggested fix and specify version

See http://errorprone.info/bugpattern/StringSplitter | 2018-08-22 07:37:33 | a6b6960d73a1da9661f4e85254570bf5f867f954

Merge pull request #1089 from hzsweers/z/fixAnother

Quick followup to #1088 | 2018-08-22 03:15:15 | be973f5f5da6a3516aedab98e639690697617747

Merge pull request #1087 from Goddchen/patch-2

Updated german translation | 2018-08-20 13:52:47 | b43c279b3e1623c193e1dc81955527f70e93f822

Merge pull request #1063 from javmarina/patch-1

Fixed wrong versions in AndroidExcludedRefs | 2018-07-25 18:31:55 | 3b4ebe3e2571377f93e9a6976e021324502a0f78

Fixed wrong versions in AndroidExcludedRefs

Commit https://android.googlesource.com/platform/frameworks/base/+/27db46850b708070452c0ce49daf5f79503fbde6 introduced this issue. This commit was first included in Jelly Bean 4.3 (JELLY_BEAN_MR2), not Jelly Bean 4.1 (JELLY_BEAN)
Commit https://android.googlesource.com/platform/frameworks/base/+/5200e1cb07190a1f6874d72a4561064cad3ee3e0 fixes this issue and was first included in Oreo 8.0 (O). Nougat still has this memory leak. | 2018-07-24 18:24:59 | e4778b25f2c6e65ebc485d255e38586c7d45ec97

Merge pull request #1057 from square/py/ui_bug

Fix drawing of start line | 2018-07-20 22:21:19 | af96577a7d19e4df9f63d95fd9c3bfd2adcddb5d

Avoid Toast crashes

Showing a toast can crash on API 25 because the Window Manager can throw a BadTokenException when addView is called.

This change fixes it by configuring the toast manually and calling the window manager directly. This is based on https://github.com/pyricau/frenchtoast/blob/master/frenchtoast/src/main/java/frenchtoast/Mixture.java#L49 .

Fixes #844 | 2018-07-20 16:11:22 | c9ebc5cf5099c093bde5d3309b2692cb0e2016d8

Fixing setup bug | 2018-06-28 04:07:09 | 505933817cf6e2eb0dad4a78d4c7c35a072b9868

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

Update how to fix a leak | 2019-06-25 05:46:56 | 177e7fd12933d99eca7a526851c53e598a03bf90

Text rendering tests (#1378)

* Added test coverage for text rendering
* Fixed bug: labels were not rendered on the last node (leaking instance)
* Matched exclusions are now rendered on their own line

Fixes #1375
Fixes #1350 | 2019-06-04 09:32:11 | 1926cb1db73f9583e11c557dbf2e5d46e3896a6e

Thread name based exclusions (#1353)

* Readded support for exclusions of local variable based on thread names
* Renamed ThreadExclusion to JavaLocalExclusion
* Fixed bug: KeyedWeakReference was not always ignored because its superclass is has a weakly reachable exclusion.
* Fixed bug: all root nodes had the same visit order as the first non root enqueued item, making it possible for a non root node to be dequeued before we're done with all roots.
* Redded gc root sorting
* Added tests to cover all uncovered bugs
* Added support for parsing StackFrameRecord

Fixes #1339 | 2019-05-20 13:17:18 | 6c2ee609efda323e88a4964d31fc5a5f0532f776

Reachability => LeakStatus (#1340)

* Combined leaking information from inspectors to solving conflicts while keeping all reasons
* Made reason from view leak inspector more obvious, and added label data about internals
* Moved reachability into LeakTraceElement
* Reachability renamed to LeakNodeStatus and leaking / not leaking
* ReachabilityInspector and Labeler are now functions with type aliases

Related to #1336: should fix the crash, though it's still unclear why AppCompatButton was a gc root there. | 2019-05-07 14:56:59 | 01210bbbfaecb3bcb6057c62b2195366d3bfa4f9

Revamp notifications (#1335)

* New notification that shows the count of retained instances. Tapping it triggers a heap dump. Fixes #1325
* Notifications are now split into two channels: default for results, and low for everything else.
* New config options: LeakCanary.config.dumpHeapWhenDebugging (default false) and LeakCanary.config.retainedVisibleThreshold (default 5)
* Replaced notification int constants and timestamps with resource ids.
* Don't show background notifications in instant apps (#1197) | 2019-05-05 16:38:26 | b14d9bc9c0a87119137bc0998bdec9314186dfcf

Highlighting new leaks (#1334)

New leaks are leaks that have a leak group that doesn't exist in any prior analysis.

* The notification now reports the count of leaks, with a split of new, known, and won't fix.
* The analysis success screen shows new leaks
* Moved description prefixes to be computed rather than inserted in the DB

Fixes #1328 | 2019-05-05 09:37:38 | f9a0518d4ddd69b782b6302caa3e3039787038e4

LeakSentry can be disabled (#1332)

LeakCanary has an enabled config option. Default is on in debug builds off in release builds.

Fixes #1327 | 2019-05-04 17:52:47 | f74f60901f34c751e8b8798d626678aa6233c893

Revert "fix trailing spaces per checkstyle"

This reverts commit ff17f879ec92ec326f8b1c6b7b8d77a5266d6622. | 2019-05-04 08:04:21 | 03136ca7dc1680299d710f79ca885412a1564144

Add test coverage for heap analysis (#1329)

* Fixed bug when reachability inspectors conflicts (reachable should win and erase unreachable)
* Added back support for leaking instances being empty objects, strings, primitive arrays or any object that we otherwise don't follow to find shortest paths. | 2019-05-04 07:51:02 | 59558e655d537c7654c411eebfd840773a8b77c9

Introducing exclusion priority (#1317)

* Add segmented FIFO queue

Unified several queues into one segmented FIFO queue. This will enable us to add several levels of priority.

* Introducing exclusion priority

* "excludedLeak" is now known as "won't fix leak", which matches its reality better. It's a leak that is known and real yet we're not fixing.
* Exclusion.alwaysExclude is replaced with Exclusion.status, with 3 possible values: NEVER_REACHABLE, WONT_FIX_LEAK, WEAKLY_REACHABLE.
* The shortest path finder will now follow weak references after all other paths have been exhausted.
* Removed class exclusion, was confusing, replaced with less lazy approach of listing fields to exclude
* VIEWLOCATIONHOLDER_ROOT should not have been always excluded, fixed.

Fixes #1173 ... well kinda. Instead of "non leaking retained instances", LeakCanary will report weakly reachable traces. Not sure if that'll help but it's a foundation we can build on. | 2019-04-30 17:44:15 | b0eedc553995e354e2382b3378bf0348801cd3c5

AllFieldsLabeler & cleanups (#1316)

* Add new optional labeler that prints all fields (useful for debugging)
* Move deprecated AnalysisResult to perflib
* Made DefaultAnalysisResultListener an object | 2019-04-30 07:08:29 | b9ee5356db265412db39c4c341880f305fbf2c76

fix format | 2019-04-22 06:25:09 | 4a2b158913e5a9eb0d5c6fdfbf949a80fc1b2c6b

Rename default to perflib and experimental to default (#1282)

* Remove experimental from module names

* Remove experimental prefix, add perflib prefix:

* update docs | 2019-04-19 06:01:39 | 425a9f24deb72691b02cdc85f80d177c05afebc5

fix list | 2019-04-18 21:55:43 | 8e3f9d26e8d3555bf934b99ac062aabc3aba528f

fix broken master | 2019-04-10 15:00:30 | f067ae53e050c5f52f47237440a6ac7eee3ca94c

fix broken build due to typo | 2019-04-10 05:44:19 | 7d4ddb4ffe3c9b0f30a84848675452dded0d4115

Leaking information aligned below simple class name. (#1258)

Also fixed issue where extraString + exclusionString were showing after the squiggly line.

Before: 
``` 
┬
├─ java.lang.Thread
│                 Leaking: NO (it's a GC root)
│                 ↓ thread Thread.<Java Local>
│                                ~~~~~~~~~~~~~ (named 'Thread-4')
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                 Leaking: UNKNOWN
│                 ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                     ~~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) 
```
After: 
``` 
┬
├─ java.lang.Thread
│            Leaking: NO (it's a GC root)
│            ↓ thread Thread.<Java Local> (named 'Thread-4')
│                            ~~~~~~~~~~~~
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                         Leaking: UNKNOWN
│                         ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                              ~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) ``` | 2019-04-05 20:11:47 | a938855585c7cf2522ffbd143d4bb66a234eea66

Add share to Stack Overflow button when viewing a leak (#1252)

* Add share to Stack Overflow button when viewing a leak

* Add question tag, lengthen toast and fix build failure. | 2019-04-04 20:49:50 | 8724d2aaffc07904517a3b823867802ca43233ae

Check if serviceInfo.processName is null. When LeakCanary runs on a seperate process and that process for some reason does not have a assigned processName, then we will crash on a NullPointerException. Also a debug log explaining this. (#1225) | 2019-04-01 19:20:40 | 3efc43608ed71dc20b0ad1e0e80e33d15249666f

fix master broken | 2019-04-01 19:07:27 | fe42130029174681a708b7d8622412efbaf81e73

fix trailing spaces per checkstyle | 2019-03-29 22:34:58 | ff17f879ec92ec326f8b1c6b7b8d77a5266d6622

Fix GC Root bugs that missed leaks (#1168)

In Perflib, Snapshot.getGcRoots() only returns the GC roots from the first heap. Based on empirical evidence, it seems like Android has 4 heaps, and the GC Roots used to only be in the first heap, but more recent versions of Android have GC Roots in other heaps as well.

This means LeakCanary would sometimes show "No Leak Found" when there actually was a leak.

Fixes #1163 | 2019-01-10 23:32:27 | 64b6e5a41796ae1587c50c8cc860cea25f28f382

fix typo | 2018-10-17 00:43:01 | 044b1e4827bc71ec008dc3f7e43c78f58885f1e1

Fix LeakCanary toasting (#1116)

- Prior attempts to get it to work with the application context turned out to be buggy.
- This makes LeakCanary use whatever the current resumed activity is, if any.
- If there is no resumed activity, then the toast isn't displayed.

This supersedes #1080 | 2018-10-16 13:23:14 | 0e39e2eea79bc05bf7147a4074dd7163f7c401ff

fix the wrong word (#1111) | 2018-10-16 01:25:28 | 636b9b6c2b39c0c887c9ed78e904239db9bc131e

Merge pull request #1104 from IlyaGulya/bug/travis-ci-cache-fix

Fix travis caching and improve build time. | 2018-09-22 21:25:59 | 344728b906daf6d010f66bdf4ccc29ad8fedede5

Error prone 2.3.1 + suggested fix and specify version

See http://errorprone.info/bugpattern/StringSplitter | 2018-08-22 07:37:33 | a6b6960d73a1da9661f4e85254570bf5f867f954

Merge pull request #1089 from hzsweers/z/fixAnother

Quick followup to #1088 | 2018-08-22 03:15:15 | be973f5f5da6a3516aedab98e639690697617747

Merge pull request #1087 from Goddchen/patch-2

Updated german translation | 2018-08-20 13:52:47 | b43c279b3e1623c193e1dc81955527f70e93f822

Merge pull request #1063 from javmarina/patch-1

Fixed wrong versions in AndroidExcludedRefs | 2018-07-25 18:31:55 | 3b4ebe3e2571377f93e9a6976e021324502a0f78

Fixed wrong versions in AndroidExcludedRefs

Commit https://android.googlesource.com/platform/frameworks/base/+/27db46850b708070452c0ce49daf5f79503fbde6 introduced this issue. This commit was first included in Jelly Bean 4.3 (JELLY_BEAN_MR2), not Jelly Bean 4.1 (JELLY_BEAN)
Commit https://android.googlesource.com/platform/frameworks/base/+/5200e1cb07190a1f6874d72a4561064cad3ee3e0 fixes this issue and was first included in Oreo 8.0 (O). Nougat still has this memory leak. | 2018-07-24 18:24:59 | e4778b25f2c6e65ebc485d255e38586c7d45ec97

Merge pull request #1057 from square/py/ui_bug

Fix drawing of start line | 2018-07-20 22:21:19 | af96577a7d19e4df9f63d95fd9c3bfd2adcddb5d

Avoid Toast crashes

Showing a toast can crash on API 25 because the Window Manager can throw a BadTokenException when addView is called.

This change fixes it by configuring the toast manually and calling the window manager directly. This is based on https://github.com/pyricau/frenchtoast/blob/master/frenchtoast/src/main/java/frenchtoast/Mixture.java#L49 .

Fixes #844 | 2018-07-20 16:11:22 | c9ebc5cf5099c093bde5d3309b2692cb0e2016d8

Fixing setup bug | 2018-06-28 04:07:09 | 505933817cf6e2eb0dad4a78d4c7c35a072b9868

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

Fix LeakCanary toasting (#1116)

- Prior attempts to get it to work with the application context turned out to be buggy.
- This makes LeakCanary use whatever the current resumed activity is, if any.
- If there is no resumed activity, then the toast isn't displayed.

This supersedes #1080 | 2018-10-16 13:23:14 | 0e39e2eea79bc05bf7147a4074dd7163f7c401ff

fix the wrong word (#1111) | 2018-10-16 01:25:28 | 636b9b6c2b39c0c887c9ed78e904239db9bc131e

Merge pull request #1104 from IlyaGulya/bug/travis-ci-cache-fix

Fix travis caching and improve build time. | 2018-09-22 21:25:59 | 344728b906daf6d010f66bdf4ccc29ad8fedede5

Error prone 2.3.1 + suggested fix and specify version

See http://errorprone.info/bugpattern/StringSplitter | 2018-08-22 07:37:33 | a6b6960d73a1da9661f4e85254570bf5f867f954

Merge pull request #1089 from hzsweers/z/fixAnother

Quick followup to #1088 | 2018-08-22 03:15:15 | be973f5f5da6a3516aedab98e639690697617747

Merge pull request #1087 from Goddchen/patch-2

Updated german translation | 2018-08-20 13:52:47 | b43c279b3e1623c193e1dc81955527f70e93f822

Merge pull request #1063 from javmarina/patch-1

Fixed wrong versions in AndroidExcludedRefs | 2018-07-25 18:31:55 | 3b4ebe3e2571377f93e9a6976e021324502a0f78

Fixed wrong versions in AndroidExcludedRefs

Commit https://android.googlesource.com/platform/frameworks/base/+/27db46850b708070452c0ce49daf5f79503fbde6 introduced this issue. This commit was first included in Jelly Bean 4.3 (JELLY_BEAN_MR2), not Jelly Bean 4.1 (JELLY_BEAN)
Commit https://android.googlesource.com/platform/frameworks/base/+/5200e1cb07190a1f6874d72a4561064cad3ee3e0 fixes this issue and was first included in Oreo 8.0 (O). Nougat still has this memory leak. | 2018-07-24 18:24:59 | e4778b25f2c6e65ebc485d255e38586c7d45ec97

Merge pull request #1057 from square/py/ui_bug

Fix drawing of start line | 2018-07-20 22:21:19 | af96577a7d19e4df9f63d95fd9c3bfd2adcddb5d

Avoid Toast crashes

Showing a toast can crash on API 25 because the Window Manager can throw a BadTokenException when addView is called.

This change fixes it by configuring the toast manually and calling the window manager directly. This is based on https://github.com/pyricau/frenchtoast/blob/master/frenchtoast/src/main/java/frenchtoast/Mixture.java#L49 .

Fixes #844 | 2018-07-20 16:11:22 | c9ebc5cf5099c093bde5d3309b2692cb0e2016d8

Fixing setup bug | 2018-06-28 04:07:09 | 505933817cf6e2eb0dad4a78d4c7c35a072b9868

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

Use "x minutes ago" format for dates (#1675)

Also fixed some of the ordering (leaks types by counts desc, leaks by date desc)

Fixes #1672 | 2019-12-16 23:56:38 | 9fae7ed497e1760abe74cf2c22535fbd51f16331

Gradle plugin that puts proguard mapping file in the apk as an asset (#1589)

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Add unit tests for copy obfuscation file task

* Add recipe describing how to use the plugin

* Add plugin usage instruction

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Rebased onto master

* Add missing test dependencies

* Use lambda function instead of a collection for plugin configuration

* Post code review fixups

* Rename according to code review suggestions

* Fix detekt warning

* Pass empty file if mapping doesn't exist

* Improved recipe

* Code review fixups

* Fix CopyObfuscationMappingFileTask tests

* Code review fixes

* Fix detekt issues

* Add plugin tests

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Rebased onto master

* Use lambda function instead of a collection for plugin configuration

* Post code review fixups

* Rename according to code review suggestions

* Fix detekt warning

* Pass empty file if mapping doesn't exist

* Improved recipe

* Code review fixups

* Fix CopyObfuscationMappingFileTask tests

* Code review fixes

* Fix detekt issues

* Add plugin tests

* Rebased onto master

* Add one more test for plugin

* Try fixing CI tests by reading $ANDROID_HOME value

* Try fixing CI tests by hardcoding android sdk path

* Debugging CI failing test

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Post review fixes

* Debugging failing test on CI

* Try fixing CI tests by hardcoding android sdk path

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debug failing test on CI

* Debug failing test on CI

* Debug failing test on CI

* Debug failing test on CI

* Debug failing test on CI

* Debug failing test on CI

* Use trusty dist in travis config

* Debug failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debug failing CI test

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Prevent GradleRunner from running builds in a separate process

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* sni: modernize travis script. Solve emulator issue.
The build now uses build tools 28 which requires little adjustments
from the original recipe. In the future we can just use the original recipe
Original recipe: https://docs.travis-ci.com/user/languages/android/ | 2019-12-10 06:48:02 | 25a10fcd9f405235de63bd791ea4ae4eb5453924

Fix emulators  (#1667)

* Revert "Fix travis (#1665)"

This reverts commit 00b9bd32d535022800153f34916d4c4667d2a5cd.

* Fix emulators

A recent emulator update breaks a few CI projects.  This PR applies
a fix suggested by Google.

https://issuetracker.google.com/issues/145622251#comment33 | 2019-12-10 05:43:06 | b678e1508e9ef3618ce2c44d44ff733f350d4185

Fix travis (#1665)

According to [this tweet](https://twitter.com/colinwhi/status/1204102384458194944) from @colinrtwhite, Travis is failing due to a bug in the most recent version of the emulator. Pinning the emulator to an older version works around it. This commit steals the fix from https://github.com/coil-kt/coil/pull/195 . | 2019-12-09 19:54:40 | 00b9bd32d535022800153f34916d4c4667d2a5cd

Add ability to customize class used to detect tests (#1654)

Developers should not ship JUnit in their app, even in debug. However, some debug libraries unfortunately ship with JUnit as a dependency (e.g. see https://github.com/square/okhttp/issues/4667).

Developers can change the default to target a different class (e.g assertj) to help LeakCanary detect unit tests, by overriding a public string:

```
  <string name="leak_canary_test_class_name">org.assertj.core.api.Assertions</string>
```

Fixes #1649 | 2019-12-03 02:35:07 | dbbb969d59b066c3f9197ebc3863cc4f54dae5d2

fix changelog | 2019-11-25 19:32:41 | 50ae3ba7558e5a3f83fc11b4d17a281f072ff078

Fix bug in handling JNI roots (#1636)

* When adding support for native reference leaks (879ab7c) there was a missing bracket in an if/else branch that led to all native gc roots being ignored.

Fixes #1634 | 2019-11-25 19:00:23 | aff338544b5eebbb0b3c792c628cca11fa888373

fix typos | 2019-11-19 03:58:07 | 25b0df0da4f6e93dedcd90342c9cd1d0eab080ed

Merge pull request #1596 from fernandospr/patch-1

Update blog-articles.md | 2019-10-04 16:35:24 | e65236dae7c5827b7c9f64c19c8b1a16ea19e5a7

Merge pull request #1598 from PaulWoitaschek/patch-1

Fixed the german string placeholder for sharing the heap dump | 2019-10-03 16:16:23 | 029f28eefd7aa966520ac3649fd2688732c02867

Fix crash when pressing home from root screen (#1578)

This bug only happens on older Android devices.

Fixes #1555 | 2019-09-11 01:51:06 | 274f58f96e8de7dcd3000c06ba3e2b50e427747d

Merge pull request #1559 from bric3/fix-primitive-array-dump-skip

Fixes the primitive array dump record skipping | 2019-09-09 22:16:57 | c0fd4d812cb8d6c5723231e501c121da2af86f06

Parsing and applying proguard mapping during heap analysis (#1542)

* Parsing and applying proguard mapping during heap analysis

* Parsing and applying proguard mapping during heap analysis

* Rebased onto master

* Post review changes and updated shark-cli to support mapping files

* Post review fixes

* Moving proguard mapping reader out of the analyzer and formatting fixes | 2019-08-30 16:54:20 | 66182a52069d9be59d0af6220aa9afd74218aa9b

fix images | 2019-08-27 20:02:50 | 8f5030e9faa8690217e1bd436274a3de5b9d3fb3

fix image links in docs | 2019-08-27 19:59:20 | edca56a947278508350bfa5dd33d3fa10699001f

Merge pull request #1549 from Armaxis/patch-1

Added section about using Detekt to Contributing | 2019-08-24 22:16:26 | c923d14909888860a99d5899af17f5b52c9b000f

Revert "Replaced accessor with a call to setter to fix the build issue"

This reverts commit 82db0398 | 2019-08-17 02:21:08 | c570cb9b0fd7bd7fcc88c4d3b529df8837e98fdc

Replaced accessor with a call to setter to fix the build issue | 2019-08-16 04:32:25 | 82db039843303044f91d36ba7c43595ab59bacd5

fix typo | 2019-08-02 15:31:17 | a2452f61e78e689efb59adaf71384d74447578b0

Add / fix android inspectors (#1491)

* Added MortarScope and ViewRootImpl inspectors
* Fixed the ContextWrapper inspector

Fixes #1490
Fixes #1389 | 2019-07-25 22:50:48 | 915f8359690a016a09e66608a041454b9c8c52cb

Documenting public APIs (#1476)

Also fixed naming and other things that weren't right.

Fixes #1474 | 2019-07-19 06:57:25 | 41c69a5d424b4236114c5ce1b077afdad38e57a5

Adding CLI for LeakCanary (#1456)

Example usage:
```
./gradlew leakcanary-cli:run --args='analyze-process com.example.leakcanary'

./gradlew leakcanary-cli:run --args='dump-process com.example.leakcanary'

./gradlew leakcanary-cli:run --args='analyze-file /path/to/heapdump.hprof'
```

Also fixed a bug in ShortestPathFinder which did not ignore null references in object arrays | 2019-07-11 19:11:30 | eded1c96e84f37393857ba4de2580aec784b2391

Behavior change & bugfixes for retained count notification (#1433)

* Bugfix: when tapping the "dump heap" notification, if the GC found no retained instance we didn't use a distinct notification id to communicate that, and then soon after we'd dismiss the notification that let's the user know there is no retained instances on tap.
* Bugfix: we weren't running the GC when checking for retained instances and the count was under the threshold
* Change: we now update the notification and keep it around for 30 seconds when the count goes to 0
* Change: the "no retained instance" notification that shows on tap is identical and also auto dismisses after 30 seconds.
* Change: we're checking for retained references (and running the GC) every 2 seconds instead of 5.

Fixes #1427 | 2019-07-03 20:55:47 | 968083a915343d881bd63e40587c070fde543732

Update how to fix a leak | 2019-06-25 05:46:56 | 177e7fd12933d99eca7a526851c53e598a03bf90

Text rendering tests (#1378)

* Added test coverage for text rendering
* Fixed bug: labels were not rendered on the last node (leaking instance)
* Matched exclusions are now rendered on their own line

Fixes #1375
Fixes #1350 | 2019-06-04 09:32:11 | 1926cb1db73f9583e11c557dbf2e5d46e3896a6e

Thread name based exclusions (#1353)

* Readded support for exclusions of local variable based on thread names
* Renamed ThreadExclusion to JavaLocalExclusion
* Fixed bug: KeyedWeakReference was not always ignored because its superclass is has a weakly reachable exclusion.
* Fixed bug: all root nodes had the same visit order as the first non root enqueued item, making it possible for a non root node to be dequeued before we're done with all roots.
* Redded gc root sorting
* Added tests to cover all uncovered bugs
* Added support for parsing StackFrameRecord

Fixes #1339 | 2019-05-20 13:17:18 | 6c2ee609efda323e88a4964d31fc5a5f0532f776

Reachability => LeakStatus (#1340)

* Combined leaking information from inspectors to solving conflicts while keeping all reasons
* Made reason from view leak inspector more obvious, and added label data about internals
* Moved reachability into LeakTraceElement
* Reachability renamed to LeakNodeStatus and leaking / not leaking
* ReachabilityInspector and Labeler are now functions with type aliases

Related to #1336: should fix the crash, though it's still unclear why AppCompatButton was a gc root there. | 2019-05-07 14:56:59 | 01210bbbfaecb3bcb6057c62b2195366d3bfa4f9

Revamp notifications (#1335)

* New notification that shows the count of retained instances. Tapping it triggers a heap dump. Fixes #1325
* Notifications are now split into two channels: default for results, and low for everything else.
* New config options: LeakCanary.config.dumpHeapWhenDebugging (default false) and LeakCanary.config.retainedVisibleThreshold (default 5)
* Replaced notification int constants and timestamps with resource ids.
* Don't show background notifications in instant apps (#1197) | 2019-05-05 16:38:26 | b14d9bc9c0a87119137bc0998bdec9314186dfcf

Highlighting new leaks (#1334)

New leaks are leaks that have a leak group that doesn't exist in any prior analysis.

* The notification now reports the count of leaks, with a split of new, known, and won't fix.
* The analysis success screen shows new leaks
* Moved description prefixes to be computed rather than inserted in the DB

Fixes #1328 | 2019-05-05 09:37:38 | f9a0518d4ddd69b782b6302caa3e3039787038e4

LeakSentry can be disabled (#1332)

LeakCanary has an enabled config option. Default is on in debug builds off in release builds.

Fixes #1327 | 2019-05-04 17:52:47 | f74f60901f34c751e8b8798d626678aa6233c893

Revert "fix trailing spaces per checkstyle"

This reverts commit ff17f879ec92ec326f8b1c6b7b8d77a5266d6622. | 2019-05-04 08:04:21 | 03136ca7dc1680299d710f79ca885412a1564144

Add test coverage for heap analysis (#1329)

* Fixed bug when reachability inspectors conflicts (reachable should win and erase unreachable)
* Added back support for leaking instances being empty objects, strings, primitive arrays or any object that we otherwise don't follow to find shortest paths. | 2019-05-04 07:51:02 | 59558e655d537c7654c411eebfd840773a8b77c9

Introducing exclusion priority (#1317)

* Add segmented FIFO queue

Unified several queues into one segmented FIFO queue. This will enable us to add several levels of priority.

* Introducing exclusion priority

* "excludedLeak" is now known as "won't fix leak", which matches its reality better. It's a leak that is known and real yet we're not fixing.
* Exclusion.alwaysExclude is replaced with Exclusion.status, with 3 possible values: NEVER_REACHABLE, WONT_FIX_LEAK, WEAKLY_REACHABLE.
* The shortest path finder will now follow weak references after all other paths have been exhausted.
* Removed class exclusion, was confusing, replaced with less lazy approach of listing fields to exclude
* VIEWLOCATIONHOLDER_ROOT should not have been always excluded, fixed.

Fixes #1173 ... well kinda. Instead of "non leaking retained instances", LeakCanary will report weakly reachable traces. Not sure if that'll help but it's a foundation we can build on. | 2019-04-30 17:44:15 | b0eedc553995e354e2382b3378bf0348801cd3c5

AllFieldsLabeler & cleanups (#1316)

* Add new optional labeler that prints all fields (useful for debugging)
* Move deprecated AnalysisResult to perflib
* Made DefaultAnalysisResultListener an object | 2019-04-30 07:08:29 | b9ee5356db265412db39c4c341880f305fbf2c76

fix format | 2019-04-22 06:25:09 | 4a2b158913e5a9eb0d5c6fdfbf949a80fc1b2c6b

Rename default to perflib and experimental to default (#1282)

* Remove experimental from module names

* Remove experimental prefix, add perflib prefix:

* update docs | 2019-04-19 06:01:39 | 425a9f24deb72691b02cdc85f80d177c05afebc5

fix list | 2019-04-18 21:55:43 | 8e3f9d26e8d3555bf934b99ac062aabc3aba528f

fix broken master | 2019-04-10 15:00:30 | f067ae53e050c5f52f47237440a6ac7eee3ca94c

fix broken build due to typo | 2019-04-10 05:44:19 | 7d4ddb4ffe3c9b0f30a84848675452dded0d4115

Leaking information aligned below simple class name. (#1258)

Also fixed issue where extraString + exclusionString were showing after the squiggly line.

Before: 
``` 
┬
├─ java.lang.Thread
│                 Leaking: NO (it's a GC root)
│                 ↓ thread Thread.<Java Local>
│                                ~~~~~~~~~~~~~ (named 'Thread-4')
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                 Leaking: UNKNOWN
│                 ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                     ~~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) 
```
After: 
``` 
┬
├─ java.lang.Thread
│            Leaking: NO (it's a GC root)
│            ↓ thread Thread.<Java Local> (named 'Thread-4')
│                            ~~~~~~~~~~~~
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                         Leaking: UNKNOWN
│                         ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                              ~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) ``` | 2019-04-05 20:11:47 | a938855585c7cf2522ffbd143d4bb66a234eea66

Add share to Stack Overflow button when viewing a leak (#1252)

* Add share to Stack Overflow button when viewing a leak

* Add question tag, lengthen toast and fix build failure. | 2019-04-04 20:49:50 | 8724d2aaffc07904517a3b823867802ca43233ae

Check if serviceInfo.processName is null. When LeakCanary runs on a seperate process and that process for some reason does not have a assigned processName, then we will crash on a NullPointerException. Also a debug log explaining this. (#1225) | 2019-04-01 19:20:40 | 3efc43608ed71dc20b0ad1e0e80e33d15249666f

fix master broken | 2019-04-01 19:07:27 | fe42130029174681a708b7d8622412efbaf81e73

fix trailing spaces per checkstyle | 2019-03-29 22:34:58 | ff17f879ec92ec326f8b1c6b7b8d77a5266d6622

Fix GC Root bugs that missed leaks (#1168)

In Perflib, Snapshot.getGcRoots() only returns the GC roots from the first heap. Based on empirical evidence, it seems like Android has 4 heaps, and the GC Roots used to only be in the first heap, but more recent versions of Android have GC Roots in other heaps as well.

This means LeakCanary would sometimes show "No Leak Found" when there actually was a leak.

Fixes #1163 | 2019-01-10 23:32:27 | 64b6e5a41796ae1587c50c8cc860cea25f28f382

fix typo | 2018-10-17 00:43:01 | 044b1e4827bc71ec008dc3f7e43c78f58885f1e1

Fix LeakCanary toasting (#1116)

- Prior attempts to get it to work with the application context turned out to be buggy.
- This makes LeakCanary use whatever the current resumed activity is, if any.
- If there is no resumed activity, then the toast isn't displayed.

This supersedes #1080 | 2018-10-16 13:23:14 | 0e39e2eea79bc05bf7147a4074dd7163f7c401ff

fix the wrong word (#1111) | 2018-10-16 01:25:28 | 636b9b6c2b39c0c887c9ed78e904239db9bc131e

Merge pull request #1104 from IlyaGulya/bug/travis-ci-cache-fix

Fix travis caching and improve build time. | 2018-09-22 21:25:59 | 344728b906daf6d010f66bdf4ccc29ad8fedede5

Error prone 2.3.1 + suggested fix and specify version

See http://errorprone.info/bugpattern/StringSplitter | 2018-08-22 07:37:33 | a6b6960d73a1da9661f4e85254570bf5f867f954

Merge pull request #1089 from hzsweers/z/fixAnother

Quick followup to #1088 | 2018-08-22 03:15:15 | be973f5f5da6a3516aedab98e639690697617747

Merge pull request #1087 from Goddchen/patch-2

Updated german translation | 2018-08-20 13:52:47 | b43c279b3e1623c193e1dc81955527f70e93f822

Merge pull request #1063 from javmarina/patch-1

Fixed wrong versions in AndroidExcludedRefs | 2018-07-25 18:31:55 | 3b4ebe3e2571377f93e9a6976e021324502a0f78

Fixed wrong versions in AndroidExcludedRefs

Commit https://android.googlesource.com/platform/frameworks/base/+/27db46850b708070452c0ce49daf5f79503fbde6 introduced this issue. This commit was first included in Jelly Bean 4.3 (JELLY_BEAN_MR2), not Jelly Bean 4.1 (JELLY_BEAN)
Commit https://android.googlesource.com/platform/frameworks/base/+/5200e1cb07190a1f6874d72a4561064cad3ee3e0 fixes this issue and was first included in Oreo 8.0 (O). Nougat still has this memory leak. | 2018-07-24 18:24:59 | e4778b25f2c6e65ebc485d255e38586c7d45ec97

Merge pull request #1057 from square/py/ui_bug

Fix drawing of start line | 2018-07-20 22:21:19 | af96577a7d19e4df9f63d95fd9c3bfd2adcddb5d

Avoid Toast crashes

Showing a toast can crash on API 25 because the Window Manager can throw a BadTokenException when addView is called.

This change fixes it by configuring the toast manually and calling the window manager directly. This is based on https://github.com/pyricau/frenchtoast/blob/master/frenchtoast/src/main/java/frenchtoast/Mixture.java#L49 .

Fixes #844 | 2018-07-20 16:11:22 | c9ebc5cf5099c093bde5d3309b2692cb0e2016d8

Fixing setup bug | 2018-06-28 04:07:09 | 505933817cf6e2eb0dad4a78d4c7c35a072b9868

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

Update how to fix a leak | 2019-06-25 05:46:56 | 177e7fd12933d99eca7a526851c53e598a03bf90

Text rendering tests (#1378)

* Added test coverage for text rendering
* Fixed bug: labels were not rendered on the last node (leaking instance)
* Matched exclusions are now rendered on their own line

Fixes #1375
Fixes #1350 | 2019-06-04 09:32:11 | 1926cb1db73f9583e11c557dbf2e5d46e3896a6e

Thread name based exclusions (#1353)

* Readded support for exclusions of local variable based on thread names
* Renamed ThreadExclusion to JavaLocalExclusion
* Fixed bug: KeyedWeakReference was not always ignored because its superclass is has a weakly reachable exclusion.
* Fixed bug: all root nodes had the same visit order as the first non root enqueued item, making it possible for a non root node to be dequeued before we're done with all roots.
* Redded gc root sorting
* Added tests to cover all uncovered bugs
* Added support for parsing StackFrameRecord

Fixes #1339 | 2019-05-20 13:17:18 | 6c2ee609efda323e88a4964d31fc5a5f0532f776

Reachability => LeakStatus (#1340)

* Combined leaking information from inspectors to solving conflicts while keeping all reasons
* Made reason from view leak inspector more obvious, and added label data about internals
* Moved reachability into LeakTraceElement
* Reachability renamed to LeakNodeStatus and leaking / not leaking
* ReachabilityInspector and Labeler are now functions with type aliases

Related to #1336: should fix the crash, though it's still unclear why AppCompatButton was a gc root there. | 2019-05-07 14:56:59 | 01210bbbfaecb3bcb6057c62b2195366d3bfa4f9

Revamp notifications (#1335)

* New notification that shows the count of retained instances. Tapping it triggers a heap dump. Fixes #1325
* Notifications are now split into two channels: default for results, and low for everything else.
* New config options: LeakCanary.config.dumpHeapWhenDebugging (default false) and LeakCanary.config.retainedVisibleThreshold (default 5)
* Replaced notification int constants and timestamps with resource ids.
* Don't show background notifications in instant apps (#1197) | 2019-05-05 16:38:26 | b14d9bc9c0a87119137bc0998bdec9314186dfcf

Highlighting new leaks (#1334)

New leaks are leaks that have a leak group that doesn't exist in any prior analysis.

* The notification now reports the count of leaks, with a split of new, known, and won't fix.
* The analysis success screen shows new leaks
* Moved description prefixes to be computed rather than inserted in the DB

Fixes #1328 | 2019-05-05 09:37:38 | f9a0518d4ddd69b782b6302caa3e3039787038e4

LeakSentry can be disabled (#1332)

LeakCanary has an enabled config option. Default is on in debug builds off in release builds.

Fixes #1327 | 2019-05-04 17:52:47 | f74f60901f34c751e8b8798d626678aa6233c893

Revert "fix trailing spaces per checkstyle"

This reverts commit ff17f879ec92ec326f8b1c6b7b8d77a5266d6622. | 2019-05-04 08:04:21 | 03136ca7dc1680299d710f79ca885412a1564144

Add test coverage for heap analysis (#1329)

* Fixed bug when reachability inspectors conflicts (reachable should win and erase unreachable)
* Added back support for leaking instances being empty objects, strings, primitive arrays or any object that we otherwise don't follow to find shortest paths. | 2019-05-04 07:51:02 | 59558e655d537c7654c411eebfd840773a8b77c9

Introducing exclusion priority (#1317)

* Add segmented FIFO queue

Unified several queues into one segmented FIFO queue. This will enable us to add several levels of priority.

* Introducing exclusion priority

* "excludedLeak" is now known as "won't fix leak", which matches its reality better. It's a leak that is known and real yet we're not fixing.
* Exclusion.alwaysExclude is replaced with Exclusion.status, with 3 possible values: NEVER_REACHABLE, WONT_FIX_LEAK, WEAKLY_REACHABLE.
* The shortest path finder will now follow weak references after all other paths have been exhausted.
* Removed class exclusion, was confusing, replaced with less lazy approach of listing fields to exclude
* VIEWLOCATIONHOLDER_ROOT should not have been always excluded, fixed.

Fixes #1173 ... well kinda. Instead of "non leaking retained instances", LeakCanary will report weakly reachable traces. Not sure if that'll help but it's a foundation we can build on. | 2019-04-30 17:44:15 | b0eedc553995e354e2382b3378bf0348801cd3c5

AllFieldsLabeler & cleanups (#1316)

* Add new optional labeler that prints all fields (useful for debugging)
* Move deprecated AnalysisResult to perflib
* Made DefaultAnalysisResultListener an object | 2019-04-30 07:08:29 | b9ee5356db265412db39c4c341880f305fbf2c76

fix format | 2019-04-22 06:25:09 | 4a2b158913e5a9eb0d5c6fdfbf949a80fc1b2c6b

Rename default to perflib and experimental to default (#1282)

* Remove experimental from module names

* Remove experimental prefix, add perflib prefix:

* update docs | 2019-04-19 06:01:39 | 425a9f24deb72691b02cdc85f80d177c05afebc5

fix list | 2019-04-18 21:55:43 | 8e3f9d26e8d3555bf934b99ac062aabc3aba528f

fix broken master | 2019-04-10 15:00:30 | f067ae53e050c5f52f47237440a6ac7eee3ca94c

fix broken build due to typo | 2019-04-10 05:44:19 | 7d4ddb4ffe3c9b0f30a84848675452dded0d4115

Leaking information aligned below simple class name. (#1258)

Also fixed issue where extraString + exclusionString were showing after the squiggly line.

Before: 
``` 
┬
├─ java.lang.Thread
│                 Leaking: NO (it's a GC root)
│                 ↓ thread Thread.<Java Local>
│                                ~~~~~~~~~~~~~ (named 'Thread-4')
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                 Leaking: UNKNOWN
│                 ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                     ~~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) 
```
After: 
``` 
┬
├─ java.lang.Thread
│            Leaking: NO (it's a GC root)
│            ↓ thread Thread.<Java Local> (named 'Thread-4')
│                            ~~~~~~~~~~~~
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                         Leaking: UNKNOWN
│                         ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                              ~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) ``` | 2019-04-05 20:11:47 | a938855585c7cf2522ffbd143d4bb66a234eea66

Add share to Stack Overflow button when viewing a leak (#1252)

* Add share to Stack Overflow button when viewing a leak

* Add question tag, lengthen toast and fix build failure. | 2019-04-04 20:49:50 | 8724d2aaffc07904517a3b823867802ca43233ae

Check if serviceInfo.processName is null. When LeakCanary runs on a seperate process and that process for some reason does not have a assigned processName, then we will crash on a NullPointerException. Also a debug log explaining this. (#1225) | 2019-04-01 19:20:40 | 3efc43608ed71dc20b0ad1e0e80e33d15249666f

fix master broken | 2019-04-01 19:07:27 | fe42130029174681a708b7d8622412efbaf81e73

fix trailing spaces per checkstyle | 2019-03-29 22:34:58 | ff17f879ec92ec326f8b1c6b7b8d77a5266d6622

Fix GC Root bugs that missed leaks (#1168)

In Perflib, Snapshot.getGcRoots() only returns the GC roots from the first heap. Based on empirical evidence, it seems like Android has 4 heaps, and the GC Roots used to only be in the first heap, but more recent versions of Android have GC Roots in other heaps as well.

This means LeakCanary would sometimes show "No Leak Found" when there actually was a leak.

Fixes #1163 | 2019-01-10 23:32:27 | 64b6e5a41796ae1587c50c8cc860cea25f28f382

fix typo | 2018-10-17 00:43:01 | 044b1e4827bc71ec008dc3f7e43c78f58885f1e1

Fix LeakCanary toasting (#1116)

- Prior attempts to get it to work with the application context turned out to be buggy.
- This makes LeakCanary use whatever the current resumed activity is, if any.
- If there is no resumed activity, then the toast isn't displayed.

This supersedes #1080 | 2018-10-16 13:23:14 | 0e39e2eea79bc05bf7147a4074dd7163f7c401ff

fix the wrong word (#1111) | 2018-10-16 01:25:28 | 636b9b6c2b39c0c887c9ed78e904239db9bc131e

Merge pull request #1104 from IlyaGulya/bug/travis-ci-cache-fix

Fix travis caching and improve build time. | 2018-09-22 21:25:59 | 344728b906daf6d010f66bdf4ccc29ad8fedede5

Error prone 2.3.1 + suggested fix and specify version

See http://errorprone.info/bugpattern/StringSplitter | 2018-08-22 07:37:33 | a6b6960d73a1da9661f4e85254570bf5f867f954

Merge pull request #1089 from hzsweers/z/fixAnother

Quick followup to #1088 | 2018-08-22 03:15:15 | be973f5f5da6a3516aedab98e639690697617747

Merge pull request #1087 from Goddchen/patch-2

Updated german translation | 2018-08-20 13:52:47 | b43c279b3e1623c193e1dc81955527f70e93f822

Merge pull request #1063 from javmarina/patch-1

Fixed wrong versions in AndroidExcludedRefs | 2018-07-25 18:31:55 | 3b4ebe3e2571377f93e9a6976e021324502a0f78

Fixed wrong versions in AndroidExcludedRefs

Commit https://android.googlesource.com/platform/frameworks/base/+/27db46850b708070452c0ce49daf5f79503fbde6 introduced this issue. This commit was first included in Jelly Bean 4.3 (JELLY_BEAN_MR2), not Jelly Bean 4.1 (JELLY_BEAN)
Commit https://android.googlesource.com/platform/frameworks/base/+/5200e1cb07190a1f6874d72a4561064cad3ee3e0 fixes this issue and was first included in Oreo 8.0 (O). Nougat still has this memory leak. | 2018-07-24 18:24:59 | e4778b25f2c6e65ebc485d255e38586c7d45ec97

Merge pull request #1057 from square/py/ui_bug

Fix drawing of start line | 2018-07-20 22:21:19 | af96577a7d19e4df9f63d95fd9c3bfd2adcddb5d

Avoid Toast crashes

Showing a toast can crash on API 25 because the Window Manager can throw a BadTokenException when addView is called.

This change fixes it by configuring the toast manually and calling the window manager directly. This is based on https://github.com/pyricau/frenchtoast/blob/master/frenchtoast/src/main/java/frenchtoast/Mixture.java#L49 .

Fixes #844 | 2018-07-20 16:11:22 | c9ebc5cf5099c093bde5d3309b2692cb0e2016d8

Fixing setup bug | 2018-06-28 04:07:09 | 505933817cf6e2eb0dad4a78d4c7c35a072b9868

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

Rename default to perflib and experimental to default (#1282)

* Remove experimental from module names

* Remove experimental prefix, add perflib prefix:

* update docs | 2019-04-19 06:01:39 | 425a9f24deb72691b02cdc85f80d177c05afebc5

fix list | 2019-04-18 21:55:43 | 8e3f9d26e8d3555bf934b99ac062aabc3aba528f

fix broken master | 2019-04-10 15:00:30 | f067ae53e050c5f52f47237440a6ac7eee3ca94c

fix broken build due to typo | 2019-04-10 05:44:19 | 7d4ddb4ffe3c9b0f30a84848675452dded0d4115

Leaking information aligned below simple class name. (#1258)

Also fixed issue where extraString + exclusionString were showing after the squiggly line.

Before: 
``` 
┬
├─ java.lang.Thread
│                 Leaking: NO (it's a GC root)
│                 ↓ thread Thread.<Java Local>
│                                ~~~~~~~~~~~~~ (named 'Thread-4')
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                 Leaking: UNKNOWN
│                 ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                     ~~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) 
```
After: 
``` 
┬
├─ java.lang.Thread
│            Leaking: NO (it's a GC root)
│            ↓ thread Thread.<Java Local> (named 'Thread-4')
│                            ~~~~~~~~~~~~
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                         Leaking: UNKNOWN
│                         ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                              ~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) ``` | 2019-04-05 20:11:47 | a938855585c7cf2522ffbd143d4bb66a234eea66

Add share to Stack Overflow button when viewing a leak (#1252)

* Add share to Stack Overflow button when viewing a leak

* Add question tag, lengthen toast and fix build failure. | 2019-04-04 20:49:50 | 8724d2aaffc07904517a3b823867802ca43233ae

Check if serviceInfo.processName is null. When LeakCanary runs on a seperate process and that process for some reason does not have a assigned processName, then we will crash on a NullPointerException. Also a debug log explaining this. (#1225) | 2019-04-01 19:20:40 | 3efc43608ed71dc20b0ad1e0e80e33d15249666f

fix master broken | 2019-04-01 19:07:27 | fe42130029174681a708b7d8622412efbaf81e73

Fix GC Root bugs that missed leaks (#1168)

In Perflib, Snapshot.getGcRoots() only returns the GC roots from the first heap. Based on empirical evidence, it seems like Android has 4 heaps, and the GC Roots used to only be in the first heap, but more recent versions of Android have GC Roots in other heaps as well.

This means LeakCanary would sometimes show "No Leak Found" when there actually was a leak.

Fixes #1163 | 2019-01-10 23:32:27 | 64b6e5a41796ae1587c50c8cc860cea25f28f382

fix typo | 2018-10-17 00:43:01 | 044b1e4827bc71ec008dc3f7e43c78f58885f1e1

Fix LeakCanary toasting (#1116)

- Prior attempts to get it to work with the application context turned out to be buggy.
- This makes LeakCanary use whatever the current resumed activity is, if any.
- If there is no resumed activity, then the toast isn't displayed.

This supersedes #1080 | 2018-10-16 13:23:14 | 0e39e2eea79bc05bf7147a4074dd7163f7c401ff

fix the wrong word (#1111) | 2018-10-16 01:25:28 | 636b9b6c2b39c0c887c9ed78e904239db9bc131e

Merge pull request #1104 from IlyaGulya/bug/travis-ci-cache-fix

Fix travis caching and improve build time. | 2018-09-22 21:25:59 | 344728b906daf6d010f66bdf4ccc29ad8fedede5

Error prone 2.3.1 + suggested fix and specify version

See http://errorprone.info/bugpattern/StringSplitter | 2018-08-22 07:37:33 | a6b6960d73a1da9661f4e85254570bf5f867f954

Merge pull request #1089 from hzsweers/z/fixAnother

Quick followup to #1088 | 2018-08-22 03:15:15 | be973f5f5da6a3516aedab98e639690697617747

Merge pull request #1087 from Goddchen/patch-2

Updated german translation | 2018-08-20 13:52:47 | b43c279b3e1623c193e1dc81955527f70e93f822

Merge pull request #1063 from javmarina/patch-1

Fixed wrong versions in AndroidExcludedRefs | 2018-07-25 18:31:55 | 3b4ebe3e2571377f93e9a6976e021324502a0f78

Fixed wrong versions in AndroidExcludedRefs

Commit https://android.googlesource.com/platform/frameworks/base/+/27db46850b708070452c0ce49daf5f79503fbde6 introduced this issue. This commit was first included in Jelly Bean 4.3 (JELLY_BEAN_MR2), not Jelly Bean 4.1 (JELLY_BEAN)
Commit https://android.googlesource.com/platform/frameworks/base/+/5200e1cb07190a1f6874d72a4561064cad3ee3e0 fixes this issue and was first included in Oreo 8.0 (O). Nougat still has this memory leak. | 2018-07-24 18:24:59 | e4778b25f2c6e65ebc485d255e38586c7d45ec97

Merge pull request #1057 from square/py/ui_bug

Fix drawing of start line | 2018-07-20 22:21:19 | af96577a7d19e4df9f63d95fd9c3bfd2adcddb5d

Avoid Toast crashes

Showing a toast can crash on API 25 because the Window Manager can throw a BadTokenException when addView is called.

This change fixes it by configuring the toast manually and calling the window manager directly. This is based on https://github.com/pyricau/frenchtoast/blob/master/frenchtoast/src/main/java/frenchtoast/Mixture.java#L49 .

Fixes #844 | 2018-07-20 16:11:22 | c9ebc5cf5099c093bde5d3309b2692cb0e2016d8

Fixing setup bug | 2018-06-28 04:07:09 | 505933817cf6e2eb0dad4a78d4c7c35a072b9868

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

Leaking information aligned below simple class name. (#1258)

Also fixed issue where extraString + exclusionString were showing after the squiggly line.

Before: 
``` 
┬
├─ java.lang.Thread
│                 Leaking: NO (it's a GC root)
│                 ↓ thread Thread.<Java Local>
│                                ~~~~~~~~~~~~~ (named 'Thread-4')
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                 Leaking: UNKNOWN
│                 ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                     ~~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) 
```
After: 
``` 
┬
├─ java.lang.Thread
│            Leaking: NO (it's a GC root)
│            ↓ thread Thread.<Java Local> (named 'Thread-4')
│                            ~~~~~~~~~~~~
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                         Leaking: UNKNOWN
│                         ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                              ~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) ``` | 2019-04-05 20:11:47 | a938855585c7cf2522ffbd143d4bb66a234eea66

Add share to Stack Overflow button when viewing a leak (#1252)

* Add share to Stack Overflow button when viewing a leak

* Add question tag, lengthen toast and fix build failure. | 2019-04-04 20:49:50 | 8724d2aaffc07904517a3b823867802ca43233ae

Check if serviceInfo.processName is null. When LeakCanary runs on a seperate process and that process for some reason does not have a assigned processName, then we will crash on a NullPointerException. Also a debug log explaining this. (#1225) | 2019-04-01 19:20:40 | 3efc43608ed71dc20b0ad1e0e80e33d15249666f

fix master broken | 2019-04-01 19:07:27 | fe42130029174681a708b7d8622412efbaf81e73

Fix GC Root bugs that missed leaks (#1168)

In Perflib, Snapshot.getGcRoots() only returns the GC roots from the first heap. Based on empirical evidence, it seems like Android has 4 heaps, and the GC Roots used to only be in the first heap, but more recent versions of Android have GC Roots in other heaps as well.

This means LeakCanary would sometimes show "No Leak Found" when there actually was a leak.

Fixes #1163 | 2019-01-10 23:32:27 | 64b6e5a41796ae1587c50c8cc860cea25f28f382

fix typo | 2018-10-17 00:43:01 | 044b1e4827bc71ec008dc3f7e43c78f58885f1e1

Fix LeakCanary toasting (#1116)

- Prior attempts to get it to work with the application context turned out to be buggy.
- This makes LeakCanary use whatever the current resumed activity is, if any.
- If there is no resumed activity, then the toast isn't displayed.

This supersedes #1080 | 2018-10-16 13:23:14 | 0e39e2eea79bc05bf7147a4074dd7163f7c401ff

fix the wrong word (#1111) | 2018-10-16 01:25:28 | 636b9b6c2b39c0c887c9ed78e904239db9bc131e

Merge pull request #1104 from IlyaGulya/bug/travis-ci-cache-fix

Fix travis caching and improve build time. | 2018-09-22 21:25:59 | 344728b906daf6d010f66bdf4ccc29ad8fedede5

Error prone 2.3.1 + suggested fix and specify version

See http://errorprone.info/bugpattern/StringSplitter | 2018-08-22 07:37:33 | a6b6960d73a1da9661f4e85254570bf5f867f954

Merge pull request #1089 from hzsweers/z/fixAnother

Quick followup to #1088 | 2018-08-22 03:15:15 | be973f5f5da6a3516aedab98e639690697617747

Merge pull request #1087 from Goddchen/patch-2

Updated german translation | 2018-08-20 13:52:47 | b43c279b3e1623c193e1dc81955527f70e93f822

Merge pull request #1063 from javmarina/patch-1

Fixed wrong versions in AndroidExcludedRefs | 2018-07-25 18:31:55 | 3b4ebe3e2571377f93e9a6976e021324502a0f78

Fixed wrong versions in AndroidExcludedRefs

Commit https://android.googlesource.com/platform/frameworks/base/+/27db46850b708070452c0ce49daf5f79503fbde6 introduced this issue. This commit was first included in Jelly Bean 4.3 (JELLY_BEAN_MR2), not Jelly Bean 4.1 (JELLY_BEAN)
Commit https://android.googlesource.com/platform/frameworks/base/+/5200e1cb07190a1f6874d72a4561064cad3ee3e0 fixes this issue and was first included in Oreo 8.0 (O). Nougat still has this memory leak. | 2018-07-24 18:24:59 | e4778b25f2c6e65ebc485d255e38586c7d45ec97

Merge pull request #1057 from square/py/ui_bug

Fix drawing of start line | 2018-07-20 22:21:19 | af96577a7d19e4df9f63d95fd9c3bfd2adcddb5d

Avoid Toast crashes

Showing a toast can crash on API 25 because the Window Manager can throw a BadTokenException when addView is called.

This change fixes it by configuring the toast manually and calling the window manager directly. This is based on https://github.com/pyricau/frenchtoast/blob/master/frenchtoast/src/main/java/frenchtoast/Mixture.java#L49 .

Fixes #844 | 2018-07-20 16:11:22 | c9ebc5cf5099c093bde5d3309b2692cb0e2016d8

Fixing setup bug | 2018-06-28 04:07:09 | 505933817cf6e2eb0dad4a78d4c7c35a072b9868

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

Thread name based exclusions (#1353)

* Readded support for exclusions of local variable based on thread names
* Renamed ThreadExclusion to JavaLocalExclusion
* Fixed bug: KeyedWeakReference was not always ignored because its superclass is has a weakly reachable exclusion.
* Fixed bug: all root nodes had the same visit order as the first non root enqueued item, making it possible for a non root node to be dequeued before we're done with all roots.
* Redded gc root sorting
* Added tests to cover all uncovered bugs
* Added support for parsing StackFrameRecord

Fixes #1339 | 2019-05-20 13:17:18 | 6c2ee609efda323e88a4964d31fc5a5f0532f776

Reachability => LeakStatus (#1340)

* Combined leaking information from inspectors to solving conflicts while keeping all reasons
* Made reason from view leak inspector more obvious, and added label data about internals
* Moved reachability into LeakTraceElement
* Reachability renamed to LeakNodeStatus and leaking / not leaking
* ReachabilityInspector and Labeler are now functions with type aliases

Related to #1336: should fix the crash, though it's still unclear why AppCompatButton was a gc root there. | 2019-05-07 14:56:59 | 01210bbbfaecb3bcb6057c62b2195366d3bfa4f9

Revamp notifications (#1335)

* New notification that shows the count of retained instances. Tapping it triggers a heap dump. Fixes #1325
* Notifications are now split into two channels: default for results, and low for everything else.
* New config options: LeakCanary.config.dumpHeapWhenDebugging (default false) and LeakCanary.config.retainedVisibleThreshold (default 5)
* Replaced notification int constants and timestamps with resource ids.
* Don't show background notifications in instant apps (#1197) | 2019-05-05 16:38:26 | b14d9bc9c0a87119137bc0998bdec9314186dfcf

Highlighting new leaks (#1334)

New leaks are leaks that have a leak group that doesn't exist in any prior analysis.

* The notification now reports the count of leaks, with a split of new, known, and won't fix.
* The analysis success screen shows new leaks
* Moved description prefixes to be computed rather than inserted in the DB

Fixes #1328 | 2019-05-05 09:37:38 | f9a0518d4ddd69b782b6302caa3e3039787038e4

LeakSentry can be disabled (#1332)

LeakCanary has an enabled config option. Default is on in debug builds off in release builds.

Fixes #1327 | 2019-05-04 17:52:47 | f74f60901f34c751e8b8798d626678aa6233c893

Revert "fix trailing spaces per checkstyle"

This reverts commit ff17f879ec92ec326f8b1c6b7b8d77a5266d6622. | 2019-05-04 08:04:21 | 03136ca7dc1680299d710f79ca885412a1564144

Add test coverage for heap analysis (#1329)

* Fixed bug when reachability inspectors conflicts (reachable should win and erase unreachable)
* Added back support for leaking instances being empty objects, strings, primitive arrays or any object that we otherwise don't follow to find shortest paths. | 2019-05-04 07:51:02 | 59558e655d537c7654c411eebfd840773a8b77c9

Introducing exclusion priority (#1317)

* Add segmented FIFO queue

Unified several queues into one segmented FIFO queue. This will enable us to add several levels of priority.

* Introducing exclusion priority

* "excludedLeak" is now known as "won't fix leak", which matches its reality better. It's a leak that is known and real yet we're not fixing.
* Exclusion.alwaysExclude is replaced with Exclusion.status, with 3 possible values: NEVER_REACHABLE, WONT_FIX_LEAK, WEAKLY_REACHABLE.
* The shortest path finder will now follow weak references after all other paths have been exhausted.
* Removed class exclusion, was confusing, replaced with less lazy approach of listing fields to exclude
* VIEWLOCATIONHOLDER_ROOT should not have been always excluded, fixed.

Fixes #1173 ... well kinda. Instead of "non leaking retained instances", LeakCanary will report weakly reachable traces. Not sure if that'll help but it's a foundation we can build on. | 2019-04-30 17:44:15 | b0eedc553995e354e2382b3378bf0348801cd3c5

AllFieldsLabeler & cleanups (#1316)

* Add new optional labeler that prints all fields (useful for debugging)
* Move deprecated AnalysisResult to perflib
* Made DefaultAnalysisResultListener an object | 2019-04-30 07:08:29 | b9ee5356db265412db39c4c341880f305fbf2c76

fix format | 2019-04-22 06:25:09 | 4a2b158913e5a9eb0d5c6fdfbf949a80fc1b2c6b

Rename default to perflib and experimental to default (#1282)

* Remove experimental from module names

* Remove experimental prefix, add perflib prefix:

* update docs | 2019-04-19 06:01:39 | 425a9f24deb72691b02cdc85f80d177c05afebc5

fix list | 2019-04-18 21:55:43 | 8e3f9d26e8d3555bf934b99ac062aabc3aba528f

fix broken master | 2019-04-10 15:00:30 | f067ae53e050c5f52f47237440a6ac7eee3ca94c

fix broken build due to typo | 2019-04-10 05:44:19 | 7d4ddb4ffe3c9b0f30a84848675452dded0d4115

Leaking information aligned below simple class name. (#1258)

Also fixed issue where extraString + exclusionString were showing after the squiggly line.

Before: 
``` 
┬
├─ java.lang.Thread
│                 Leaking: NO (it's a GC root)
│                 ↓ thread Thread.<Java Local>
│                                ~~~~~~~~~~~~~ (named 'Thread-4')
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                 Leaking: UNKNOWN
│                 ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                     ~~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) 
```
After: 
``` 
┬
├─ java.lang.Thread
│            Leaking: NO (it's a GC root)
│            ↓ thread Thread.<Java Local> (named 'Thread-4')
│                            ~~~~~~~~~~~~
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                         Leaking: UNKNOWN
│                         ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                              ~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) ``` | 2019-04-05 20:11:47 | a938855585c7cf2522ffbd143d4bb66a234eea66

Add share to Stack Overflow button when viewing a leak (#1252)

* Add share to Stack Overflow button when viewing a leak

* Add question tag, lengthen toast and fix build failure. | 2019-04-04 20:49:50 | 8724d2aaffc07904517a3b823867802ca43233ae

Check if serviceInfo.processName is null. When LeakCanary runs on a seperate process and that process for some reason does not have a assigned processName, then we will crash on a NullPointerException. Also a debug log explaining this. (#1225) | 2019-04-01 19:20:40 | 3efc43608ed71dc20b0ad1e0e80e33d15249666f

fix master broken | 2019-04-01 19:07:27 | fe42130029174681a708b7d8622412efbaf81e73

fix trailing spaces per checkstyle | 2019-03-29 22:34:58 | ff17f879ec92ec326f8b1c6b7b8d77a5266d6622

Fix GC Root bugs that missed leaks (#1168)

In Perflib, Snapshot.getGcRoots() only returns the GC roots from the first heap. Based on empirical evidence, it seems like Android has 4 heaps, and the GC Roots used to only be in the first heap, but more recent versions of Android have GC Roots in other heaps as well.

This means LeakCanary would sometimes show "No Leak Found" when there actually was a leak.

Fixes #1163 | 2019-01-10 23:32:27 | 64b6e5a41796ae1587c50c8cc860cea25f28f382

fix typo | 2018-10-17 00:43:01 | 044b1e4827bc71ec008dc3f7e43c78f58885f1e1

Fix LeakCanary toasting (#1116)

- Prior attempts to get it to work with the application context turned out to be buggy.
- This makes LeakCanary use whatever the current resumed activity is, if any.
- If there is no resumed activity, then the toast isn't displayed.

This supersedes #1080 | 2018-10-16 13:23:14 | 0e39e2eea79bc05bf7147a4074dd7163f7c401ff

fix the wrong word (#1111) | 2018-10-16 01:25:28 | 636b9b6c2b39c0c887c9ed78e904239db9bc131e

Merge pull request #1104 from IlyaGulya/bug/travis-ci-cache-fix

Fix travis caching and improve build time. | 2018-09-22 21:25:59 | 344728b906daf6d010f66bdf4ccc29ad8fedede5

Error prone 2.3.1 + suggested fix and specify version

See http://errorprone.info/bugpattern/StringSplitter | 2018-08-22 07:37:33 | a6b6960d73a1da9661f4e85254570bf5f867f954

Merge pull request #1089 from hzsweers/z/fixAnother

Quick followup to #1088 | 2018-08-22 03:15:15 | be973f5f5da6a3516aedab98e639690697617747

Merge pull request #1087 from Goddchen/patch-2

Updated german translation | 2018-08-20 13:52:47 | b43c279b3e1623c193e1dc81955527f70e93f822

Merge pull request #1063 from javmarina/patch-1

Fixed wrong versions in AndroidExcludedRefs | 2018-07-25 18:31:55 | 3b4ebe3e2571377f93e9a6976e021324502a0f78

Fixed wrong versions in AndroidExcludedRefs

Commit https://android.googlesource.com/platform/frameworks/base/+/27db46850b708070452c0ce49daf5f79503fbde6 introduced this issue. This commit was first included in Jelly Bean 4.3 (JELLY_BEAN_MR2), not Jelly Bean 4.1 (JELLY_BEAN)
Commit https://android.googlesource.com/platform/frameworks/base/+/5200e1cb07190a1f6874d72a4561064cad3ee3e0 fixes this issue and was first included in Oreo 8.0 (O). Nougat still has this memory leak. | 2018-07-24 18:24:59 | e4778b25f2c6e65ebc485d255e38586c7d45ec97

Merge pull request #1057 from square/py/ui_bug

Fix drawing of start line | 2018-07-20 22:21:19 | af96577a7d19e4df9f63d95fd9c3bfd2adcddb5d

Avoid Toast crashes

Showing a toast can crash on API 25 because the Window Manager can throw a BadTokenException when addView is called.

This change fixes it by configuring the toast manually and calling the window manager directly. This is based on https://github.com/pyricau/frenchtoast/blob/master/frenchtoast/src/main/java/frenchtoast/Mixture.java#L49 .

Fixes #844 | 2018-07-20 16:11:22 | c9ebc5cf5099c093bde5d3309b2692cb0e2016d8

Fixing setup bug | 2018-06-28 04:07:09 | 505933817cf6e2eb0dad4a78d4c7c35a072b9868

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

fix typo | 2019-08-02 15:31:17 | a2452f61e78e689efb59adaf71384d74447578b0

Add / fix android inspectors (#1491)

* Added MortarScope and ViewRootImpl inspectors
* Fixed the ContextWrapper inspector

Fixes #1490
Fixes #1389 | 2019-07-25 22:50:48 | 915f8359690a016a09e66608a041454b9c8c52cb

Documenting public APIs (#1476)

Also fixed naming and other things that weren't right.

Fixes #1474 | 2019-07-19 06:57:25 | 41c69a5d424b4236114c5ce1b077afdad38e57a5

Adding CLI for LeakCanary (#1456)

Example usage:
```
./gradlew leakcanary-cli:run --args='analyze-process com.example.leakcanary'

./gradlew leakcanary-cli:run --args='dump-process com.example.leakcanary'

./gradlew leakcanary-cli:run --args='analyze-file /path/to/heapdump.hprof'
```

Also fixed a bug in ShortestPathFinder which did not ignore null references in object arrays | 2019-07-11 19:11:30 | eded1c96e84f37393857ba4de2580aec784b2391

Behavior change & bugfixes for retained count notification (#1433)

* Bugfix: when tapping the "dump heap" notification, if the GC found no retained instance we didn't use a distinct notification id to communicate that, and then soon after we'd dismiss the notification that let's the user know there is no retained instances on tap.
* Bugfix: we weren't running the GC when checking for retained instances and the count was under the threshold
* Change: we now update the notification and keep it around for 30 seconds when the count goes to 0
* Change: the "no retained instance" notification that shows on tap is identical and also auto dismisses after 30 seconds.
* Change: we're checking for retained references (and running the GC) every 2 seconds instead of 5.

Fixes #1427 | 2019-07-03 20:55:47 | 968083a915343d881bd63e40587c070fde543732

Update how to fix a leak | 2019-06-25 05:46:56 | 177e7fd12933d99eca7a526851c53e598a03bf90

Text rendering tests (#1378)

* Added test coverage for text rendering
* Fixed bug: labels were not rendered on the last node (leaking instance)
* Matched exclusions are now rendered on their own line

Fixes #1375
Fixes #1350 | 2019-06-04 09:32:11 | 1926cb1db73f9583e11c557dbf2e5d46e3896a6e

Thread name based exclusions (#1353)

* Readded support for exclusions of local variable based on thread names
* Renamed ThreadExclusion to JavaLocalExclusion
* Fixed bug: KeyedWeakReference was not always ignored because its superclass is has a weakly reachable exclusion.
* Fixed bug: all root nodes had the same visit order as the first non root enqueued item, making it possible for a non root node to be dequeued before we're done with all roots.
* Redded gc root sorting
* Added tests to cover all uncovered bugs
* Added support for parsing StackFrameRecord

Fixes #1339 | 2019-05-20 13:17:18 | 6c2ee609efda323e88a4964d31fc5a5f0532f776

Reachability => LeakStatus (#1340)

* Combined leaking information from inspectors to solving conflicts while keeping all reasons
* Made reason from view leak inspector more obvious, and added label data about internals
* Moved reachability into LeakTraceElement
* Reachability renamed to LeakNodeStatus and leaking / not leaking
* ReachabilityInspector and Labeler are now functions with type aliases

Related to #1336: should fix the crash, though it's still unclear why AppCompatButton was a gc root there. | 2019-05-07 14:56:59 | 01210bbbfaecb3bcb6057c62b2195366d3bfa4f9

Revamp notifications (#1335)

* New notification that shows the count of retained instances. Tapping it triggers a heap dump. Fixes #1325
* Notifications are now split into two channels: default for results, and low for everything else.
* New config options: LeakCanary.config.dumpHeapWhenDebugging (default false) and LeakCanary.config.retainedVisibleThreshold (default 5)
* Replaced notification int constants and timestamps with resource ids.
* Don't show background notifications in instant apps (#1197) | 2019-05-05 16:38:26 | b14d9bc9c0a87119137bc0998bdec9314186dfcf

Highlighting new leaks (#1334)

New leaks are leaks that have a leak group that doesn't exist in any prior analysis.

* The notification now reports the count of leaks, with a split of new, known, and won't fix.
* The analysis success screen shows new leaks
* Moved description prefixes to be computed rather than inserted in the DB

Fixes #1328 | 2019-05-05 09:37:38 | f9a0518d4ddd69b782b6302caa3e3039787038e4

LeakSentry can be disabled (#1332)

LeakCanary has an enabled config option. Default is on in debug builds off in release builds.

Fixes #1327 | 2019-05-04 17:52:47 | f74f60901f34c751e8b8798d626678aa6233c893

Revert "fix trailing spaces per checkstyle"

This reverts commit ff17f879ec92ec326f8b1c6b7b8d77a5266d6622. | 2019-05-04 08:04:21 | 03136ca7dc1680299d710f79ca885412a1564144

Add test coverage for heap analysis (#1329)

* Fixed bug when reachability inspectors conflicts (reachable should win and erase unreachable)
* Added back support for leaking instances being empty objects, strings, primitive arrays or any object that we otherwise don't follow to find shortest paths. | 2019-05-04 07:51:02 | 59558e655d537c7654c411eebfd840773a8b77c9

Introducing exclusion priority (#1317)

* Add segmented FIFO queue

Unified several queues into one segmented FIFO queue. This will enable us to add several levels of priority.

* Introducing exclusion priority

* "excludedLeak" is now known as "won't fix leak", which matches its reality better. It's a leak that is known and real yet we're not fixing.
* Exclusion.alwaysExclude is replaced with Exclusion.status, with 3 possible values: NEVER_REACHABLE, WONT_FIX_LEAK, WEAKLY_REACHABLE.
* The shortest path finder will now follow weak references after all other paths have been exhausted.
* Removed class exclusion, was confusing, replaced with less lazy approach of listing fields to exclude
* VIEWLOCATIONHOLDER_ROOT should not have been always excluded, fixed.

Fixes #1173 ... well kinda. Instead of "non leaking retained instances", LeakCanary will report weakly reachable traces. Not sure if that'll help but it's a foundation we can build on. | 2019-04-30 17:44:15 | b0eedc553995e354e2382b3378bf0348801cd3c5

AllFieldsLabeler & cleanups (#1316)

* Add new optional labeler that prints all fields (useful for debugging)
* Move deprecated AnalysisResult to perflib
* Made DefaultAnalysisResultListener an object | 2019-04-30 07:08:29 | b9ee5356db265412db39c4c341880f305fbf2c76

fix format | 2019-04-22 06:25:09 | 4a2b158913e5a9eb0d5c6fdfbf949a80fc1b2c6b

Rename default to perflib and experimental to default (#1282)

* Remove experimental from module names

* Remove experimental prefix, add perflib prefix:

* update docs | 2019-04-19 06:01:39 | 425a9f24deb72691b02cdc85f80d177c05afebc5

fix list | 2019-04-18 21:55:43 | 8e3f9d26e8d3555bf934b99ac062aabc3aba528f

fix broken master | 2019-04-10 15:00:30 | f067ae53e050c5f52f47237440a6ac7eee3ca94c

fix broken build due to typo | 2019-04-10 05:44:19 | 7d4ddb4ffe3c9b0f30a84848675452dded0d4115

Leaking information aligned below simple class name. (#1258)

Also fixed issue where extraString + exclusionString were showing after the squiggly line.

Before: 
``` 
┬
├─ java.lang.Thread
│                 Leaking: NO (it's a GC root)
│                 ↓ thread Thread.<Java Local>
│                                ~~~~~~~~~~~~~ (named 'Thread-4')
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                 Leaking: UNKNOWN
│                 ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                     ~~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) 
```
After: 
``` 
┬
├─ java.lang.Thread
│            Leaking: NO (it's a GC root)
│            ↓ thread Thread.<Java Local> (named 'Thread-4')
│                            ~~~~~~~~~~~~
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                         Leaking: UNKNOWN
│                         ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                              ~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) ``` | 2019-04-05 20:11:47 | a938855585c7cf2522ffbd143d4bb66a234eea66

Add share to Stack Overflow button when viewing a leak (#1252)

* Add share to Stack Overflow button when viewing a leak

* Add question tag, lengthen toast and fix build failure. | 2019-04-04 20:49:50 | 8724d2aaffc07904517a3b823867802ca43233ae

Check if serviceInfo.processName is null. When LeakCanary runs on a seperate process and that process for some reason does not have a assigned processName, then we will crash on a NullPointerException. Also a debug log explaining this. (#1225) | 2019-04-01 19:20:40 | 3efc43608ed71dc20b0ad1e0e80e33d15249666f

fix master broken | 2019-04-01 19:07:27 | fe42130029174681a708b7d8622412efbaf81e73

fix trailing spaces per checkstyle | 2019-03-29 22:34:58 | ff17f879ec92ec326f8b1c6b7b8d77a5266d6622

Fix GC Root bugs that missed leaks (#1168)

In Perflib, Snapshot.getGcRoots() only returns the GC roots from the first heap. Based on empirical evidence, it seems like Android has 4 heaps, and the GC Roots used to only be in the first heap, but more recent versions of Android have GC Roots in other heaps as well.

This means LeakCanary would sometimes show "No Leak Found" when there actually was a leak.

Fixes #1163 | 2019-01-10 23:32:27 | 64b6e5a41796ae1587c50c8cc860cea25f28f382

fix typo | 2018-10-17 00:43:01 | 044b1e4827bc71ec008dc3f7e43c78f58885f1e1

Fix LeakCanary toasting (#1116)

- Prior attempts to get it to work with the application context turned out to be buggy.
- This makes LeakCanary use whatever the current resumed activity is, if any.
- If there is no resumed activity, then the toast isn't displayed.

This supersedes #1080 | 2018-10-16 13:23:14 | 0e39e2eea79bc05bf7147a4074dd7163f7c401ff

fix the wrong word (#1111) | 2018-10-16 01:25:28 | 636b9b6c2b39c0c887c9ed78e904239db9bc131e

Merge pull request #1104 from IlyaGulya/bug/travis-ci-cache-fix

Fix travis caching and improve build time. | 2018-09-22 21:25:59 | 344728b906daf6d010f66bdf4ccc29ad8fedede5

Error prone 2.3.1 + suggested fix and specify version

See http://errorprone.info/bugpattern/StringSplitter | 2018-08-22 07:37:33 | a6b6960d73a1da9661f4e85254570bf5f867f954

Merge pull request #1089 from hzsweers/z/fixAnother

Quick followup to #1088 | 2018-08-22 03:15:15 | be973f5f5da6a3516aedab98e639690697617747

Merge pull request #1087 from Goddchen/patch-2

Updated german translation | 2018-08-20 13:52:47 | b43c279b3e1623c193e1dc81955527f70e93f822

Merge pull request #1063 from javmarina/patch-1

Fixed wrong versions in AndroidExcludedRefs | 2018-07-25 18:31:55 | 3b4ebe3e2571377f93e9a6976e021324502a0f78

Fixed wrong versions in AndroidExcludedRefs

Commit https://android.googlesource.com/platform/frameworks/base/+/27db46850b708070452c0ce49daf5f79503fbde6 introduced this issue. This commit was first included in Jelly Bean 4.3 (JELLY_BEAN_MR2), not Jelly Bean 4.1 (JELLY_BEAN)
Commit https://android.googlesource.com/platform/frameworks/base/+/5200e1cb07190a1f6874d72a4561064cad3ee3e0 fixes this issue and was first included in Oreo 8.0 (O). Nougat still has this memory leak. | 2018-07-24 18:24:59 | e4778b25f2c6e65ebc485d255e38586c7d45ec97

Merge pull request #1057 from square/py/ui_bug

Fix drawing of start line | 2018-07-20 22:21:19 | af96577a7d19e4df9f63d95fd9c3bfd2adcddb5d

Avoid Toast crashes

Showing a toast can crash on API 25 because the Window Manager can throw a BadTokenException when addView is called.

This change fixes it by configuring the toast manually and calling the window manager directly. This is based on https://github.com/pyricau/frenchtoast/blob/master/frenchtoast/src/main/java/frenchtoast/Mixture.java#L49 .

Fixes #844 | 2018-07-20 16:11:22 | c9ebc5cf5099c093bde5d3309b2692cb0e2016d8

Fixing setup bug | 2018-06-28 04:07:09 | 505933817cf6e2eb0dad4a78d4c7c35a072b9868

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

Fixing setup bug | 2018-06-28 04:07:09 | 505933817cf6e2eb0dad4a78d4c7c35a072b9868

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

fix typo | 2018-10-17 00:43:01 | 044b1e4827bc71ec008dc3f7e43c78f58885f1e1

Fix LeakCanary toasting (#1116)

- Prior attempts to get it to work with the application context turned out to be buggy.
- This makes LeakCanary use whatever the current resumed activity is, if any.
- If there is no resumed activity, then the toast isn't displayed.

This supersedes #1080 | 2018-10-16 13:23:14 | 0e39e2eea79bc05bf7147a4074dd7163f7c401ff

fix the wrong word (#1111) | 2018-10-16 01:25:28 | 636b9b6c2b39c0c887c9ed78e904239db9bc131e

Merge pull request #1104 from IlyaGulya/bug/travis-ci-cache-fix

Fix travis caching and improve build time. | 2018-09-22 21:25:59 | 344728b906daf6d010f66bdf4ccc29ad8fedede5

Error prone 2.3.1 + suggested fix and specify version

See http://errorprone.info/bugpattern/StringSplitter | 2018-08-22 07:37:33 | a6b6960d73a1da9661f4e85254570bf5f867f954

Merge pull request #1089 from hzsweers/z/fixAnother

Quick followup to #1088 | 2018-08-22 03:15:15 | be973f5f5da6a3516aedab98e639690697617747

Merge pull request #1087 from Goddchen/patch-2

Updated german translation | 2018-08-20 13:52:47 | b43c279b3e1623c193e1dc81955527f70e93f822

Merge pull request #1063 from javmarina/patch-1

Fixed wrong versions in AndroidExcludedRefs | 2018-07-25 18:31:55 | 3b4ebe3e2571377f93e9a6976e021324502a0f78

Fixed wrong versions in AndroidExcludedRefs

Commit https://android.googlesource.com/platform/frameworks/base/+/27db46850b708070452c0ce49daf5f79503fbde6 introduced this issue. This commit was first included in Jelly Bean 4.3 (JELLY_BEAN_MR2), not Jelly Bean 4.1 (JELLY_BEAN)
Commit https://android.googlesource.com/platform/frameworks/base/+/5200e1cb07190a1f6874d72a4561064cad3ee3e0 fixes this issue and was first included in Oreo 8.0 (O). Nougat still has this memory leak. | 2018-07-24 18:24:59 | e4778b25f2c6e65ebc485d255e38586c7d45ec97

Merge pull request #1057 from square/py/ui_bug

Fix drawing of start line | 2018-07-20 22:21:19 | af96577a7d19e4df9f63d95fd9c3bfd2adcddb5d

Avoid Toast crashes

Showing a toast can crash on API 25 because the Window Manager can throw a BadTokenException when addView is called.

This change fixes it by configuring the toast manually and calling the window manager directly. This is based on https://github.com/pyricau/frenchtoast/blob/master/frenchtoast/src/main/java/frenchtoast/Mixture.java#L49 .

Fixes #844 | 2018-07-20 16:11:22 | c9ebc5cf5099c093bde5d3309b2692cb0e2016d8

Fixing setup bug | 2018-06-28 04:07:09 | 505933817cf6e2eb0dad4a78d4c7c35a072b9868

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

Parsing and applying proguard mapping during heap analysis (#1542)

* Parsing and applying proguard mapping during heap analysis

* Parsing and applying proguard mapping during heap analysis

* Rebased onto master

* Post review changes and updated shark-cli to support mapping files

* Post review fixes

* Moving proguard mapping reader out of the analyzer and formatting fixes | 2019-08-30 16:54:20 | 66182a52069d9be59d0af6220aa9afd74218aa9b

fix images | 2019-08-27 20:02:50 | 8f5030e9faa8690217e1bd436274a3de5b9d3fb3

fix image links in docs | 2019-08-27 19:59:20 | edca56a947278508350bfa5dd33d3fa10699001f

Merge pull request #1549 from Armaxis/patch-1

Added section about using Detekt to Contributing | 2019-08-24 22:16:26 | c923d14909888860a99d5899af17f5b52c9b000f

Revert "Replaced accessor with a call to setter to fix the build issue"

This reverts commit 82db0398 | 2019-08-17 02:21:08 | c570cb9b0fd7bd7fcc88c4d3b529df8837e98fdc

Replaced accessor with a call to setter to fix the build issue | 2019-08-16 04:32:25 | 82db039843303044f91d36ba7c43595ab59bacd5

fix typo | 2019-08-02 15:31:17 | a2452f61e78e689efb59adaf71384d74447578b0

Add / fix android inspectors (#1491)

* Added MortarScope and ViewRootImpl inspectors
* Fixed the ContextWrapper inspector

Fixes #1490
Fixes #1389 | 2019-07-25 22:50:48 | 915f8359690a016a09e66608a041454b9c8c52cb

Documenting public APIs (#1476)

Also fixed naming and other things that weren't right.

Fixes #1474 | 2019-07-19 06:57:25 | 41c69a5d424b4236114c5ce1b077afdad38e57a5

Adding CLI for LeakCanary (#1456)

Example usage:
```
./gradlew leakcanary-cli:run --args='analyze-process com.example.leakcanary'

./gradlew leakcanary-cli:run --args='dump-process com.example.leakcanary'

./gradlew leakcanary-cli:run --args='analyze-file /path/to/heapdump.hprof'
```

Also fixed a bug in ShortestPathFinder which did not ignore null references in object arrays | 2019-07-11 19:11:30 | eded1c96e84f37393857ba4de2580aec784b2391

Behavior change & bugfixes for retained count notification (#1433)

* Bugfix: when tapping the "dump heap" notification, if the GC found no retained instance we didn't use a distinct notification id to communicate that, and then soon after we'd dismiss the notification that let's the user know there is no retained instances on tap.
* Bugfix: we weren't running the GC when checking for retained instances and the count was under the threshold
* Change: we now update the notification and keep it around for 30 seconds when the count goes to 0
* Change: the "no retained instance" notification that shows on tap is identical and also auto dismisses after 30 seconds.
* Change: we're checking for retained references (and running the GC) every 2 seconds instead of 5.

Fixes #1427 | 2019-07-03 20:55:47 | 968083a915343d881bd63e40587c070fde543732

Update how to fix a leak | 2019-06-25 05:46:56 | 177e7fd12933d99eca7a526851c53e598a03bf90

Text rendering tests (#1378)

* Added test coverage for text rendering
* Fixed bug: labels were not rendered on the last node (leaking instance)
* Matched exclusions are now rendered on their own line

Fixes #1375
Fixes #1350 | 2019-06-04 09:32:11 | 1926cb1db73f9583e11c557dbf2e5d46e3896a6e

Thread name based exclusions (#1353)

* Readded support for exclusions of local variable based on thread names
* Renamed ThreadExclusion to JavaLocalExclusion
* Fixed bug: KeyedWeakReference was not always ignored because its superclass is has a weakly reachable exclusion.
* Fixed bug: all root nodes had the same visit order as the first non root enqueued item, making it possible for a non root node to be dequeued before we're done with all roots.
* Redded gc root sorting
* Added tests to cover all uncovered bugs
* Added support for parsing StackFrameRecord

Fixes #1339 | 2019-05-20 13:17:18 | 6c2ee609efda323e88a4964d31fc5a5f0532f776

Reachability => LeakStatus (#1340)

* Combined leaking information from inspectors to solving conflicts while keeping all reasons
* Made reason from view leak inspector more obvious, and added label data about internals
* Moved reachability into LeakTraceElement
* Reachability renamed to LeakNodeStatus and leaking / not leaking
* ReachabilityInspector and Labeler are now functions with type aliases

Related to #1336: should fix the crash, though it's still unclear why AppCompatButton was a gc root there. | 2019-05-07 14:56:59 | 01210bbbfaecb3bcb6057c62b2195366d3bfa4f9

Revamp notifications (#1335)

* New notification that shows the count of retained instances. Tapping it triggers a heap dump. Fixes #1325
* Notifications are now split into two channels: default for results, and low for everything else.
* New config options: LeakCanary.config.dumpHeapWhenDebugging (default false) and LeakCanary.config.retainedVisibleThreshold (default 5)
* Replaced notification int constants and timestamps with resource ids.
* Don't show background notifications in instant apps (#1197) | 2019-05-05 16:38:26 | b14d9bc9c0a87119137bc0998bdec9314186dfcf

Highlighting new leaks (#1334)

New leaks are leaks that have a leak group that doesn't exist in any prior analysis.

* The notification now reports the count of leaks, with a split of new, known, and won't fix.
* The analysis success screen shows new leaks
* Moved description prefixes to be computed rather than inserted in the DB

Fixes #1328 | 2019-05-05 09:37:38 | f9a0518d4ddd69b782b6302caa3e3039787038e4

LeakSentry can be disabled (#1332)

LeakCanary has an enabled config option. Default is on in debug builds off in release builds.

Fixes #1327 | 2019-05-04 17:52:47 | f74f60901f34c751e8b8798d626678aa6233c893

Revert "fix trailing spaces per checkstyle"

This reverts commit ff17f879ec92ec326f8b1c6b7b8d77a5266d6622. | 2019-05-04 08:04:21 | 03136ca7dc1680299d710f79ca885412a1564144

Add test coverage for heap analysis (#1329)

* Fixed bug when reachability inspectors conflicts (reachable should win and erase unreachable)
* Added back support for leaking instances being empty objects, strings, primitive arrays or any object that we otherwise don't follow to find shortest paths. | 2019-05-04 07:51:02 | 59558e655d537c7654c411eebfd840773a8b77c9

Introducing exclusion priority (#1317)

* Add segmented FIFO queue

Unified several queues into one segmented FIFO queue. This will enable us to add several levels of priority.

* Introducing exclusion priority

* "excludedLeak" is now known as "won't fix leak", which matches its reality better. It's a leak that is known and real yet we're not fixing.
* Exclusion.alwaysExclude is replaced with Exclusion.status, with 3 possible values: NEVER_REACHABLE, WONT_FIX_LEAK, WEAKLY_REACHABLE.
* The shortest path finder will now follow weak references after all other paths have been exhausted.
* Removed class exclusion, was confusing, replaced with less lazy approach of listing fields to exclude
* VIEWLOCATIONHOLDER_ROOT should not have been always excluded, fixed.

Fixes #1173 ... well kinda. Instead of "non leaking retained instances", LeakCanary will report weakly reachable traces. Not sure if that'll help but it's a foundation we can build on. | 2019-04-30 17:44:15 | b0eedc553995e354e2382b3378bf0348801cd3c5

AllFieldsLabeler & cleanups (#1316)

* Add new optional labeler that prints all fields (useful for debugging)
* Move deprecated AnalysisResult to perflib
* Made DefaultAnalysisResultListener an object | 2019-04-30 07:08:29 | b9ee5356db265412db39c4c341880f305fbf2c76

fix format | 2019-04-22 06:25:09 | 4a2b158913e5a9eb0d5c6fdfbf949a80fc1b2c6b

Rename default to perflib and experimental to default (#1282)

* Remove experimental from module names

* Remove experimental prefix, add perflib prefix:

* update docs | 2019-04-19 06:01:39 | 425a9f24deb72691b02cdc85f80d177c05afebc5

fix list | 2019-04-18 21:55:43 | 8e3f9d26e8d3555bf934b99ac062aabc3aba528f

fix broken master | 2019-04-10 15:00:30 | f067ae53e050c5f52f47237440a6ac7eee3ca94c

fix broken build due to typo | 2019-04-10 05:44:19 | 7d4ddb4ffe3c9b0f30a84848675452dded0d4115

Leaking information aligned below simple class name. (#1258)

Also fixed issue where extraString + exclusionString were showing after the squiggly line.

Before: 
``` 
┬
├─ java.lang.Thread
│                 Leaking: NO (it's a GC root)
│                 ↓ thread Thread.<Java Local>
│                                ~~~~~~~~~~~~~ (named 'Thread-4')
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                 Leaking: UNKNOWN
│                 ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                     ~~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) 
```
After: 
``` 
┬
├─ java.lang.Thread
│            Leaking: NO (it's a GC root)
│            ↓ thread Thread.<Java Local> (named 'Thread-4')
│                            ~~~~~~~~~~~~
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                         Leaking: UNKNOWN
│                         ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                              ~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) ``` | 2019-04-05 20:11:47 | a938855585c7cf2522ffbd143d4bb66a234eea66

Add share to Stack Overflow button when viewing a leak (#1252)

* Add share to Stack Overflow button when viewing a leak

* Add question tag, lengthen toast and fix build failure. | 2019-04-04 20:49:50 | 8724d2aaffc07904517a3b823867802ca43233ae

Check if serviceInfo.processName is null. When LeakCanary runs on a seperate process and that process for some reason does not have a assigned processName, then we will crash on a NullPointerException. Also a debug log explaining this. (#1225) | 2019-04-01 19:20:40 | 3efc43608ed71dc20b0ad1e0e80e33d15249666f

fix master broken | 2019-04-01 19:07:27 | fe42130029174681a708b7d8622412efbaf81e73

fix trailing spaces per checkstyle | 2019-03-29 22:34:58 | ff17f879ec92ec326f8b1c6b7b8d77a5266d6622

Fix GC Root bugs that missed leaks (#1168)

In Perflib, Snapshot.getGcRoots() only returns the GC roots from the first heap. Based on empirical evidence, it seems like Android has 4 heaps, and the GC Roots used to only be in the first heap, but more recent versions of Android have GC Roots in other heaps as well.

This means LeakCanary would sometimes show "No Leak Found" when there actually was a leak.

Fixes #1163 | 2019-01-10 23:32:27 | 64b6e5a41796ae1587c50c8cc860cea25f28f382

fix typo | 2018-10-17 00:43:01 | 044b1e4827bc71ec008dc3f7e43c78f58885f1e1

Fix LeakCanary toasting (#1116)

- Prior attempts to get it to work with the application context turned out to be buggy.
- This makes LeakCanary use whatever the current resumed activity is, if any.
- If there is no resumed activity, then the toast isn't displayed.

This supersedes #1080 | 2018-10-16 13:23:14 | 0e39e2eea79bc05bf7147a4074dd7163f7c401ff

fix the wrong word (#1111) | 2018-10-16 01:25:28 | 636b9b6c2b39c0c887c9ed78e904239db9bc131e

Merge pull request #1104 from IlyaGulya/bug/travis-ci-cache-fix

Fix travis caching and improve build time. | 2018-09-22 21:25:59 | 344728b906daf6d010f66bdf4ccc29ad8fedede5

Error prone 2.3.1 + suggested fix and specify version

See http://errorprone.info/bugpattern/StringSplitter | 2018-08-22 07:37:33 | a6b6960d73a1da9661f4e85254570bf5f867f954

Merge pull request #1089 from hzsweers/z/fixAnother

Quick followup to #1088 | 2018-08-22 03:15:15 | be973f5f5da6a3516aedab98e639690697617747

Merge pull request #1087 from Goddchen/patch-2

Updated german translation | 2018-08-20 13:52:47 | b43c279b3e1623c193e1dc81955527f70e93f822

Merge pull request #1063 from javmarina/patch-1

Fixed wrong versions in AndroidExcludedRefs | 2018-07-25 18:31:55 | 3b4ebe3e2571377f93e9a6976e021324502a0f78

Fixed wrong versions in AndroidExcludedRefs

Commit https://android.googlesource.com/platform/frameworks/base/+/27db46850b708070452c0ce49daf5f79503fbde6 introduced this issue. This commit was first included in Jelly Bean 4.3 (JELLY_BEAN_MR2), not Jelly Bean 4.1 (JELLY_BEAN)
Commit https://android.googlesource.com/platform/frameworks/base/+/5200e1cb07190a1f6874d72a4561064cad3ee3e0 fixes this issue and was first included in Oreo 8.0 (O). Nougat still has this memory leak. | 2018-07-24 18:24:59 | e4778b25f2c6e65ebc485d255e38586c7d45ec97

Merge pull request #1057 from square/py/ui_bug

Fix drawing of start line | 2018-07-20 22:21:19 | af96577a7d19e4df9f63d95fd9c3bfd2adcddb5d

Avoid Toast crashes

Showing a toast can crash on API 25 because the Window Manager can throw a BadTokenException when addView is called.

This change fixes it by configuring the toast manually and calling the window manager directly. This is based on https://github.com/pyricau/frenchtoast/blob/master/frenchtoast/src/main/java/frenchtoast/Mixture.java#L49 .

Fixes #844 | 2018-07-20 16:11:22 | c9ebc5cf5099c093bde5d3309b2692cb0e2016d8

Fixing setup bug | 2018-06-28 04:07:09 | 505933817cf6e2eb0dad4a78d4c7c35a072b9868

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

fix format | 2019-04-22 06:25:09 | 4a2b158913e5a9eb0d5c6fdfbf949a80fc1b2c6b

Rename default to perflib and experimental to default (#1282)

* Remove experimental from module names

* Remove experimental prefix, add perflib prefix:

* update docs | 2019-04-19 06:01:39 | 425a9f24deb72691b02cdc85f80d177c05afebc5

fix list | 2019-04-18 21:55:43 | 8e3f9d26e8d3555bf934b99ac062aabc3aba528f

fix broken master | 2019-04-10 15:00:30 | f067ae53e050c5f52f47237440a6ac7eee3ca94c

fix broken build due to typo | 2019-04-10 05:44:19 | 7d4ddb4ffe3c9b0f30a84848675452dded0d4115

Leaking information aligned below simple class name. (#1258)

Also fixed issue where extraString + exclusionString were showing after the squiggly line.

Before: 
``` 
┬
├─ java.lang.Thread
│                 Leaking: NO (it's a GC root)
│                 ↓ thread Thread.<Java Local>
│                                ~~~~~~~~~~~~~ (named 'Thread-4')
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                 Leaking: UNKNOWN
│                 ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                     ~~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) 
```
After: 
``` 
┬
├─ java.lang.Thread
│            Leaking: NO (it's a GC root)
│            ↓ thread Thread.<Java Local> (named 'Thread-4')
│                            ~~~~~~~~~~~~
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                         Leaking: UNKNOWN
│                         ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                              ~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) ``` | 2019-04-05 20:11:47 | a938855585c7cf2522ffbd143d4bb66a234eea66

Add share to Stack Overflow button when viewing a leak (#1252)

* Add share to Stack Overflow button when viewing a leak

* Add question tag, lengthen toast and fix build failure. | 2019-04-04 20:49:50 | 8724d2aaffc07904517a3b823867802ca43233ae

Check if serviceInfo.processName is null. When LeakCanary runs on a seperate process and that process for some reason does not have a assigned processName, then we will crash on a NullPointerException. Also a debug log explaining this. (#1225) | 2019-04-01 19:20:40 | 3efc43608ed71dc20b0ad1e0e80e33d15249666f

fix master broken | 2019-04-01 19:07:27 | fe42130029174681a708b7d8622412efbaf81e73

Fix GC Root bugs that missed leaks (#1168)

In Perflib, Snapshot.getGcRoots() only returns the GC roots from the first heap. Based on empirical evidence, it seems like Android has 4 heaps, and the GC Roots used to only be in the first heap, but more recent versions of Android have GC Roots in other heaps as well.

This means LeakCanary would sometimes show "No Leak Found" when there actually was a leak.

Fixes #1163 | 2019-01-10 23:32:27 | 64b6e5a41796ae1587c50c8cc860cea25f28f382

fix typo | 2018-10-17 00:43:01 | 044b1e4827bc71ec008dc3f7e43c78f58885f1e1

Fix LeakCanary toasting (#1116)

- Prior attempts to get it to work with the application context turned out to be buggy.
- This makes LeakCanary use whatever the current resumed activity is, if any.
- If there is no resumed activity, then the toast isn't displayed.

This supersedes #1080 | 2018-10-16 13:23:14 | 0e39e2eea79bc05bf7147a4074dd7163f7c401ff

fix the wrong word (#1111) | 2018-10-16 01:25:28 | 636b9b6c2b39c0c887c9ed78e904239db9bc131e

Merge pull request #1104 from IlyaGulya/bug/travis-ci-cache-fix

Fix travis caching and improve build time. | 2018-09-22 21:25:59 | 344728b906daf6d010f66bdf4ccc29ad8fedede5

Error prone 2.3.1 + suggested fix and specify version

See http://errorprone.info/bugpattern/StringSplitter | 2018-08-22 07:37:33 | a6b6960d73a1da9661f4e85254570bf5f867f954

Merge pull request #1089 from hzsweers/z/fixAnother

Quick followup to #1088 | 2018-08-22 03:15:15 | be973f5f5da6a3516aedab98e639690697617747

Merge pull request #1087 from Goddchen/patch-2

Updated german translation | 2018-08-20 13:52:47 | b43c279b3e1623c193e1dc81955527f70e93f822

Merge pull request #1063 from javmarina/patch-1

Fixed wrong versions in AndroidExcludedRefs | 2018-07-25 18:31:55 | 3b4ebe3e2571377f93e9a6976e021324502a0f78

Fixed wrong versions in AndroidExcludedRefs

Commit https://android.googlesource.com/platform/frameworks/base/+/27db46850b708070452c0ce49daf5f79503fbde6 introduced this issue. This commit was first included in Jelly Bean 4.3 (JELLY_BEAN_MR2), not Jelly Bean 4.1 (JELLY_BEAN)
Commit https://android.googlesource.com/platform/frameworks/base/+/5200e1cb07190a1f6874d72a4561064cad3ee3e0 fixes this issue and was first included in Oreo 8.0 (O). Nougat still has this memory leak. | 2018-07-24 18:24:59 | e4778b25f2c6e65ebc485d255e38586c7d45ec97

Merge pull request #1057 from square/py/ui_bug

Fix drawing of start line | 2018-07-20 22:21:19 | af96577a7d19e4df9f63d95fd9c3bfd2adcddb5d

Avoid Toast crashes

Showing a toast can crash on API 25 because the Window Manager can throw a BadTokenException when addView is called.

This change fixes it by configuring the toast manually and calling the window manager directly. This is based on https://github.com/pyricau/frenchtoast/blob/master/frenchtoast/src/main/java/frenchtoast/Mixture.java#L49 .

Fixes #844 | 2018-07-20 16:11:22 | c9ebc5cf5099c093bde5d3309b2692cb0e2016d8

Fixing setup bug | 2018-06-28 04:07:09 | 505933817cf6e2eb0dad4a78d4c7c35a072b9868

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

Update how to fix a leak | 2019-06-25 05:46:56 | 177e7fd12933d99eca7a526851c53e598a03bf90

Text rendering tests (#1378)

* Added test coverage for text rendering
* Fixed bug: labels were not rendered on the last node (leaking instance)
* Matched exclusions are now rendered on their own line

Fixes #1375
Fixes #1350 | 2019-06-04 09:32:11 | 1926cb1db73f9583e11c557dbf2e5d46e3896a6e

Thread name based exclusions (#1353)

* Readded support for exclusions of local variable based on thread names
* Renamed ThreadExclusion to JavaLocalExclusion
* Fixed bug: KeyedWeakReference was not always ignored because its superclass is has a weakly reachable exclusion.
* Fixed bug: all root nodes had the same visit order as the first non root enqueued item, making it possible for a non root node to be dequeued before we're done with all roots.
* Redded gc root sorting
* Added tests to cover all uncovered bugs
* Added support for parsing StackFrameRecord

Fixes #1339 | 2019-05-20 13:17:18 | 6c2ee609efda323e88a4964d31fc5a5f0532f776

Reachability => LeakStatus (#1340)

* Combined leaking information from inspectors to solving conflicts while keeping all reasons
* Made reason from view leak inspector more obvious, and added label data about internals
* Moved reachability into LeakTraceElement
* Reachability renamed to LeakNodeStatus and leaking / not leaking
* ReachabilityInspector and Labeler are now functions with type aliases

Related to #1336: should fix the crash, though it's still unclear why AppCompatButton was a gc root there. | 2019-05-07 14:56:59 | 01210bbbfaecb3bcb6057c62b2195366d3bfa4f9

Revamp notifications (#1335)

* New notification that shows the count of retained instances. Tapping it triggers a heap dump. Fixes #1325
* Notifications are now split into two channels: default for results, and low for everything else.
* New config options: LeakCanary.config.dumpHeapWhenDebugging (default false) and LeakCanary.config.retainedVisibleThreshold (default 5)
* Replaced notification int constants and timestamps with resource ids.
* Don't show background notifications in instant apps (#1197) | 2019-05-05 16:38:26 | b14d9bc9c0a87119137bc0998bdec9314186dfcf

Highlighting new leaks (#1334)

New leaks are leaks that have a leak group that doesn't exist in any prior analysis.

* The notification now reports the count of leaks, with a split of new, known, and won't fix.
* The analysis success screen shows new leaks
* Moved description prefixes to be computed rather than inserted in the DB

Fixes #1328 | 2019-05-05 09:37:38 | f9a0518d4ddd69b782b6302caa3e3039787038e4

LeakSentry can be disabled (#1332)

LeakCanary has an enabled config option. Default is on in debug builds off in release builds.

Fixes #1327 | 2019-05-04 17:52:47 | f74f60901f34c751e8b8798d626678aa6233c893

Revert "fix trailing spaces per checkstyle"

This reverts commit ff17f879ec92ec326f8b1c6b7b8d77a5266d6622. | 2019-05-04 08:04:21 | 03136ca7dc1680299d710f79ca885412a1564144

Add test coverage for heap analysis (#1329)

* Fixed bug when reachability inspectors conflicts (reachable should win and erase unreachable)
* Added back support for leaking instances being empty objects, strings, primitive arrays or any object that we otherwise don't follow to find shortest paths. | 2019-05-04 07:51:02 | 59558e655d537c7654c411eebfd840773a8b77c9

Introducing exclusion priority (#1317)

* Add segmented FIFO queue

Unified several queues into one segmented FIFO queue. This will enable us to add several levels of priority.

* Introducing exclusion priority

* "excludedLeak" is now known as "won't fix leak", which matches its reality better. It's a leak that is known and real yet we're not fixing.
* Exclusion.alwaysExclude is replaced with Exclusion.status, with 3 possible values: NEVER_REACHABLE, WONT_FIX_LEAK, WEAKLY_REACHABLE.
* The shortest path finder will now follow weak references after all other paths have been exhausted.
* Removed class exclusion, was confusing, replaced with less lazy approach of listing fields to exclude
* VIEWLOCATIONHOLDER_ROOT should not have been always excluded, fixed.

Fixes #1173 ... well kinda. Instead of "non leaking retained instances", LeakCanary will report weakly reachable traces. Not sure if that'll help but it's a foundation we can build on. | 2019-04-30 17:44:15 | b0eedc553995e354e2382b3378bf0348801cd3c5

AllFieldsLabeler & cleanups (#1316)

* Add new optional labeler that prints all fields (useful for debugging)
* Move deprecated AnalysisResult to perflib
* Made DefaultAnalysisResultListener an object | 2019-04-30 07:08:29 | b9ee5356db265412db39c4c341880f305fbf2c76

fix format | 2019-04-22 06:25:09 | 4a2b158913e5a9eb0d5c6fdfbf949a80fc1b2c6b

Rename default to perflib and experimental to default (#1282)

* Remove experimental from module names

* Remove experimental prefix, add perflib prefix:

* update docs | 2019-04-19 06:01:39 | 425a9f24deb72691b02cdc85f80d177c05afebc5

fix list | 2019-04-18 21:55:43 | 8e3f9d26e8d3555bf934b99ac062aabc3aba528f

fix broken master | 2019-04-10 15:00:30 | f067ae53e050c5f52f47237440a6ac7eee3ca94c

fix broken build due to typo | 2019-04-10 05:44:19 | 7d4ddb4ffe3c9b0f30a84848675452dded0d4115

Leaking information aligned below simple class name. (#1258)

Also fixed issue where extraString + exclusionString were showing after the squiggly line.

Before: 
``` 
┬
├─ java.lang.Thread
│                 Leaking: NO (it's a GC root)
│                 ↓ thread Thread.<Java Local>
│                                ~~~~~~~~~~~~~ (named 'Thread-4')
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                 Leaking: UNKNOWN
│                 ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                     ~~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) 
```
After: 
``` 
┬
├─ java.lang.Thread
│            Leaking: NO (it's a GC root)
│            ↓ thread Thread.<Java Local> (named 'Thread-4')
│                            ~~~~~~~~~~~~
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                         Leaking: UNKNOWN
│                         ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                              ~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) ``` | 2019-04-05 20:11:47 | a938855585c7cf2522ffbd143d4bb66a234eea66

Add share to Stack Overflow button when viewing a leak (#1252)

* Add share to Stack Overflow button when viewing a leak

* Add question tag, lengthen toast and fix build failure. | 2019-04-04 20:49:50 | 8724d2aaffc07904517a3b823867802ca43233ae

Check if serviceInfo.processName is null. When LeakCanary runs on a seperate process and that process for some reason does not have a assigned processName, then we will crash on a NullPointerException. Also a debug log explaining this. (#1225) | 2019-04-01 19:20:40 | 3efc43608ed71dc20b0ad1e0e80e33d15249666f

fix master broken | 2019-04-01 19:07:27 | fe42130029174681a708b7d8622412efbaf81e73

fix trailing spaces per checkstyle | 2019-03-29 22:34:58 | ff17f879ec92ec326f8b1c6b7b8d77a5266d6622

Fix GC Root bugs that missed leaks (#1168)

In Perflib, Snapshot.getGcRoots() only returns the GC roots from the first heap. Based on empirical evidence, it seems like Android has 4 heaps, and the GC Roots used to only be in the first heap, but more recent versions of Android have GC Roots in other heaps as well.

This means LeakCanary would sometimes show "No Leak Found" when there actually was a leak.

Fixes #1163 | 2019-01-10 23:32:27 | 64b6e5a41796ae1587c50c8cc860cea25f28f382

fix typo | 2018-10-17 00:43:01 | 044b1e4827bc71ec008dc3f7e43c78f58885f1e1

Fix LeakCanary toasting (#1116)

- Prior attempts to get it to work with the application context turned out to be buggy.
- This makes LeakCanary use whatever the current resumed activity is, if any.
- If there is no resumed activity, then the toast isn't displayed.

This supersedes #1080 | 2018-10-16 13:23:14 | 0e39e2eea79bc05bf7147a4074dd7163f7c401ff

fix the wrong word (#1111) | 2018-10-16 01:25:28 | 636b9b6c2b39c0c887c9ed78e904239db9bc131e

Merge pull request #1104 from IlyaGulya/bug/travis-ci-cache-fix

Fix travis caching and improve build time. | 2018-09-22 21:25:59 | 344728b906daf6d010f66bdf4ccc29ad8fedede5

Error prone 2.3.1 + suggested fix and specify version

See http://errorprone.info/bugpattern/StringSplitter | 2018-08-22 07:37:33 | a6b6960d73a1da9661f4e85254570bf5f867f954

Merge pull request #1089 from hzsweers/z/fixAnother

Quick followup to #1088 | 2018-08-22 03:15:15 | be973f5f5da6a3516aedab98e639690697617747

Merge pull request #1087 from Goddchen/patch-2

Updated german translation | 2018-08-20 13:52:47 | b43c279b3e1623c193e1dc81955527f70e93f822

Merge pull request #1063 from javmarina/patch-1

Fixed wrong versions in AndroidExcludedRefs | 2018-07-25 18:31:55 | 3b4ebe3e2571377f93e9a6976e021324502a0f78

Fixed wrong versions in AndroidExcludedRefs

Commit https://android.googlesource.com/platform/frameworks/base/+/27db46850b708070452c0ce49daf5f79503fbde6 introduced this issue. This commit was first included in Jelly Bean 4.3 (JELLY_BEAN_MR2), not Jelly Bean 4.1 (JELLY_BEAN)
Commit https://android.googlesource.com/platform/frameworks/base/+/5200e1cb07190a1f6874d72a4561064cad3ee3e0 fixes this issue and was first included in Oreo 8.0 (O). Nougat still has this memory leak. | 2018-07-24 18:24:59 | e4778b25f2c6e65ebc485d255e38586c7d45ec97

Merge pull request #1057 from square/py/ui_bug

Fix drawing of start line | 2018-07-20 22:21:19 | af96577a7d19e4df9f63d95fd9c3bfd2adcddb5d

Avoid Toast crashes

Showing a toast can crash on API 25 because the Window Manager can throw a BadTokenException when addView is called.

This change fixes it by configuring the toast manually and calling the window manager directly. This is based on https://github.com/pyricau/frenchtoast/blob/master/frenchtoast/src/main/java/frenchtoast/Mixture.java#L49 .

Fixes #844 | 2018-07-20 16:11:22 | c9ebc5cf5099c093bde5d3309b2692cb0e2016d8

Fixing setup bug | 2018-06-28 04:07:09 | 505933817cf6e2eb0dad4a78d4c7c35a072b9868

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

fix typo | 2019-08-02 15:31:17 | a2452f61e78e689efb59adaf71384d74447578b0

Add / fix android inspectors (#1491)

* Added MortarScope and ViewRootImpl inspectors
* Fixed the ContextWrapper inspector

Fixes #1490
Fixes #1389 | 2019-07-25 22:50:48 | 915f8359690a016a09e66608a041454b9c8c52cb

Documenting public APIs (#1476)

Also fixed naming and other things that weren't right.

Fixes #1474 | 2019-07-19 06:57:25 | 41c69a5d424b4236114c5ce1b077afdad38e57a5

Adding CLI for LeakCanary (#1456)

Example usage:
```
./gradlew leakcanary-cli:run --args='analyze-process com.example.leakcanary'

./gradlew leakcanary-cli:run --args='dump-process com.example.leakcanary'

./gradlew leakcanary-cli:run --args='analyze-file /path/to/heapdump.hprof'
```

Also fixed a bug in ShortestPathFinder which did not ignore null references in object arrays | 2019-07-11 19:11:30 | eded1c96e84f37393857ba4de2580aec784b2391

Behavior change & bugfixes for retained count notification (#1433)

* Bugfix: when tapping the "dump heap" notification, if the GC found no retained instance we didn't use a distinct notification id to communicate that, and then soon after we'd dismiss the notification that let's the user know there is no retained instances on tap.
* Bugfix: we weren't running the GC when checking for retained instances and the count was under the threshold
* Change: we now update the notification and keep it around for 30 seconds when the count goes to 0
* Change: the "no retained instance" notification that shows on tap is identical and also auto dismisses after 30 seconds.
* Change: we're checking for retained references (and running the GC) every 2 seconds instead of 5.

Fixes #1427 | 2019-07-03 20:55:47 | 968083a915343d881bd63e40587c070fde543732

Update how to fix a leak | 2019-06-25 05:46:56 | 177e7fd12933d99eca7a526851c53e598a03bf90

Text rendering tests (#1378)

* Added test coverage for text rendering
* Fixed bug: labels were not rendered on the last node (leaking instance)
* Matched exclusions are now rendered on their own line

Fixes #1375
Fixes #1350 | 2019-06-04 09:32:11 | 1926cb1db73f9583e11c557dbf2e5d46e3896a6e

Thread name based exclusions (#1353)

* Readded support for exclusions of local variable based on thread names
* Renamed ThreadExclusion to JavaLocalExclusion
* Fixed bug: KeyedWeakReference was not always ignored because its superclass is has a weakly reachable exclusion.
* Fixed bug: all root nodes had the same visit order as the first non root enqueued item, making it possible for a non root node to be dequeued before we're done with all roots.
* Redded gc root sorting
* Added tests to cover all uncovered bugs
* Added support for parsing StackFrameRecord

Fixes #1339 | 2019-05-20 13:17:18 | 6c2ee609efda323e88a4964d31fc5a5f0532f776

Reachability => LeakStatus (#1340)

* Combined leaking information from inspectors to solving conflicts while keeping all reasons
* Made reason from view leak inspector more obvious, and added label data about internals
* Moved reachability into LeakTraceElement
* Reachability renamed to LeakNodeStatus and leaking / not leaking
* ReachabilityInspector and Labeler are now functions with type aliases

Related to #1336: should fix the crash, though it's still unclear why AppCompatButton was a gc root there. | 2019-05-07 14:56:59 | 01210bbbfaecb3bcb6057c62b2195366d3bfa4f9

Revamp notifications (#1335)

* New notification that shows the count of retained instances. Tapping it triggers a heap dump. Fixes #1325
* Notifications are now split into two channels: default for results, and low for everything else.
* New config options: LeakCanary.config.dumpHeapWhenDebugging (default false) and LeakCanary.config.retainedVisibleThreshold (default 5)
* Replaced notification int constants and timestamps with resource ids.
* Don't show background notifications in instant apps (#1197) | 2019-05-05 16:38:26 | b14d9bc9c0a87119137bc0998bdec9314186dfcf

Highlighting new leaks (#1334)

New leaks are leaks that have a leak group that doesn't exist in any prior analysis.

* The notification now reports the count of leaks, with a split of new, known, and won't fix.
* The analysis success screen shows new leaks
* Moved description prefixes to be computed rather than inserted in the DB

Fixes #1328 | 2019-05-05 09:37:38 | f9a0518d4ddd69b782b6302caa3e3039787038e4

LeakSentry can be disabled (#1332)

LeakCanary has an enabled config option. Default is on in debug builds off in release builds.

Fixes #1327 | 2019-05-04 17:52:47 | f74f60901f34c751e8b8798d626678aa6233c893

Revert "fix trailing spaces per checkstyle"

This reverts commit ff17f879ec92ec326f8b1c6b7b8d77a5266d6622. | 2019-05-04 08:04:21 | 03136ca7dc1680299d710f79ca885412a1564144

Add test coverage for heap analysis (#1329)

* Fixed bug when reachability inspectors conflicts (reachable should win and erase unreachable)
* Added back support for leaking instances being empty objects, strings, primitive arrays or any object that we otherwise don't follow to find shortest paths. | 2019-05-04 07:51:02 | 59558e655d537c7654c411eebfd840773a8b77c9

Introducing exclusion priority (#1317)

* Add segmented FIFO queue

Unified several queues into one segmented FIFO queue. This will enable us to add several levels of priority.

* Introducing exclusion priority

* "excludedLeak" is now known as "won't fix leak", which matches its reality better. It's a leak that is known and real yet we're not fixing.
* Exclusion.alwaysExclude is replaced with Exclusion.status, with 3 possible values: NEVER_REACHABLE, WONT_FIX_LEAK, WEAKLY_REACHABLE.
* The shortest path finder will now follow weak references after all other paths have been exhausted.
* Removed class exclusion, was confusing, replaced with less lazy approach of listing fields to exclude
* VIEWLOCATIONHOLDER_ROOT should not have been always excluded, fixed.

Fixes #1173 ... well kinda. Instead of "non leaking retained instances", LeakCanary will report weakly reachable traces. Not sure if that'll help but it's a foundation we can build on. | 2019-04-30 17:44:15 | b0eedc553995e354e2382b3378bf0348801cd3c5

AllFieldsLabeler & cleanups (#1316)

* Add new optional labeler that prints all fields (useful for debugging)
* Move deprecated AnalysisResult to perflib
* Made DefaultAnalysisResultListener an object | 2019-04-30 07:08:29 | b9ee5356db265412db39c4c341880f305fbf2c76

fix format | 2019-04-22 06:25:09 | 4a2b158913e5a9eb0d5c6fdfbf949a80fc1b2c6b

Rename default to perflib and experimental to default (#1282)

* Remove experimental from module names

* Remove experimental prefix, add perflib prefix:

* update docs | 2019-04-19 06:01:39 | 425a9f24deb72691b02cdc85f80d177c05afebc5

fix list | 2019-04-18 21:55:43 | 8e3f9d26e8d3555bf934b99ac062aabc3aba528f

fix broken master | 2019-04-10 15:00:30 | f067ae53e050c5f52f47237440a6ac7eee3ca94c

fix broken build due to typo | 2019-04-10 05:44:19 | 7d4ddb4ffe3c9b0f30a84848675452dded0d4115

Leaking information aligned below simple class name. (#1258)

Also fixed issue where extraString + exclusionString were showing after the squiggly line.

Before: 
``` 
┬
├─ java.lang.Thread
│                 Leaking: NO (it's a GC root)
│                 ↓ thread Thread.<Java Local>
│                                ~~~~~~~~~~~~~ (named 'Thread-4')
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                 Leaking: UNKNOWN
│                 ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                     ~~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) 
```
After: 
``` 
┬
├─ java.lang.Thread
│            Leaking: NO (it's a GC root)
│            ↓ thread Thread.<Java Local> (named 'Thread-4')
│                            ~~~~~~~~~~~~
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                         Leaking: UNKNOWN
│                         ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                              ~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) ``` | 2019-04-05 20:11:47 | a938855585c7cf2522ffbd143d4bb66a234eea66

Add share to Stack Overflow button when viewing a leak (#1252)

* Add share to Stack Overflow button when viewing a leak

* Add question tag, lengthen toast and fix build failure. | 2019-04-04 20:49:50 | 8724d2aaffc07904517a3b823867802ca43233ae

Check if serviceInfo.processName is null. When LeakCanary runs on a seperate process and that process for some reason does not have a assigned processName, then we will crash on a NullPointerException. Also a debug log explaining this. (#1225) | 2019-04-01 19:20:40 | 3efc43608ed71dc20b0ad1e0e80e33d15249666f

fix master broken | 2019-04-01 19:07:27 | fe42130029174681a708b7d8622412efbaf81e73

fix trailing spaces per checkstyle | 2019-03-29 22:34:58 | ff17f879ec92ec326f8b1c6b7b8d77a5266d6622

Fix GC Root bugs that missed leaks (#1168)

In Perflib, Snapshot.getGcRoots() only returns the GC roots from the first heap. Based on empirical evidence, it seems like Android has 4 heaps, and the GC Roots used to only be in the first heap, but more recent versions of Android have GC Roots in other heaps as well.

This means LeakCanary would sometimes show "No Leak Found" when there actually was a leak.

Fixes #1163 | 2019-01-10 23:32:27 | 64b6e5a41796ae1587c50c8cc860cea25f28f382

fix typo | 2018-10-17 00:43:01 | 044b1e4827bc71ec008dc3f7e43c78f58885f1e1

Fix LeakCanary toasting (#1116)

- Prior attempts to get it to work with the application context turned out to be buggy.
- This makes LeakCanary use whatever the current resumed activity is, if any.
- If there is no resumed activity, then the toast isn't displayed.

This supersedes #1080 | 2018-10-16 13:23:14 | 0e39e2eea79bc05bf7147a4074dd7163f7c401ff

fix the wrong word (#1111) | 2018-10-16 01:25:28 | 636b9b6c2b39c0c887c9ed78e904239db9bc131e

Merge pull request #1104 from IlyaGulya/bug/travis-ci-cache-fix

Fix travis caching and improve build time. | 2018-09-22 21:25:59 | 344728b906daf6d010f66bdf4ccc29ad8fedede5

Error prone 2.3.1 + suggested fix and specify version

See http://errorprone.info/bugpattern/StringSplitter | 2018-08-22 07:37:33 | a6b6960d73a1da9661f4e85254570bf5f867f954

Merge pull request #1089 from hzsweers/z/fixAnother

Quick followup to #1088 | 2018-08-22 03:15:15 | be973f5f5da6a3516aedab98e639690697617747

Merge pull request #1087 from Goddchen/patch-2

Updated german translation | 2018-08-20 13:52:47 | b43c279b3e1623c193e1dc81955527f70e93f822

Merge pull request #1063 from javmarina/patch-1

Fixed wrong versions in AndroidExcludedRefs | 2018-07-25 18:31:55 | 3b4ebe3e2571377f93e9a6976e021324502a0f78

Fixed wrong versions in AndroidExcludedRefs

Commit https://android.googlesource.com/platform/frameworks/base/+/27db46850b708070452c0ce49daf5f79503fbde6 introduced this issue. This commit was first included in Jelly Bean 4.3 (JELLY_BEAN_MR2), not Jelly Bean 4.1 (JELLY_BEAN)
Commit https://android.googlesource.com/platform/frameworks/base/+/5200e1cb07190a1f6874d72a4561064cad3ee3e0 fixes this issue and was first included in Oreo 8.0 (O). Nougat still has this memory leak. | 2018-07-24 18:24:59 | e4778b25f2c6e65ebc485d255e38586c7d45ec97

Merge pull request #1057 from square/py/ui_bug

Fix drawing of start line | 2018-07-20 22:21:19 | af96577a7d19e4df9f63d95fd9c3bfd2adcddb5d

Avoid Toast crashes

Showing a toast can crash on API 25 because the Window Manager can throw a BadTokenException when addView is called.

This change fixes it by configuring the toast manually and calling the window manager directly. This is based on https://github.com/pyricau/frenchtoast/blob/master/frenchtoast/src/main/java/frenchtoast/Mixture.java#L49 .

Fixes #844 | 2018-07-20 16:11:22 | c9ebc5cf5099c093bde5d3309b2692cb0e2016d8

Fixing setup bug | 2018-06-28 04:07:09 | 505933817cf6e2eb0dad4a78d4c7c35a072b9868

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

Merge pull request #1596 from fernandospr/patch-1

Update blog-articles.md | 2019-10-04 16:35:24 | e65236dae7c5827b7c9f64c19c8b1a16ea19e5a7

Merge pull request #1598 from PaulWoitaschek/patch-1

Fixed the german string placeholder for sharing the heap dump | 2019-10-03 16:16:23 | 029f28eefd7aa966520ac3649fd2688732c02867

Fix crash when pressing home from root screen (#1578)

This bug only happens on older Android devices.

Fixes #1555 | 2019-09-11 01:51:06 | 274f58f96e8de7dcd3000c06ba3e2b50e427747d

Merge pull request #1559 from bric3/fix-primitive-array-dump-skip

Fixes the primitive array dump record skipping | 2019-09-09 22:16:57 | c0fd4d812cb8d6c5723231e501c121da2af86f06

Parsing and applying proguard mapping during heap analysis (#1542)

* Parsing and applying proguard mapping during heap analysis

* Parsing and applying proguard mapping during heap analysis

* Rebased onto master

* Post review changes and updated shark-cli to support mapping files

* Post review fixes

* Moving proguard mapping reader out of the analyzer and formatting fixes | 2019-08-30 16:54:20 | 66182a52069d9be59d0af6220aa9afd74218aa9b

fix images | 2019-08-27 20:02:50 | 8f5030e9faa8690217e1bd436274a3de5b9d3fb3

fix image links in docs | 2019-08-27 19:59:20 | edca56a947278508350bfa5dd33d3fa10699001f

Merge pull request #1549 from Armaxis/patch-1

Added section about using Detekt to Contributing | 2019-08-24 22:16:26 | c923d14909888860a99d5899af17f5b52c9b000f

Revert "Replaced accessor with a call to setter to fix the build issue"

This reverts commit 82db0398 | 2019-08-17 02:21:08 | c570cb9b0fd7bd7fcc88c4d3b529df8837e98fdc

Replaced accessor with a call to setter to fix the build issue | 2019-08-16 04:32:25 | 82db039843303044f91d36ba7c43595ab59bacd5

fix typo | 2019-08-02 15:31:17 | a2452f61e78e689efb59adaf71384d74447578b0

Add / fix android inspectors (#1491)

* Added MortarScope and ViewRootImpl inspectors
* Fixed the ContextWrapper inspector

Fixes #1490
Fixes #1389 | 2019-07-25 22:50:48 | 915f8359690a016a09e66608a041454b9c8c52cb

Documenting public APIs (#1476)

Also fixed naming and other things that weren't right.

Fixes #1474 | 2019-07-19 06:57:25 | 41c69a5d424b4236114c5ce1b077afdad38e57a5

Adding CLI for LeakCanary (#1456)

Example usage:
```
./gradlew leakcanary-cli:run --args='analyze-process com.example.leakcanary'

./gradlew leakcanary-cli:run --args='dump-process com.example.leakcanary'

./gradlew leakcanary-cli:run --args='analyze-file /path/to/heapdump.hprof'
```

Also fixed a bug in ShortestPathFinder which did not ignore null references in object arrays | 2019-07-11 19:11:30 | eded1c96e84f37393857ba4de2580aec784b2391

Behavior change & bugfixes for retained count notification (#1433)

* Bugfix: when tapping the "dump heap" notification, if the GC found no retained instance we didn't use a distinct notification id to communicate that, and then soon after we'd dismiss the notification that let's the user know there is no retained instances on tap.
* Bugfix: we weren't running the GC when checking for retained instances and the count was under the threshold
* Change: we now update the notification and keep it around for 30 seconds when the count goes to 0
* Change: the "no retained instance" notification that shows on tap is identical and also auto dismisses after 30 seconds.
* Change: we're checking for retained references (and running the GC) every 2 seconds instead of 5.

Fixes #1427 | 2019-07-03 20:55:47 | 968083a915343d881bd63e40587c070fde543732

Update how to fix a leak | 2019-06-25 05:46:56 | 177e7fd12933d99eca7a526851c53e598a03bf90

Text rendering tests (#1378)

* Added test coverage for text rendering
* Fixed bug: labels were not rendered on the last node (leaking instance)
* Matched exclusions are now rendered on their own line

Fixes #1375
Fixes #1350 | 2019-06-04 09:32:11 | 1926cb1db73f9583e11c557dbf2e5d46e3896a6e

Thread name based exclusions (#1353)

* Readded support for exclusions of local variable based on thread names
* Renamed ThreadExclusion to JavaLocalExclusion
* Fixed bug: KeyedWeakReference was not always ignored because its superclass is has a weakly reachable exclusion.
* Fixed bug: all root nodes had the same visit order as the first non root enqueued item, making it possible for a non root node to be dequeued before we're done with all roots.
* Redded gc root sorting
* Added tests to cover all uncovered bugs
* Added support for parsing StackFrameRecord

Fixes #1339 | 2019-05-20 13:17:18 | 6c2ee609efda323e88a4964d31fc5a5f0532f776

Reachability => LeakStatus (#1340)

* Combined leaking information from inspectors to solving conflicts while keeping all reasons
* Made reason from view leak inspector more obvious, and added label data about internals
* Moved reachability into LeakTraceElement
* Reachability renamed to LeakNodeStatus and leaking / not leaking
* ReachabilityInspector and Labeler are now functions with type aliases

Related to #1336: should fix the crash, though it's still unclear why AppCompatButton was a gc root there. | 2019-05-07 14:56:59 | 01210bbbfaecb3bcb6057c62b2195366d3bfa4f9

Revamp notifications (#1335)

* New notification that shows the count of retained instances. Tapping it triggers a heap dump. Fixes #1325
* Notifications are now split into two channels: default for results, and low for everything else.
* New config options: LeakCanary.config.dumpHeapWhenDebugging (default false) and LeakCanary.config.retainedVisibleThreshold (default 5)
* Replaced notification int constants and timestamps with resource ids.
* Don't show background notifications in instant apps (#1197) | 2019-05-05 16:38:26 | b14d9bc9c0a87119137bc0998bdec9314186dfcf

Highlighting new leaks (#1334)

New leaks are leaks that have a leak group that doesn't exist in any prior analysis.

* The notification now reports the count of leaks, with a split of new, known, and won't fix.
* The analysis success screen shows new leaks
* Moved description prefixes to be computed rather than inserted in the DB

Fixes #1328 | 2019-05-05 09:37:38 | f9a0518d4ddd69b782b6302caa3e3039787038e4

LeakSentry can be disabled (#1332)

LeakCanary has an enabled config option. Default is on in debug builds off in release builds.

Fixes #1327 | 2019-05-04 17:52:47 | f74f60901f34c751e8b8798d626678aa6233c893

Revert "fix trailing spaces per checkstyle"

This reverts commit ff17f879ec92ec326f8b1c6b7b8d77a5266d6622. | 2019-05-04 08:04:21 | 03136ca7dc1680299d710f79ca885412a1564144

Add test coverage for heap analysis (#1329)

* Fixed bug when reachability inspectors conflicts (reachable should win and erase unreachable)
* Added back support for leaking instances being empty objects, strings, primitive arrays or any object that we otherwise don't follow to find shortest paths. | 2019-05-04 07:51:02 | 59558e655d537c7654c411eebfd840773a8b77c9

Introducing exclusion priority (#1317)

* Add segmented FIFO queue

Unified several queues into one segmented FIFO queue. This will enable us to add several levels of priority.

* Introducing exclusion priority

* "excludedLeak" is now known as "won't fix leak", which matches its reality better. It's a leak that is known and real yet we're not fixing.
* Exclusion.alwaysExclude is replaced with Exclusion.status, with 3 possible values: NEVER_REACHABLE, WONT_FIX_LEAK, WEAKLY_REACHABLE.
* The shortest path finder will now follow weak references after all other paths have been exhausted.
* Removed class exclusion, was confusing, replaced with less lazy approach of listing fields to exclude
* VIEWLOCATIONHOLDER_ROOT should not have been always excluded, fixed.

Fixes #1173 ... well kinda. Instead of "non leaking retained instances", LeakCanary will report weakly reachable traces. Not sure if that'll help but it's a foundation we can build on. | 2019-04-30 17:44:15 | b0eedc553995e354e2382b3378bf0348801cd3c5

AllFieldsLabeler & cleanups (#1316)

* Add new optional labeler that prints all fields (useful for debugging)
* Move deprecated AnalysisResult to perflib
* Made DefaultAnalysisResultListener an object | 2019-04-30 07:08:29 | b9ee5356db265412db39c4c341880f305fbf2c76

fix format | 2019-04-22 06:25:09 | 4a2b158913e5a9eb0d5c6fdfbf949a80fc1b2c6b

Rename default to perflib and experimental to default (#1282)

* Remove experimental from module names

* Remove experimental prefix, add perflib prefix:

* update docs | 2019-04-19 06:01:39 | 425a9f24deb72691b02cdc85f80d177c05afebc5

fix list | 2019-04-18 21:55:43 | 8e3f9d26e8d3555bf934b99ac062aabc3aba528f

fix broken master | 2019-04-10 15:00:30 | f067ae53e050c5f52f47237440a6ac7eee3ca94c

fix broken build due to typo | 2019-04-10 05:44:19 | 7d4ddb4ffe3c9b0f30a84848675452dded0d4115

Leaking information aligned below simple class name. (#1258)

Also fixed issue where extraString + exclusionString were showing after the squiggly line.

Before: 
``` 
┬
├─ java.lang.Thread
│                 Leaking: NO (it's a GC root)
│                 ↓ thread Thread.<Java Local>
│                                ~~~~~~~~~~~~~ (named 'Thread-4')
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                 Leaking: UNKNOWN
│                 ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                     ~~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) 
```
After: 
``` 
┬
├─ java.lang.Thread
│            Leaking: NO (it's a GC root)
│            ↓ thread Thread.<Java Local> (named 'Thread-4')
│                            ~~~~~~~~~~~~
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                         Leaking: UNKNOWN
│                         ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                              ~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) ``` | 2019-04-05 20:11:47 | a938855585c7cf2522ffbd143d4bb66a234eea66

Add share to Stack Overflow button when viewing a leak (#1252)

* Add share to Stack Overflow button when viewing a leak

* Add question tag, lengthen toast and fix build failure. | 2019-04-04 20:49:50 | 8724d2aaffc07904517a3b823867802ca43233ae

Check if serviceInfo.processName is null. When LeakCanary runs on a seperate process and that process for some reason does not have a assigned processName, then we will crash on a NullPointerException. Also a debug log explaining this. (#1225) | 2019-04-01 19:20:40 | 3efc43608ed71dc20b0ad1e0e80e33d15249666f

fix master broken | 2019-04-01 19:07:27 | fe42130029174681a708b7d8622412efbaf81e73

fix trailing spaces per checkstyle | 2019-03-29 22:34:58 | ff17f879ec92ec326f8b1c6b7b8d77a5266d6622

Fix GC Root bugs that missed leaks (#1168)

In Perflib, Snapshot.getGcRoots() only returns the GC roots from the first heap. Based on empirical evidence, it seems like Android has 4 heaps, and the GC Roots used to only be in the first heap, but more recent versions of Android have GC Roots in other heaps as well.

This means LeakCanary would sometimes show "No Leak Found" when there actually was a leak.

Fixes #1163 | 2019-01-10 23:32:27 | 64b6e5a41796ae1587c50c8cc860cea25f28f382

fix typo | 2018-10-17 00:43:01 | 044b1e4827bc71ec008dc3f7e43c78f58885f1e1

Fix LeakCanary toasting (#1116)

- Prior attempts to get it to work with the application context turned out to be buggy.
- This makes LeakCanary use whatever the current resumed activity is, if any.
- If there is no resumed activity, then the toast isn't displayed.

This supersedes #1080 | 2018-10-16 13:23:14 | 0e39e2eea79bc05bf7147a4074dd7163f7c401ff

fix the wrong word (#1111) | 2018-10-16 01:25:28 | 636b9b6c2b39c0c887c9ed78e904239db9bc131e

Merge pull request #1104 from IlyaGulya/bug/travis-ci-cache-fix

Fix travis caching and improve build time. | 2018-09-22 21:25:59 | 344728b906daf6d010f66bdf4ccc29ad8fedede5

Error prone 2.3.1 + suggested fix and specify version

See http://errorprone.info/bugpattern/StringSplitter | 2018-08-22 07:37:33 | a6b6960d73a1da9661f4e85254570bf5f867f954

Merge pull request #1089 from hzsweers/z/fixAnother

Quick followup to #1088 | 2018-08-22 03:15:15 | be973f5f5da6a3516aedab98e639690697617747

Merge pull request #1087 from Goddchen/patch-2

Updated german translation | 2018-08-20 13:52:47 | b43c279b3e1623c193e1dc81955527f70e93f822

Merge pull request #1063 from javmarina/patch-1

Fixed wrong versions in AndroidExcludedRefs | 2018-07-25 18:31:55 | 3b4ebe3e2571377f93e9a6976e021324502a0f78

Fixed wrong versions in AndroidExcludedRefs

Commit https://android.googlesource.com/platform/frameworks/base/+/27db46850b708070452c0ce49daf5f79503fbde6 introduced this issue. This commit was first included in Jelly Bean 4.3 (JELLY_BEAN_MR2), not Jelly Bean 4.1 (JELLY_BEAN)
Commit https://android.googlesource.com/platform/frameworks/base/+/5200e1cb07190a1f6874d72a4561064cad3ee3e0 fixes this issue and was first included in Oreo 8.0 (O). Nougat still has this memory leak. | 2018-07-24 18:24:59 | e4778b25f2c6e65ebc485d255e38586c7d45ec97

Merge pull request #1057 from square/py/ui_bug

Fix drawing of start line | 2018-07-20 22:21:19 | af96577a7d19e4df9f63d95fd9c3bfd2adcddb5d

Avoid Toast crashes

Showing a toast can crash on API 25 because the Window Manager can throw a BadTokenException when addView is called.

This change fixes it by configuring the toast manually and calling the window manager directly. This is based on https://github.com/pyricau/frenchtoast/blob/master/frenchtoast/src/main/java/frenchtoast/Mixture.java#L49 .

Fixes #844 | 2018-07-20 16:11:22 | c9ebc5cf5099c093bde5d3309b2692cb0e2016d8

Fixing setup bug | 2018-06-28 04:07:09 | 505933817cf6e2eb0dad4a78d4c7c35a072b9868

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

Merge pull request #1596 from fernandospr/patch-1

Update blog-articles.md | 2019-10-04 16:35:24 | e65236dae7c5827b7c9f64c19c8b1a16ea19e5a7

Merge pull request #1598 from PaulWoitaschek/patch-1

Fixed the german string placeholder for sharing the heap dump | 2019-10-03 16:16:23 | 029f28eefd7aa966520ac3649fd2688732c02867

Fix crash when pressing home from root screen (#1578)

This bug only happens on older Android devices.

Fixes #1555 | 2019-09-11 01:51:06 | 274f58f96e8de7dcd3000c06ba3e2b50e427747d

Merge pull request #1559 from bric3/fix-primitive-array-dump-skip

Fixes the primitive array dump record skipping | 2019-09-09 22:16:57 | c0fd4d812cb8d6c5723231e501c121da2af86f06

Parsing and applying proguard mapping during heap analysis (#1542)

* Parsing and applying proguard mapping during heap analysis

* Parsing and applying proguard mapping during heap analysis

* Rebased onto master

* Post review changes and updated shark-cli to support mapping files

* Post review fixes

* Moving proguard mapping reader out of the analyzer and formatting fixes | 2019-08-30 16:54:20 | 66182a52069d9be59d0af6220aa9afd74218aa9b

fix images | 2019-08-27 20:02:50 | 8f5030e9faa8690217e1bd436274a3de5b9d3fb3

fix image links in docs | 2019-08-27 19:59:20 | edca56a947278508350bfa5dd33d3fa10699001f

Merge pull request #1549 from Armaxis/patch-1

Added section about using Detekt to Contributing | 2019-08-24 22:16:26 | c923d14909888860a99d5899af17f5b52c9b000f

Revert "Replaced accessor with a call to setter to fix the build issue"

This reverts commit 82db0398 | 2019-08-17 02:21:08 | c570cb9b0fd7bd7fcc88c4d3b529df8837e98fdc

Replaced accessor with a call to setter to fix the build issue | 2019-08-16 04:32:25 | 82db039843303044f91d36ba7c43595ab59bacd5

fix typo | 2019-08-02 15:31:17 | a2452f61e78e689efb59adaf71384d74447578b0

Add / fix android inspectors (#1491)

* Added MortarScope and ViewRootImpl inspectors
* Fixed the ContextWrapper inspector

Fixes #1490
Fixes #1389 | 2019-07-25 22:50:48 | 915f8359690a016a09e66608a041454b9c8c52cb

Documenting public APIs (#1476)

Also fixed naming and other things that weren't right.

Fixes #1474 | 2019-07-19 06:57:25 | 41c69a5d424b4236114c5ce1b077afdad38e57a5

Adding CLI for LeakCanary (#1456)

Example usage:
```
./gradlew leakcanary-cli:run --args='analyze-process com.example.leakcanary'

./gradlew leakcanary-cli:run --args='dump-process com.example.leakcanary'

./gradlew leakcanary-cli:run --args='analyze-file /path/to/heapdump.hprof'
```

Also fixed a bug in ShortestPathFinder which did not ignore null references in object arrays | 2019-07-11 19:11:30 | eded1c96e84f37393857ba4de2580aec784b2391

Behavior change & bugfixes for retained count notification (#1433)

* Bugfix: when tapping the "dump heap" notification, if the GC found no retained instance we didn't use a distinct notification id to communicate that, and then soon after we'd dismiss the notification that let's the user know there is no retained instances on tap.
* Bugfix: we weren't running the GC when checking for retained instances and the count was under the threshold
* Change: we now update the notification and keep it around for 30 seconds when the count goes to 0
* Change: the "no retained instance" notification that shows on tap is identical and also auto dismisses after 30 seconds.
* Change: we're checking for retained references (and running the GC) every 2 seconds instead of 5.

Fixes #1427 | 2019-07-03 20:55:47 | 968083a915343d881bd63e40587c070fde543732

Update how to fix a leak | 2019-06-25 05:46:56 | 177e7fd12933d99eca7a526851c53e598a03bf90

Text rendering tests (#1378)

* Added test coverage for text rendering
* Fixed bug: labels were not rendered on the last node (leaking instance)
* Matched exclusions are now rendered on their own line

Fixes #1375
Fixes #1350 | 2019-06-04 09:32:11 | 1926cb1db73f9583e11c557dbf2e5d46e3896a6e

Thread name based exclusions (#1353)

* Readded support for exclusions of local variable based on thread names
* Renamed ThreadExclusion to JavaLocalExclusion
* Fixed bug: KeyedWeakReference was not always ignored because its superclass is has a weakly reachable exclusion.
* Fixed bug: all root nodes had the same visit order as the first non root enqueued item, making it possible for a non root node to be dequeued before we're done with all roots.
* Redded gc root sorting
* Added tests to cover all uncovered bugs
* Added support for parsing StackFrameRecord

Fixes #1339 | 2019-05-20 13:17:18 | 6c2ee609efda323e88a4964d31fc5a5f0532f776

Reachability => LeakStatus (#1340)

* Combined leaking information from inspectors to solving conflicts while keeping all reasons
* Made reason from view leak inspector more obvious, and added label data about internals
* Moved reachability into LeakTraceElement
* Reachability renamed to LeakNodeStatus and leaking / not leaking
* ReachabilityInspector and Labeler are now functions with type aliases

Related to #1336: should fix the crash, though it's still unclear why AppCompatButton was a gc root there. | 2019-05-07 14:56:59 | 01210bbbfaecb3bcb6057c62b2195366d3bfa4f9

Revamp notifications (#1335)

* New notification that shows the count of retained instances. Tapping it triggers a heap dump. Fixes #1325
* Notifications are now split into two channels: default for results, and low for everything else.
* New config options: LeakCanary.config.dumpHeapWhenDebugging (default false) and LeakCanary.config.retainedVisibleThreshold (default 5)
* Replaced notification int constants and timestamps with resource ids.
* Don't show background notifications in instant apps (#1197) | 2019-05-05 16:38:26 | b14d9bc9c0a87119137bc0998bdec9314186dfcf

Highlighting new leaks (#1334)

New leaks are leaks that have a leak group that doesn't exist in any prior analysis.

* The notification now reports the count of leaks, with a split of new, known, and won't fix.
* The analysis success screen shows new leaks
* Moved description prefixes to be computed rather than inserted in the DB

Fixes #1328 | 2019-05-05 09:37:38 | f9a0518d4ddd69b782b6302caa3e3039787038e4

LeakSentry can be disabled (#1332)

LeakCanary has an enabled config option. Default is on in debug builds off in release builds.

Fixes #1327 | 2019-05-04 17:52:47 | f74f60901f34c751e8b8798d626678aa6233c893

Revert "fix trailing spaces per checkstyle"

This reverts commit ff17f879ec92ec326f8b1c6b7b8d77a5266d6622. | 2019-05-04 08:04:21 | 03136ca7dc1680299d710f79ca885412a1564144

Add test coverage for heap analysis (#1329)

* Fixed bug when reachability inspectors conflicts (reachable should win and erase unreachable)
* Added back support for leaking instances being empty objects, strings, primitive arrays or any object that we otherwise don't follow to find shortest paths. | 2019-05-04 07:51:02 | 59558e655d537c7654c411eebfd840773a8b77c9

Introducing exclusion priority (#1317)

* Add segmented FIFO queue

Unified several queues into one segmented FIFO queue. This will enable us to add several levels of priority.

* Introducing exclusion priority

* "excludedLeak" is now known as "won't fix leak", which matches its reality better. It's a leak that is known and real yet we're not fixing.
* Exclusion.alwaysExclude is replaced with Exclusion.status, with 3 possible values: NEVER_REACHABLE, WONT_FIX_LEAK, WEAKLY_REACHABLE.
* The shortest path finder will now follow weak references after all other paths have been exhausted.
* Removed class exclusion, was confusing, replaced with less lazy approach of listing fields to exclude
* VIEWLOCATIONHOLDER_ROOT should not have been always excluded, fixed.

Fixes #1173 ... well kinda. Instead of "non leaking retained instances", LeakCanary will report weakly reachable traces. Not sure if that'll help but it's a foundation we can build on. | 2019-04-30 17:44:15 | b0eedc553995e354e2382b3378bf0348801cd3c5

AllFieldsLabeler & cleanups (#1316)

* Add new optional labeler that prints all fields (useful for debugging)
* Move deprecated AnalysisResult to perflib
* Made DefaultAnalysisResultListener an object | 2019-04-30 07:08:29 | b9ee5356db265412db39c4c341880f305fbf2c76

fix format | 2019-04-22 06:25:09 | 4a2b158913e5a9eb0d5c6fdfbf949a80fc1b2c6b

Rename default to perflib and experimental to default (#1282)

* Remove experimental from module names

* Remove experimental prefix, add perflib prefix:

* update docs | 2019-04-19 06:01:39 | 425a9f24deb72691b02cdc85f80d177c05afebc5

fix list | 2019-04-18 21:55:43 | 8e3f9d26e8d3555bf934b99ac062aabc3aba528f

fix broken master | 2019-04-10 15:00:30 | f067ae53e050c5f52f47237440a6ac7eee3ca94c

fix broken build due to typo | 2019-04-10 05:44:19 | 7d4ddb4ffe3c9b0f30a84848675452dded0d4115

Leaking information aligned below simple class name. (#1258)

Also fixed issue where extraString + exclusionString were showing after the squiggly line.

Before: 
``` 
┬
├─ java.lang.Thread
│                 Leaking: NO (it's a GC root)
│                 ↓ thread Thread.<Java Local>
│                                ~~~~~~~~~~~~~ (named 'Thread-4')
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                 Leaking: UNKNOWN
│                 ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                     ~~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) 
```
After: 
``` 
┬
├─ java.lang.Thread
│            Leaking: NO (it's a GC root)
│            ↓ thread Thread.<Java Local> (named 'Thread-4')
│                            ~~~~~~~~~~~~
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                         Leaking: UNKNOWN
│                         ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                              ~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) ``` | 2019-04-05 20:11:47 | a938855585c7cf2522ffbd143d4bb66a234eea66

Add share to Stack Overflow button when viewing a leak (#1252)

* Add share to Stack Overflow button when viewing a leak

* Add question tag, lengthen toast and fix build failure. | 2019-04-04 20:49:50 | 8724d2aaffc07904517a3b823867802ca43233ae

Check if serviceInfo.processName is null. When LeakCanary runs on a seperate process and that process for some reason does not have a assigned processName, then we will crash on a NullPointerException. Also a debug log explaining this. (#1225) | 2019-04-01 19:20:40 | 3efc43608ed71dc20b0ad1e0e80e33d15249666f

fix master broken | 2019-04-01 19:07:27 | fe42130029174681a708b7d8622412efbaf81e73

fix trailing spaces per checkstyle | 2019-03-29 22:34:58 | ff17f879ec92ec326f8b1c6b7b8d77a5266d6622

Fix GC Root bugs that missed leaks (#1168)

In Perflib, Snapshot.getGcRoots() only returns the GC roots from the first heap. Based on empirical evidence, it seems like Android has 4 heaps, and the GC Roots used to only be in the first heap, but more recent versions of Android have GC Roots in other heaps as well.

This means LeakCanary would sometimes show "No Leak Found" when there actually was a leak.

Fixes #1163 | 2019-01-10 23:32:27 | 64b6e5a41796ae1587c50c8cc860cea25f28f382

fix typo | 2018-10-17 00:43:01 | 044b1e4827bc71ec008dc3f7e43c78f58885f1e1

Fix LeakCanary toasting (#1116)

- Prior attempts to get it to work with the application context turned out to be buggy.
- This makes LeakCanary use whatever the current resumed activity is, if any.
- If there is no resumed activity, then the toast isn't displayed.

This supersedes #1080 | 2018-10-16 13:23:14 | 0e39e2eea79bc05bf7147a4074dd7163f7c401ff

fix the wrong word (#1111) | 2018-10-16 01:25:28 | 636b9b6c2b39c0c887c9ed78e904239db9bc131e

Merge pull request #1104 from IlyaGulya/bug/travis-ci-cache-fix

Fix travis caching and improve build time. | 2018-09-22 21:25:59 | 344728b906daf6d010f66bdf4ccc29ad8fedede5

Error prone 2.3.1 + suggested fix and specify version

See http://errorprone.info/bugpattern/StringSplitter | 2018-08-22 07:37:33 | a6b6960d73a1da9661f4e85254570bf5f867f954

Merge pull request #1089 from hzsweers/z/fixAnother

Quick followup to #1088 | 2018-08-22 03:15:15 | be973f5f5da6a3516aedab98e639690697617747

Merge pull request #1087 from Goddchen/patch-2

Updated german translation | 2018-08-20 13:52:47 | b43c279b3e1623c193e1dc81955527f70e93f822

Merge pull request #1063 from javmarina/patch-1

Fixed wrong versions in AndroidExcludedRefs | 2018-07-25 18:31:55 | 3b4ebe3e2571377f93e9a6976e021324502a0f78

Fixed wrong versions in AndroidExcludedRefs

Commit https://android.googlesource.com/platform/frameworks/base/+/27db46850b708070452c0ce49daf5f79503fbde6 introduced this issue. This commit was first included in Jelly Bean 4.3 (JELLY_BEAN_MR2), not Jelly Bean 4.1 (JELLY_BEAN)
Commit https://android.googlesource.com/platform/frameworks/base/+/5200e1cb07190a1f6874d72a4561064cad3ee3e0 fixes this issue and was first included in Oreo 8.0 (O). Nougat still has this memory leak. | 2018-07-24 18:24:59 | e4778b25f2c6e65ebc485d255e38586c7d45ec97

Merge pull request #1057 from square/py/ui_bug

Fix drawing of start line | 2018-07-20 22:21:19 | af96577a7d19e4df9f63d95fd9c3bfd2adcddb5d

Avoid Toast crashes

Showing a toast can crash on API 25 because the Window Manager can throw a BadTokenException when addView is called.

This change fixes it by configuring the toast manually and calling the window manager directly. This is based on https://github.com/pyricau/frenchtoast/blob/master/frenchtoast/src/main/java/frenchtoast/Mixture.java#L49 .

Fixes #844 | 2018-07-20 16:11:22 | c9ebc5cf5099c093bde5d3309b2692cb0e2016d8

Fixing setup bug | 2018-06-28 04:07:09 | 505933817cf6e2eb0dad4a78d4c7c35a072b9868

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

Fix GC Root bugs that missed leaks (#1168)

In Perflib, Snapshot.getGcRoots() only returns the GC roots from the first heap. Based on empirical evidence, it seems like Android has 4 heaps, and the GC Roots used to only be in the first heap, but more recent versions of Android have GC Roots in other heaps as well.

This means LeakCanary would sometimes show "No Leak Found" when there actually was a leak.

Fixes #1163 | 2019-01-10 23:32:27 | 64b6e5a41796ae1587c50c8cc860cea25f28f382

fix typo | 2018-10-17 00:43:01 | 044b1e4827bc71ec008dc3f7e43c78f58885f1e1

Fix LeakCanary toasting (#1116)

- Prior attempts to get it to work with the application context turned out to be buggy.
- This makes LeakCanary use whatever the current resumed activity is, if any.
- If there is no resumed activity, then the toast isn't displayed.

This supersedes #1080 | 2018-10-16 13:23:14 | 0e39e2eea79bc05bf7147a4074dd7163f7c401ff

fix the wrong word (#1111) | 2018-10-16 01:25:28 | 636b9b6c2b39c0c887c9ed78e904239db9bc131e

Merge pull request #1104 from IlyaGulya/bug/travis-ci-cache-fix

Fix travis caching and improve build time. | 2018-09-22 21:25:59 | 344728b906daf6d010f66bdf4ccc29ad8fedede5

Error prone 2.3.1 + suggested fix and specify version

See http://errorprone.info/bugpattern/StringSplitter | 2018-08-22 07:37:33 | a6b6960d73a1da9661f4e85254570bf5f867f954

Merge pull request #1089 from hzsweers/z/fixAnother

Quick followup to #1088 | 2018-08-22 03:15:15 | be973f5f5da6a3516aedab98e639690697617747

Merge pull request #1087 from Goddchen/patch-2

Updated german translation | 2018-08-20 13:52:47 | b43c279b3e1623c193e1dc81955527f70e93f822

Merge pull request #1063 from javmarina/patch-1

Fixed wrong versions in AndroidExcludedRefs | 2018-07-25 18:31:55 | 3b4ebe3e2571377f93e9a6976e021324502a0f78

Fixed wrong versions in AndroidExcludedRefs

Commit https://android.googlesource.com/platform/frameworks/base/+/27db46850b708070452c0ce49daf5f79503fbde6 introduced this issue. This commit was first included in Jelly Bean 4.3 (JELLY_BEAN_MR2), not Jelly Bean 4.1 (JELLY_BEAN)
Commit https://android.googlesource.com/platform/frameworks/base/+/5200e1cb07190a1f6874d72a4561064cad3ee3e0 fixes this issue and was first included in Oreo 8.0 (O). Nougat still has this memory leak. | 2018-07-24 18:24:59 | e4778b25f2c6e65ebc485d255e38586c7d45ec97

Merge pull request #1057 from square/py/ui_bug

Fix drawing of start line | 2018-07-20 22:21:19 | af96577a7d19e4df9f63d95fd9c3bfd2adcddb5d

Avoid Toast crashes

Showing a toast can crash on API 25 because the Window Manager can throw a BadTokenException when addView is called.

This change fixes it by configuring the toast manually and calling the window manager directly. This is based on https://github.com/pyricau/frenchtoast/blob/master/frenchtoast/src/main/java/frenchtoast/Mixture.java#L49 .

Fixes #844 | 2018-07-20 16:11:22 | c9ebc5cf5099c093bde5d3309b2692cb0e2016d8

Fixing setup bug | 2018-06-28 04:07:09 | 505933817cf6e2eb0dad4a78d4c7c35a072b9868

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

Update how to fix a leak | 2019-06-25 05:46:56 | 177e7fd12933d99eca7a526851c53e598a03bf90

Text rendering tests (#1378)

* Added test coverage for text rendering
* Fixed bug: labels were not rendered on the last node (leaking instance)
* Matched exclusions are now rendered on their own line

Fixes #1375
Fixes #1350 | 2019-06-04 09:32:11 | 1926cb1db73f9583e11c557dbf2e5d46e3896a6e

Thread name based exclusions (#1353)

* Readded support for exclusions of local variable based on thread names
* Renamed ThreadExclusion to JavaLocalExclusion
* Fixed bug: KeyedWeakReference was not always ignored because its superclass is has a weakly reachable exclusion.
* Fixed bug: all root nodes had the same visit order as the first non root enqueued item, making it possible for a non root node to be dequeued before we're done with all roots.
* Redded gc root sorting
* Added tests to cover all uncovered bugs
* Added support for parsing StackFrameRecord

Fixes #1339 | 2019-05-20 13:17:18 | 6c2ee609efda323e88a4964d31fc5a5f0532f776

Reachability => LeakStatus (#1340)

* Combined leaking information from inspectors to solving conflicts while keeping all reasons
* Made reason from view leak inspector more obvious, and added label data about internals
* Moved reachability into LeakTraceElement
* Reachability renamed to LeakNodeStatus and leaking / not leaking
* ReachabilityInspector and Labeler are now functions with type aliases

Related to #1336: should fix the crash, though it's still unclear why AppCompatButton was a gc root there. | 2019-05-07 14:56:59 | 01210bbbfaecb3bcb6057c62b2195366d3bfa4f9

Revamp notifications (#1335)

* New notification that shows the count of retained instances. Tapping it triggers a heap dump. Fixes #1325
* Notifications are now split into two channels: default for results, and low for everything else.
* New config options: LeakCanary.config.dumpHeapWhenDebugging (default false) and LeakCanary.config.retainedVisibleThreshold (default 5)
* Replaced notification int constants and timestamps with resource ids.
* Don't show background notifications in instant apps (#1197) | 2019-05-05 16:38:26 | b14d9bc9c0a87119137bc0998bdec9314186dfcf

Highlighting new leaks (#1334)

New leaks are leaks that have a leak group that doesn't exist in any prior analysis.

* The notification now reports the count of leaks, with a split of new, known, and won't fix.
* The analysis success screen shows new leaks
* Moved description prefixes to be computed rather than inserted in the DB

Fixes #1328 | 2019-05-05 09:37:38 | f9a0518d4ddd69b782b6302caa3e3039787038e4

LeakSentry can be disabled (#1332)

LeakCanary has an enabled config option. Default is on in debug builds off in release builds.

Fixes #1327 | 2019-05-04 17:52:47 | f74f60901f34c751e8b8798d626678aa6233c893

Revert "fix trailing spaces per checkstyle"

This reverts commit ff17f879ec92ec326f8b1c6b7b8d77a5266d6622. | 2019-05-04 08:04:21 | 03136ca7dc1680299d710f79ca885412a1564144

Add test coverage for heap analysis (#1329)

* Fixed bug when reachability inspectors conflicts (reachable should win and erase unreachable)
* Added back support for leaking instances being empty objects, strings, primitive arrays or any object that we otherwise don't follow to find shortest paths. | 2019-05-04 07:51:02 | 59558e655d537c7654c411eebfd840773a8b77c9

Introducing exclusion priority (#1317)

* Add segmented FIFO queue

Unified several queues into one segmented FIFO queue. This will enable us to add several levels of priority.

* Introducing exclusion priority

* "excludedLeak" is now known as "won't fix leak", which matches its reality better. It's a leak that is known and real yet we're not fixing.
* Exclusion.alwaysExclude is replaced with Exclusion.status, with 3 possible values: NEVER_REACHABLE, WONT_FIX_LEAK, WEAKLY_REACHABLE.
* The shortest path finder will now follow weak references after all other paths have been exhausted.
* Removed class exclusion, was confusing, replaced with less lazy approach of listing fields to exclude
* VIEWLOCATIONHOLDER_ROOT should not have been always excluded, fixed.

Fixes #1173 ... well kinda. Instead of "non leaking retained instances", LeakCanary will report weakly reachable traces. Not sure if that'll help but it's a foundation we can build on. | 2019-04-30 17:44:15 | b0eedc553995e354e2382b3378bf0348801cd3c5

AllFieldsLabeler & cleanups (#1316)

* Add new optional labeler that prints all fields (useful for debugging)
* Move deprecated AnalysisResult to perflib
* Made DefaultAnalysisResultListener an object | 2019-04-30 07:08:29 | b9ee5356db265412db39c4c341880f305fbf2c76

fix format | 2019-04-22 06:25:09 | 4a2b158913e5a9eb0d5c6fdfbf949a80fc1b2c6b

Rename default to perflib and experimental to default (#1282)

* Remove experimental from module names

* Remove experimental prefix, add perflib prefix:

* update docs | 2019-04-19 06:01:39 | 425a9f24deb72691b02cdc85f80d177c05afebc5

fix list | 2019-04-18 21:55:43 | 8e3f9d26e8d3555bf934b99ac062aabc3aba528f

fix broken master | 2019-04-10 15:00:30 | f067ae53e050c5f52f47237440a6ac7eee3ca94c

fix broken build due to typo | 2019-04-10 05:44:19 | 7d4ddb4ffe3c9b0f30a84848675452dded0d4115

Leaking information aligned below simple class name. (#1258)

Also fixed issue where extraString + exclusionString were showing after the squiggly line.

Before: 
``` 
┬
├─ java.lang.Thread
│                 Leaking: NO (it's a GC root)
│                 ↓ thread Thread.<Java Local>
│                                ~~~~~~~~~~~~~ (named 'Thread-4')
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                 Leaking: UNKNOWN
│                 ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                     ~~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) 
```
After: 
``` 
┬
├─ java.lang.Thread
│            Leaking: NO (it's a GC root)
│            ↓ thread Thread.<Java Local> (named 'Thread-4')
│                            ~~~~~~~~~~~~
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                         Leaking: UNKNOWN
│                         ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                              ~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) ``` | 2019-04-05 20:11:47 | a938855585c7cf2522ffbd143d4bb66a234eea66

Add share to Stack Overflow button when viewing a leak (#1252)

* Add share to Stack Overflow button when viewing a leak

* Add question tag, lengthen toast and fix build failure. | 2019-04-04 20:49:50 | 8724d2aaffc07904517a3b823867802ca43233ae

Check if serviceInfo.processName is null. When LeakCanary runs on a seperate process and that process for some reason does not have a assigned processName, then we will crash on a NullPointerException. Also a debug log explaining this. (#1225) | 2019-04-01 19:20:40 | 3efc43608ed71dc20b0ad1e0e80e33d15249666f

fix master broken | 2019-04-01 19:07:27 | fe42130029174681a708b7d8622412efbaf81e73

fix trailing spaces per checkstyle | 2019-03-29 22:34:58 | ff17f879ec92ec326f8b1c6b7b8d77a5266d6622

Fix GC Root bugs that missed leaks (#1168)

In Perflib, Snapshot.getGcRoots() only returns the GC roots from the first heap. Based on empirical evidence, it seems like Android has 4 heaps, and the GC Roots used to only be in the first heap, but more recent versions of Android have GC Roots in other heaps as well.

This means LeakCanary would sometimes show "No Leak Found" when there actually was a leak.

Fixes #1163 | 2019-01-10 23:32:27 | 64b6e5a41796ae1587c50c8cc860cea25f28f382

fix typo | 2018-10-17 00:43:01 | 044b1e4827bc71ec008dc3f7e43c78f58885f1e1

Fix LeakCanary toasting (#1116)

- Prior attempts to get it to work with the application context turned out to be buggy.
- This makes LeakCanary use whatever the current resumed activity is, if any.
- If there is no resumed activity, then the toast isn't displayed.

This supersedes #1080 | 2018-10-16 13:23:14 | 0e39e2eea79bc05bf7147a4074dd7163f7c401ff

fix the wrong word (#1111) | 2018-10-16 01:25:28 | 636b9b6c2b39c0c887c9ed78e904239db9bc131e

Merge pull request #1104 from IlyaGulya/bug/travis-ci-cache-fix

Fix travis caching and improve build time. | 2018-09-22 21:25:59 | 344728b906daf6d010f66bdf4ccc29ad8fedede5

Error prone 2.3.1 + suggested fix and specify version

See http://errorprone.info/bugpattern/StringSplitter | 2018-08-22 07:37:33 | a6b6960d73a1da9661f4e85254570bf5f867f954

Merge pull request #1089 from hzsweers/z/fixAnother

Quick followup to #1088 | 2018-08-22 03:15:15 | be973f5f5da6a3516aedab98e639690697617747

Merge pull request #1087 from Goddchen/patch-2

Updated german translation | 2018-08-20 13:52:47 | b43c279b3e1623c193e1dc81955527f70e93f822

Merge pull request #1063 from javmarina/patch-1

Fixed wrong versions in AndroidExcludedRefs | 2018-07-25 18:31:55 | 3b4ebe3e2571377f93e9a6976e021324502a0f78

Fixed wrong versions in AndroidExcludedRefs

Commit https://android.googlesource.com/platform/frameworks/base/+/27db46850b708070452c0ce49daf5f79503fbde6 introduced this issue. This commit was first included in Jelly Bean 4.3 (JELLY_BEAN_MR2), not Jelly Bean 4.1 (JELLY_BEAN)
Commit https://android.googlesource.com/platform/frameworks/base/+/5200e1cb07190a1f6874d72a4561064cad3ee3e0 fixes this issue and was first included in Oreo 8.0 (O). Nougat still has this memory leak. | 2018-07-24 18:24:59 | e4778b25f2c6e65ebc485d255e38586c7d45ec97

Merge pull request #1057 from square/py/ui_bug

Fix drawing of start line | 2018-07-20 22:21:19 | af96577a7d19e4df9f63d95fd9c3bfd2adcddb5d

Avoid Toast crashes

Showing a toast can crash on API 25 because the Window Manager can throw a BadTokenException when addView is called.

This change fixes it by configuring the toast manually and calling the window manager directly. This is based on https://github.com/pyricau/frenchtoast/blob/master/frenchtoast/src/main/java/frenchtoast/Mixture.java#L49 .

Fixes #844 | 2018-07-20 16:11:22 | c9ebc5cf5099c093bde5d3309b2692cb0e2016d8

Fixing setup bug | 2018-06-28 04:07:09 | 505933817cf6e2eb0dad4a78d4c7c35a072b9868

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

Fix crash when pressing home from root screen (#1578)

This bug only happens on older Android devices.

Fixes #1555 | 2019-09-11 01:51:06 | 274f58f96e8de7dcd3000c06ba3e2b50e427747d

Merge pull request #1559 from bric3/fix-primitive-array-dump-skip

Fixes the primitive array dump record skipping | 2019-09-09 22:16:57 | c0fd4d812cb8d6c5723231e501c121da2af86f06

Parsing and applying proguard mapping during heap analysis (#1542)

* Parsing and applying proguard mapping during heap analysis

* Parsing and applying proguard mapping during heap analysis

* Rebased onto master

* Post review changes and updated shark-cli to support mapping files

* Post review fixes

* Moving proguard mapping reader out of the analyzer and formatting fixes | 2019-08-30 16:54:20 | 66182a52069d9be59d0af6220aa9afd74218aa9b

fix images | 2019-08-27 20:02:50 | 8f5030e9faa8690217e1bd436274a3de5b9d3fb3

fix image links in docs | 2019-08-27 19:59:20 | edca56a947278508350bfa5dd33d3fa10699001f

Merge pull request #1549 from Armaxis/patch-1

Added section about using Detekt to Contributing | 2019-08-24 22:16:26 | c923d14909888860a99d5899af17f5b52c9b000f

Revert "Replaced accessor with a call to setter to fix the build issue"

This reverts commit 82db0398 | 2019-08-17 02:21:08 | c570cb9b0fd7bd7fcc88c4d3b529df8837e98fdc

Replaced accessor with a call to setter to fix the build issue | 2019-08-16 04:32:25 | 82db039843303044f91d36ba7c43595ab59bacd5

fix typo | 2019-08-02 15:31:17 | a2452f61e78e689efb59adaf71384d74447578b0

Add / fix android inspectors (#1491)

* Added MortarScope and ViewRootImpl inspectors
* Fixed the ContextWrapper inspector

Fixes #1490
Fixes #1389 | 2019-07-25 22:50:48 | 915f8359690a016a09e66608a041454b9c8c52cb

Documenting public APIs (#1476)

Also fixed naming and other things that weren't right.

Fixes #1474 | 2019-07-19 06:57:25 | 41c69a5d424b4236114c5ce1b077afdad38e57a5

Adding CLI for LeakCanary (#1456)

Example usage:
```
./gradlew leakcanary-cli:run --args='analyze-process com.example.leakcanary'

./gradlew leakcanary-cli:run --args='dump-process com.example.leakcanary'

./gradlew leakcanary-cli:run --args='analyze-file /path/to/heapdump.hprof'
```

Also fixed a bug in ShortestPathFinder which did not ignore null references in object arrays | 2019-07-11 19:11:30 | eded1c96e84f37393857ba4de2580aec784b2391

Behavior change & bugfixes for retained count notification (#1433)

* Bugfix: when tapping the "dump heap" notification, if the GC found no retained instance we didn't use a distinct notification id to communicate that, and then soon after we'd dismiss the notification that let's the user know there is no retained instances on tap.
* Bugfix: we weren't running the GC when checking for retained instances and the count was under the threshold
* Change: we now update the notification and keep it around for 30 seconds when the count goes to 0
* Change: the "no retained instance" notification that shows on tap is identical and also auto dismisses after 30 seconds.
* Change: we're checking for retained references (and running the GC) every 2 seconds instead of 5.

Fixes #1427 | 2019-07-03 20:55:47 | 968083a915343d881bd63e40587c070fde543732

Update how to fix a leak | 2019-06-25 05:46:56 | 177e7fd12933d99eca7a526851c53e598a03bf90

Text rendering tests (#1378)

* Added test coverage for text rendering
* Fixed bug: labels were not rendered on the last node (leaking instance)
* Matched exclusions are now rendered on their own line

Fixes #1375
Fixes #1350 | 2019-06-04 09:32:11 | 1926cb1db73f9583e11c557dbf2e5d46e3896a6e

Thread name based exclusions (#1353)

* Readded support for exclusions of local variable based on thread names
* Renamed ThreadExclusion to JavaLocalExclusion
* Fixed bug: KeyedWeakReference was not always ignored because its superclass is has a weakly reachable exclusion.
* Fixed bug: all root nodes had the same visit order as the first non root enqueued item, making it possible for a non root node to be dequeued before we're done with all roots.
* Redded gc root sorting
* Added tests to cover all uncovered bugs
* Added support for parsing StackFrameRecord

Fixes #1339 | 2019-05-20 13:17:18 | 6c2ee609efda323e88a4964d31fc5a5f0532f776

Reachability => LeakStatus (#1340)

* Combined leaking information from inspectors to solving conflicts while keeping all reasons
* Made reason from view leak inspector more obvious, and added label data about internals
* Moved reachability into LeakTraceElement
* Reachability renamed to LeakNodeStatus and leaking / not leaking
* ReachabilityInspector and Labeler are now functions with type aliases

Related to #1336: should fix the crash, though it's still unclear why AppCompatButton was a gc root there. | 2019-05-07 14:56:59 | 01210bbbfaecb3bcb6057c62b2195366d3bfa4f9

Revamp notifications (#1335)

* New notification that shows the count of retained instances. Tapping it triggers a heap dump. Fixes #1325
* Notifications are now split into two channels: default for results, and low for everything else.
* New config options: LeakCanary.config.dumpHeapWhenDebugging (default false) and LeakCanary.config.retainedVisibleThreshold (default 5)
* Replaced notification int constants and timestamps with resource ids.
* Don't show background notifications in instant apps (#1197) | 2019-05-05 16:38:26 | b14d9bc9c0a87119137bc0998bdec9314186dfcf

Highlighting new leaks (#1334)

New leaks are leaks that have a leak group that doesn't exist in any prior analysis.

* The notification now reports the count of leaks, with a split of new, known, and won't fix.
* The analysis success screen shows new leaks
* Moved description prefixes to be computed rather than inserted in the DB

Fixes #1328 | 2019-05-05 09:37:38 | f9a0518d4ddd69b782b6302caa3e3039787038e4

LeakSentry can be disabled (#1332)

LeakCanary has an enabled config option. Default is on in debug builds off in release builds.

Fixes #1327 | 2019-05-04 17:52:47 | f74f60901f34c751e8b8798d626678aa6233c893

Revert "fix trailing spaces per checkstyle"

This reverts commit ff17f879ec92ec326f8b1c6b7b8d77a5266d6622. | 2019-05-04 08:04:21 | 03136ca7dc1680299d710f79ca885412a1564144

Add test coverage for heap analysis (#1329)

* Fixed bug when reachability inspectors conflicts (reachable should win and erase unreachable)
* Added back support for leaking instances being empty objects, strings, primitive arrays or any object that we otherwise don't follow to find shortest paths. | 2019-05-04 07:51:02 | 59558e655d537c7654c411eebfd840773a8b77c9

Introducing exclusion priority (#1317)

* Add segmented FIFO queue

Unified several queues into one segmented FIFO queue. This will enable us to add several levels of priority.

* Introducing exclusion priority

* "excludedLeak" is now known as "won't fix leak", which matches its reality better. It's a leak that is known and real yet we're not fixing.
* Exclusion.alwaysExclude is replaced with Exclusion.status, with 3 possible values: NEVER_REACHABLE, WONT_FIX_LEAK, WEAKLY_REACHABLE.
* The shortest path finder will now follow weak references after all other paths have been exhausted.
* Removed class exclusion, was confusing, replaced with less lazy approach of listing fields to exclude
* VIEWLOCATIONHOLDER_ROOT should not have been always excluded, fixed.

Fixes #1173 ... well kinda. Instead of "non leaking retained instances", LeakCanary will report weakly reachable traces. Not sure if that'll help but it's a foundation we can build on. | 2019-04-30 17:44:15 | b0eedc553995e354e2382b3378bf0348801cd3c5

AllFieldsLabeler & cleanups (#1316)

* Add new optional labeler that prints all fields (useful for debugging)
* Move deprecated AnalysisResult to perflib
* Made DefaultAnalysisResultListener an object | 2019-04-30 07:08:29 | b9ee5356db265412db39c4c341880f305fbf2c76

fix format | 2019-04-22 06:25:09 | 4a2b158913e5a9eb0d5c6fdfbf949a80fc1b2c6b

Rename default to perflib and experimental to default (#1282)

* Remove experimental from module names

* Remove experimental prefix, add perflib prefix:

* update docs | 2019-04-19 06:01:39 | 425a9f24deb72691b02cdc85f80d177c05afebc5

fix list | 2019-04-18 21:55:43 | 8e3f9d26e8d3555bf934b99ac062aabc3aba528f

fix broken master | 2019-04-10 15:00:30 | f067ae53e050c5f52f47237440a6ac7eee3ca94c

fix broken build due to typo | 2019-04-10 05:44:19 | 7d4ddb4ffe3c9b0f30a84848675452dded0d4115

Leaking information aligned below simple class name. (#1258)

Also fixed issue where extraString + exclusionString were showing after the squiggly line.

Before: 
``` 
┬
├─ java.lang.Thread
│                 Leaking: NO (it's a GC root)
│                 ↓ thread Thread.<Java Local>
│                                ~~~~~~~~~~~~~ (named 'Thread-4')
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                 Leaking: UNKNOWN
│                 ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                     ~~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) 
```
After: 
``` 
┬
├─ java.lang.Thread
│            Leaking: NO (it's a GC root)
│            ↓ thread Thread.<Java Local> (named 'Thread-4')
│                            ~~~~~~~~~~~~
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                         Leaking: UNKNOWN
│                         ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                              ~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) ``` | 2019-04-05 20:11:47 | a938855585c7cf2522ffbd143d4bb66a234eea66

Add share to Stack Overflow button when viewing a leak (#1252)

* Add share to Stack Overflow button when viewing a leak

* Add question tag, lengthen toast and fix build failure. | 2019-04-04 20:49:50 | 8724d2aaffc07904517a3b823867802ca43233ae

Check if serviceInfo.processName is null. When LeakCanary runs on a seperate process and that process for some reason does not have a assigned processName, then we will crash on a NullPointerException. Also a debug log explaining this. (#1225) | 2019-04-01 19:20:40 | 3efc43608ed71dc20b0ad1e0e80e33d15249666f

fix master broken | 2019-04-01 19:07:27 | fe42130029174681a708b7d8622412efbaf81e73

fix trailing spaces per checkstyle | 2019-03-29 22:34:58 | ff17f879ec92ec326f8b1c6b7b8d77a5266d6622

Fix GC Root bugs that missed leaks (#1168)

In Perflib, Snapshot.getGcRoots() only returns the GC roots from the first heap. Based on empirical evidence, it seems like Android has 4 heaps, and the GC Roots used to only be in the first heap, but more recent versions of Android have GC Roots in other heaps as well.

This means LeakCanary would sometimes show "No Leak Found" when there actually was a leak.

Fixes #1163 | 2019-01-10 23:32:27 | 64b6e5a41796ae1587c50c8cc860cea25f28f382

fix typo | 2018-10-17 00:43:01 | 044b1e4827bc71ec008dc3f7e43c78f58885f1e1

Fix LeakCanary toasting (#1116)

- Prior attempts to get it to work with the application context turned out to be buggy.
- This makes LeakCanary use whatever the current resumed activity is, if any.
- If there is no resumed activity, then the toast isn't displayed.

This supersedes #1080 | 2018-10-16 13:23:14 | 0e39e2eea79bc05bf7147a4074dd7163f7c401ff

fix the wrong word (#1111) | 2018-10-16 01:25:28 | 636b9b6c2b39c0c887c9ed78e904239db9bc131e

Merge pull request #1104 from IlyaGulya/bug/travis-ci-cache-fix

Fix travis caching and improve build time. | 2018-09-22 21:25:59 | 344728b906daf6d010f66bdf4ccc29ad8fedede5

Error prone 2.3.1 + suggested fix and specify version

See http://errorprone.info/bugpattern/StringSplitter | 2018-08-22 07:37:33 | a6b6960d73a1da9661f4e85254570bf5f867f954

Merge pull request #1089 from hzsweers/z/fixAnother

Quick followup to #1088 | 2018-08-22 03:15:15 | be973f5f5da6a3516aedab98e639690697617747

Merge pull request #1087 from Goddchen/patch-2

Updated german translation | 2018-08-20 13:52:47 | b43c279b3e1623c193e1dc81955527f70e93f822

Merge pull request #1063 from javmarina/patch-1

Fixed wrong versions in AndroidExcludedRefs | 2018-07-25 18:31:55 | 3b4ebe3e2571377f93e9a6976e021324502a0f78

Fixed wrong versions in AndroidExcludedRefs

Commit https://android.googlesource.com/platform/frameworks/base/+/27db46850b708070452c0ce49daf5f79503fbde6 introduced this issue. This commit was first included in Jelly Bean 4.3 (JELLY_BEAN_MR2), not Jelly Bean 4.1 (JELLY_BEAN)
Commit https://android.googlesource.com/platform/frameworks/base/+/5200e1cb07190a1f6874d72a4561064cad3ee3e0 fixes this issue and was first included in Oreo 8.0 (O). Nougat still has this memory leak. | 2018-07-24 18:24:59 | e4778b25f2c6e65ebc485d255e38586c7d45ec97

Merge pull request #1057 from square/py/ui_bug

Fix drawing of start line | 2018-07-20 22:21:19 | af96577a7d19e4df9f63d95fd9c3bfd2adcddb5d

Avoid Toast crashes

Showing a toast can crash on API 25 because the Window Manager can throw a BadTokenException when addView is called.

This change fixes it by configuring the toast manually and calling the window manager directly. This is based on https://github.com/pyricau/frenchtoast/blob/master/frenchtoast/src/main/java/frenchtoast/Mixture.java#L49 .

Fixes #844 | 2018-07-20 16:11:22 | c9ebc5cf5099c093bde5d3309b2692cb0e2016d8

Fixing setup bug | 2018-06-28 04:07:09 | 505933817cf6e2eb0dad4a78d4c7c35a072b9868

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

Merge pull request #1063 from javmarina/patch-1

Fixed wrong versions in AndroidExcludedRefs | 2018-07-25 18:31:55 | 3b4ebe3e2571377f93e9a6976e021324502a0f78

Fixed wrong versions in AndroidExcludedRefs

Commit https://android.googlesource.com/platform/frameworks/base/+/27db46850b708070452c0ce49daf5f79503fbde6 introduced this issue. This commit was first included in Jelly Bean 4.3 (JELLY_BEAN_MR2), not Jelly Bean 4.1 (JELLY_BEAN)
Commit https://android.googlesource.com/platform/frameworks/base/+/5200e1cb07190a1f6874d72a4561064cad3ee3e0 fixes this issue and was first included in Oreo 8.0 (O). Nougat still has this memory leak. | 2018-07-24 18:24:59 | e4778b25f2c6e65ebc485d255e38586c7d45ec97

Merge pull request #1057 from square/py/ui_bug

Fix drawing of start line | 2018-07-20 22:21:19 | af96577a7d19e4df9f63d95fd9c3bfd2adcddb5d

Avoid Toast crashes

Showing a toast can crash on API 25 because the Window Manager can throw a BadTokenException when addView is called.

This change fixes it by configuring the toast manually and calling the window manager directly. This is based on https://github.com/pyricau/frenchtoast/blob/master/frenchtoast/src/main/java/frenchtoast/Mixture.java#L49 .

Fixes #844 | 2018-07-20 16:11:22 | c9ebc5cf5099c093bde5d3309b2692cb0e2016d8

Fixing setup bug | 2018-06-28 04:07:09 | 505933817cf6e2eb0dad4a78d4c7c35a072b9868

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

Adding CLI for LeakCanary (#1456)

Example usage:
```
./gradlew leakcanary-cli:run --args='analyze-process com.example.leakcanary'

./gradlew leakcanary-cli:run --args='dump-process com.example.leakcanary'

./gradlew leakcanary-cli:run --args='analyze-file /path/to/heapdump.hprof'
```

Also fixed a bug in ShortestPathFinder which did not ignore null references in object arrays | 2019-07-11 19:11:30 | eded1c96e84f37393857ba4de2580aec784b2391

Behavior change & bugfixes for retained count notification (#1433)

* Bugfix: when tapping the "dump heap" notification, if the GC found no retained instance we didn't use a distinct notification id to communicate that, and then soon after we'd dismiss the notification that let's the user know there is no retained instances on tap.
* Bugfix: we weren't running the GC when checking for retained instances and the count was under the threshold
* Change: we now update the notification and keep it around for 30 seconds when the count goes to 0
* Change: the "no retained instance" notification that shows on tap is identical and also auto dismisses after 30 seconds.
* Change: we're checking for retained references (and running the GC) every 2 seconds instead of 5.

Fixes #1427 | 2019-07-03 20:55:47 | 968083a915343d881bd63e40587c070fde543732

Update how to fix a leak | 2019-06-25 05:46:56 | 177e7fd12933d99eca7a526851c53e598a03bf90

Text rendering tests (#1378)

* Added test coverage for text rendering
* Fixed bug: labels were not rendered on the last node (leaking instance)
* Matched exclusions are now rendered on their own line

Fixes #1375
Fixes #1350 | 2019-06-04 09:32:11 | 1926cb1db73f9583e11c557dbf2e5d46e3896a6e

Thread name based exclusions (#1353)

* Readded support for exclusions of local variable based on thread names
* Renamed ThreadExclusion to JavaLocalExclusion
* Fixed bug: KeyedWeakReference was not always ignored because its superclass is has a weakly reachable exclusion.
* Fixed bug: all root nodes had the same visit order as the first non root enqueued item, making it possible for a non root node to be dequeued before we're done with all roots.
* Redded gc root sorting
* Added tests to cover all uncovered bugs
* Added support for parsing StackFrameRecord

Fixes #1339 | 2019-05-20 13:17:18 | 6c2ee609efda323e88a4964d31fc5a5f0532f776

Reachability => LeakStatus (#1340)

* Combined leaking information from inspectors to solving conflicts while keeping all reasons
* Made reason from view leak inspector more obvious, and added label data about internals
* Moved reachability into LeakTraceElement
* Reachability renamed to LeakNodeStatus and leaking / not leaking
* ReachabilityInspector and Labeler are now functions with type aliases

Related to #1336: should fix the crash, though it's still unclear why AppCompatButton was a gc root there. | 2019-05-07 14:56:59 | 01210bbbfaecb3bcb6057c62b2195366d3bfa4f9

Revamp notifications (#1335)

* New notification that shows the count of retained instances. Tapping it triggers a heap dump. Fixes #1325
* Notifications are now split into two channels: default for results, and low for everything else.
* New config options: LeakCanary.config.dumpHeapWhenDebugging (default false) and LeakCanary.config.retainedVisibleThreshold (default 5)
* Replaced notification int constants and timestamps with resource ids.
* Don't show background notifications in instant apps (#1197) | 2019-05-05 16:38:26 | b14d9bc9c0a87119137bc0998bdec9314186dfcf

Highlighting new leaks (#1334)

New leaks are leaks that have a leak group that doesn't exist in any prior analysis.

* The notification now reports the count of leaks, with a split of new, known, and won't fix.
* The analysis success screen shows new leaks
* Moved description prefixes to be computed rather than inserted in the DB

Fixes #1328 | 2019-05-05 09:37:38 | f9a0518d4ddd69b782b6302caa3e3039787038e4

LeakSentry can be disabled (#1332)

LeakCanary has an enabled config option. Default is on in debug builds off in release builds.

Fixes #1327 | 2019-05-04 17:52:47 | f74f60901f34c751e8b8798d626678aa6233c893

Revert "fix trailing spaces per checkstyle"

This reverts commit ff17f879ec92ec326f8b1c6b7b8d77a5266d6622. | 2019-05-04 08:04:21 | 03136ca7dc1680299d710f79ca885412a1564144

Add test coverage for heap analysis (#1329)

* Fixed bug when reachability inspectors conflicts (reachable should win and erase unreachable)
* Added back support for leaking instances being empty objects, strings, primitive arrays or any object that we otherwise don't follow to find shortest paths. | 2019-05-04 07:51:02 | 59558e655d537c7654c411eebfd840773a8b77c9

Introducing exclusion priority (#1317)

* Add segmented FIFO queue

Unified several queues into one segmented FIFO queue. This will enable us to add several levels of priority.

* Introducing exclusion priority

* "excludedLeak" is now known as "won't fix leak", which matches its reality better. It's a leak that is known and real yet we're not fixing.
* Exclusion.alwaysExclude is replaced with Exclusion.status, with 3 possible values: NEVER_REACHABLE, WONT_FIX_LEAK, WEAKLY_REACHABLE.
* The shortest path finder will now follow weak references after all other paths have been exhausted.
* Removed class exclusion, was confusing, replaced with less lazy approach of listing fields to exclude
* VIEWLOCATIONHOLDER_ROOT should not have been always excluded, fixed.

Fixes #1173 ... well kinda. Instead of "non leaking retained instances", LeakCanary will report weakly reachable traces. Not sure if that'll help but it's a foundation we can build on. | 2019-04-30 17:44:15 | b0eedc553995e354e2382b3378bf0348801cd3c5

AllFieldsLabeler & cleanups (#1316)

* Add new optional labeler that prints all fields (useful for debugging)
* Move deprecated AnalysisResult to perflib
* Made DefaultAnalysisResultListener an object | 2019-04-30 07:08:29 | b9ee5356db265412db39c4c341880f305fbf2c76

fix format | 2019-04-22 06:25:09 | 4a2b158913e5a9eb0d5c6fdfbf949a80fc1b2c6b

Rename default to perflib and experimental to default (#1282)

* Remove experimental from module names

* Remove experimental prefix, add perflib prefix:

* update docs | 2019-04-19 06:01:39 | 425a9f24deb72691b02cdc85f80d177c05afebc5

fix list | 2019-04-18 21:55:43 | 8e3f9d26e8d3555bf934b99ac062aabc3aba528f

fix broken master | 2019-04-10 15:00:30 | f067ae53e050c5f52f47237440a6ac7eee3ca94c

fix broken build due to typo | 2019-04-10 05:44:19 | 7d4ddb4ffe3c9b0f30a84848675452dded0d4115

Leaking information aligned below simple class name. (#1258)

Also fixed issue where extraString + exclusionString were showing after the squiggly line.

Before: 
``` 
┬
├─ java.lang.Thread
│                 Leaking: NO (it's a GC root)
│                 ↓ thread Thread.<Java Local>
│                                ~~~~~~~~~~~~~ (named 'Thread-4')
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                 Leaking: UNKNOWN
│                 ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                     ~~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) 
```
After: 
``` 
┬
├─ java.lang.Thread
│            Leaking: NO (it's a GC root)
│            ↓ thread Thread.<Java Local> (named 'Thread-4')
│                            ~~~~~~~~~~~~
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                         Leaking: UNKNOWN
│                         ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                              ~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) ``` | 2019-04-05 20:11:47 | a938855585c7cf2522ffbd143d4bb66a234eea66

Add share to Stack Overflow button when viewing a leak (#1252)

* Add share to Stack Overflow button when viewing a leak

* Add question tag, lengthen toast and fix build failure. | 2019-04-04 20:49:50 | 8724d2aaffc07904517a3b823867802ca43233ae

Check if serviceInfo.processName is null. When LeakCanary runs on a seperate process and that process for some reason does not have a assigned processName, then we will crash on a NullPointerException. Also a debug log explaining this. (#1225) | 2019-04-01 19:20:40 | 3efc43608ed71dc20b0ad1e0e80e33d15249666f

fix master broken | 2019-04-01 19:07:27 | fe42130029174681a708b7d8622412efbaf81e73

fix trailing spaces per checkstyle | 2019-03-29 22:34:58 | ff17f879ec92ec326f8b1c6b7b8d77a5266d6622

Fix GC Root bugs that missed leaks (#1168)

In Perflib, Snapshot.getGcRoots() only returns the GC roots from the first heap. Based on empirical evidence, it seems like Android has 4 heaps, and the GC Roots used to only be in the first heap, but more recent versions of Android have GC Roots in other heaps as well.

This means LeakCanary would sometimes show "No Leak Found" when there actually was a leak.

Fixes #1163 | 2019-01-10 23:32:27 | 64b6e5a41796ae1587c50c8cc860cea25f28f382

fix typo | 2018-10-17 00:43:01 | 044b1e4827bc71ec008dc3f7e43c78f58885f1e1

Fix LeakCanary toasting (#1116)

- Prior attempts to get it to work with the application context turned out to be buggy.
- This makes LeakCanary use whatever the current resumed activity is, if any.
- If there is no resumed activity, then the toast isn't displayed.

This supersedes #1080 | 2018-10-16 13:23:14 | 0e39e2eea79bc05bf7147a4074dd7163f7c401ff

fix the wrong word (#1111) | 2018-10-16 01:25:28 | 636b9b6c2b39c0c887c9ed78e904239db9bc131e

Merge pull request #1104 from IlyaGulya/bug/travis-ci-cache-fix

Fix travis caching and improve build time. | 2018-09-22 21:25:59 | 344728b906daf6d010f66bdf4ccc29ad8fedede5

Error prone 2.3.1 + suggested fix and specify version

See http://errorprone.info/bugpattern/StringSplitter | 2018-08-22 07:37:33 | a6b6960d73a1da9661f4e85254570bf5f867f954

Merge pull request #1089 from hzsweers/z/fixAnother

Quick followup to #1088 | 2018-08-22 03:15:15 | be973f5f5da6a3516aedab98e639690697617747

Merge pull request #1087 from Goddchen/patch-2

Updated german translation | 2018-08-20 13:52:47 | b43c279b3e1623c193e1dc81955527f70e93f822

Merge pull request #1063 from javmarina/patch-1

Fixed wrong versions in AndroidExcludedRefs | 2018-07-25 18:31:55 | 3b4ebe3e2571377f93e9a6976e021324502a0f78

Fixed wrong versions in AndroidExcludedRefs

Commit https://android.googlesource.com/platform/frameworks/base/+/27db46850b708070452c0ce49daf5f79503fbde6 introduced this issue. This commit was first included in Jelly Bean 4.3 (JELLY_BEAN_MR2), not Jelly Bean 4.1 (JELLY_BEAN)
Commit https://android.googlesource.com/platform/frameworks/base/+/5200e1cb07190a1f6874d72a4561064cad3ee3e0 fixes this issue and was first included in Oreo 8.0 (O). Nougat still has this memory leak. | 2018-07-24 18:24:59 | e4778b25f2c6e65ebc485d255e38586c7d45ec97

Merge pull request #1057 from square/py/ui_bug

Fix drawing of start line | 2018-07-20 22:21:19 | af96577a7d19e4df9f63d95fd9c3bfd2adcddb5d

Avoid Toast crashes

Showing a toast can crash on API 25 because the Window Manager can throw a BadTokenException when addView is called.

This change fixes it by configuring the toast manually and calling the window manager directly. This is based on https://github.com/pyricau/frenchtoast/blob/master/frenchtoast/src/main/java/frenchtoast/Mixture.java#L49 .

Fixes #844 | 2018-07-20 16:11:22 | c9ebc5cf5099c093bde5d3309b2692cb0e2016d8

Fixing setup bug | 2018-06-28 04:07:09 | 505933817cf6e2eb0dad4a78d4c7c35a072b9868

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

Update how to fix a leak | 2019-06-25 05:46:56 | 177e7fd12933d99eca7a526851c53e598a03bf90

Text rendering tests (#1378)

* Added test coverage for text rendering
* Fixed bug: labels were not rendered on the last node (leaking instance)
* Matched exclusions are now rendered on their own line

Fixes #1375
Fixes #1350 | 2019-06-04 09:32:11 | 1926cb1db73f9583e11c557dbf2e5d46e3896a6e

Thread name based exclusions (#1353)

* Readded support for exclusions of local variable based on thread names
* Renamed ThreadExclusion to JavaLocalExclusion
* Fixed bug: KeyedWeakReference was not always ignored because its superclass is has a weakly reachable exclusion.
* Fixed bug: all root nodes had the same visit order as the first non root enqueued item, making it possible for a non root node to be dequeued before we're done with all roots.
* Redded gc root sorting
* Added tests to cover all uncovered bugs
* Added support for parsing StackFrameRecord

Fixes #1339 | 2019-05-20 13:17:18 | 6c2ee609efda323e88a4964d31fc5a5f0532f776

Reachability => LeakStatus (#1340)

* Combined leaking information from inspectors to solving conflicts while keeping all reasons
* Made reason from view leak inspector more obvious, and added label data about internals
* Moved reachability into LeakTraceElement
* Reachability renamed to LeakNodeStatus and leaking / not leaking
* ReachabilityInspector and Labeler are now functions with type aliases

Related to #1336: should fix the crash, though it's still unclear why AppCompatButton was a gc root there. | 2019-05-07 14:56:59 | 01210bbbfaecb3bcb6057c62b2195366d3bfa4f9

Revamp notifications (#1335)

* New notification that shows the count of retained instances. Tapping it triggers a heap dump. Fixes #1325
* Notifications are now split into two channels: default for results, and low for everything else.
* New config options: LeakCanary.config.dumpHeapWhenDebugging (default false) and LeakCanary.config.retainedVisibleThreshold (default 5)
* Replaced notification int constants and timestamps with resource ids.
* Don't show background notifications in instant apps (#1197) | 2019-05-05 16:38:26 | b14d9bc9c0a87119137bc0998bdec9314186dfcf

Highlighting new leaks (#1334)

New leaks are leaks that have a leak group that doesn't exist in any prior analysis.

* The notification now reports the count of leaks, with a split of new, known, and won't fix.
* The analysis success screen shows new leaks
* Moved description prefixes to be computed rather than inserted in the DB

Fixes #1328 | 2019-05-05 09:37:38 | f9a0518d4ddd69b782b6302caa3e3039787038e4

LeakSentry can be disabled (#1332)

LeakCanary has an enabled config option. Default is on in debug builds off in release builds.

Fixes #1327 | 2019-05-04 17:52:47 | f74f60901f34c751e8b8798d626678aa6233c893

Revert "fix trailing spaces per checkstyle"

This reverts commit ff17f879ec92ec326f8b1c6b7b8d77a5266d6622. | 2019-05-04 08:04:21 | 03136ca7dc1680299d710f79ca885412a1564144

Add test coverage for heap analysis (#1329)

* Fixed bug when reachability inspectors conflicts (reachable should win and erase unreachable)
* Added back support for leaking instances being empty objects, strings, primitive arrays or any object that we otherwise don't follow to find shortest paths. | 2019-05-04 07:51:02 | 59558e655d537c7654c411eebfd840773a8b77c9

Introducing exclusion priority (#1317)

* Add segmented FIFO queue

Unified several queues into one segmented FIFO queue. This will enable us to add several levels of priority.

* Introducing exclusion priority

* "excludedLeak" is now known as "won't fix leak", which matches its reality better. It's a leak that is known and real yet we're not fixing.
* Exclusion.alwaysExclude is replaced with Exclusion.status, with 3 possible values: NEVER_REACHABLE, WONT_FIX_LEAK, WEAKLY_REACHABLE.
* The shortest path finder will now follow weak references after all other paths have been exhausted.
* Removed class exclusion, was confusing, replaced with less lazy approach of listing fields to exclude
* VIEWLOCATIONHOLDER_ROOT should not have been always excluded, fixed.

Fixes #1173 ... well kinda. Instead of "non leaking retained instances", LeakCanary will report weakly reachable traces. Not sure if that'll help but it's a foundation we can build on. | 2019-04-30 17:44:15 | b0eedc553995e354e2382b3378bf0348801cd3c5

AllFieldsLabeler & cleanups (#1316)

* Add new optional labeler that prints all fields (useful for debugging)
* Move deprecated AnalysisResult to perflib
* Made DefaultAnalysisResultListener an object | 2019-04-30 07:08:29 | b9ee5356db265412db39c4c341880f305fbf2c76

fix format | 2019-04-22 06:25:09 | 4a2b158913e5a9eb0d5c6fdfbf949a80fc1b2c6b

Rename default to perflib and experimental to default (#1282)

* Remove experimental from module names

* Remove experimental prefix, add perflib prefix:

* update docs | 2019-04-19 06:01:39 | 425a9f24deb72691b02cdc85f80d177c05afebc5

fix list | 2019-04-18 21:55:43 | 8e3f9d26e8d3555bf934b99ac062aabc3aba528f

fix broken master | 2019-04-10 15:00:30 | f067ae53e050c5f52f47237440a6ac7eee3ca94c

fix broken build due to typo | 2019-04-10 05:44:19 | 7d4ddb4ffe3c9b0f30a84848675452dded0d4115

Leaking information aligned below simple class name. (#1258)

Also fixed issue where extraString + exclusionString were showing after the squiggly line.

Before: 
``` 
┬
├─ java.lang.Thread
│                 Leaking: NO (it's a GC root)
│                 ↓ thread Thread.<Java Local>
│                                ~~~~~~~~~~~~~ (named 'Thread-4')
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                 Leaking: UNKNOWN
│                 ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                     ~~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) 
```
After: 
``` 
┬
├─ java.lang.Thread
│            Leaking: NO (it's a GC root)
│            ↓ thread Thread.<Java Local> (named 'Thread-4')
│                            ~~~~~~~~~~~~
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                         Leaking: UNKNOWN
│                         ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                              ~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) ``` | 2019-04-05 20:11:47 | a938855585c7cf2522ffbd143d4bb66a234eea66

Add share to Stack Overflow button when viewing a leak (#1252)

* Add share to Stack Overflow button when viewing a leak

* Add question tag, lengthen toast and fix build failure. | 2019-04-04 20:49:50 | 8724d2aaffc07904517a3b823867802ca43233ae

Check if serviceInfo.processName is null. When LeakCanary runs on a seperate process and that process for some reason does not have a assigned processName, then we will crash on a NullPointerException. Also a debug log explaining this. (#1225) | 2019-04-01 19:20:40 | 3efc43608ed71dc20b0ad1e0e80e33d15249666f

fix master broken | 2019-04-01 19:07:27 | fe42130029174681a708b7d8622412efbaf81e73

fix trailing spaces per checkstyle | 2019-03-29 22:34:58 | ff17f879ec92ec326f8b1c6b7b8d77a5266d6622

Fix GC Root bugs that missed leaks (#1168)

In Perflib, Snapshot.getGcRoots() only returns the GC roots from the first heap. Based on empirical evidence, it seems like Android has 4 heaps, and the GC Roots used to only be in the first heap, but more recent versions of Android have GC Roots in other heaps as well.

This means LeakCanary would sometimes show "No Leak Found" when there actually was a leak.

Fixes #1163 | 2019-01-10 23:32:27 | 64b6e5a41796ae1587c50c8cc860cea25f28f382

fix typo | 2018-10-17 00:43:01 | 044b1e4827bc71ec008dc3f7e43c78f58885f1e1

Fix LeakCanary toasting (#1116)

- Prior attempts to get it to work with the application context turned out to be buggy.
- This makes LeakCanary use whatever the current resumed activity is, if any.
- If there is no resumed activity, then the toast isn't displayed.

This supersedes #1080 | 2018-10-16 13:23:14 | 0e39e2eea79bc05bf7147a4074dd7163f7c401ff

fix the wrong word (#1111) | 2018-10-16 01:25:28 | 636b9b6c2b39c0c887c9ed78e904239db9bc131e

Merge pull request #1104 from IlyaGulya/bug/travis-ci-cache-fix

Fix travis caching and improve build time. | 2018-09-22 21:25:59 | 344728b906daf6d010f66bdf4ccc29ad8fedede5

Error prone 2.3.1 + suggested fix and specify version

See http://errorprone.info/bugpattern/StringSplitter | 2018-08-22 07:37:33 | a6b6960d73a1da9661f4e85254570bf5f867f954

Merge pull request #1089 from hzsweers/z/fixAnother

Quick followup to #1088 | 2018-08-22 03:15:15 | be973f5f5da6a3516aedab98e639690697617747

Merge pull request #1087 from Goddchen/patch-2

Updated german translation | 2018-08-20 13:52:47 | b43c279b3e1623c193e1dc81955527f70e93f822

Merge pull request #1063 from javmarina/patch-1

Fixed wrong versions in AndroidExcludedRefs | 2018-07-25 18:31:55 | 3b4ebe3e2571377f93e9a6976e021324502a0f78

Fixed wrong versions in AndroidExcludedRefs

Commit https://android.googlesource.com/platform/frameworks/base/+/27db46850b708070452c0ce49daf5f79503fbde6 introduced this issue. This commit was first included in Jelly Bean 4.3 (JELLY_BEAN_MR2), not Jelly Bean 4.1 (JELLY_BEAN)
Commit https://android.googlesource.com/platform/frameworks/base/+/5200e1cb07190a1f6874d72a4561064cad3ee3e0 fixes this issue and was first included in Oreo 8.0 (O). Nougat still has this memory leak. | 2018-07-24 18:24:59 | e4778b25f2c6e65ebc485d255e38586c7d45ec97

Merge pull request #1057 from square/py/ui_bug

Fix drawing of start line | 2018-07-20 22:21:19 | af96577a7d19e4df9f63d95fd9c3bfd2adcddb5d

Avoid Toast crashes

Showing a toast can crash on API 25 because the Window Manager can throw a BadTokenException when addView is called.

This change fixes it by configuring the toast manually and calling the window manager directly. This is based on https://github.com/pyricau/frenchtoast/blob/master/frenchtoast/src/main/java/frenchtoast/Mixture.java#L49 .

Fixes #844 | 2018-07-20 16:11:22 | c9ebc5cf5099c093bde5d3309b2692cb0e2016d8

Fixing setup bug | 2018-06-28 04:07:09 | 505933817cf6e2eb0dad4a78d4c7c35a072b9868

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

Adding CLI for LeakCanary (#1456)

Example usage:
```
./gradlew leakcanary-cli:run --args='analyze-process com.example.leakcanary'

./gradlew leakcanary-cli:run --args='dump-process com.example.leakcanary'

./gradlew leakcanary-cli:run --args='analyze-file /path/to/heapdump.hprof'
```

Also fixed a bug in ShortestPathFinder which did not ignore null references in object arrays | 2019-07-11 19:11:30 | eded1c96e84f37393857ba4de2580aec784b2391

Behavior change & bugfixes for retained count notification (#1433)

* Bugfix: when tapping the "dump heap" notification, if the GC found no retained instance we didn't use a distinct notification id to communicate that, and then soon after we'd dismiss the notification that let's the user know there is no retained instances on tap.
* Bugfix: we weren't running the GC when checking for retained instances and the count was under the threshold
* Change: we now update the notification and keep it around for 30 seconds when the count goes to 0
* Change: the "no retained instance" notification that shows on tap is identical and also auto dismisses after 30 seconds.
* Change: we're checking for retained references (and running the GC) every 2 seconds instead of 5.

Fixes #1427 | 2019-07-03 20:55:47 | 968083a915343d881bd63e40587c070fde543732

Update how to fix a leak | 2019-06-25 05:46:56 | 177e7fd12933d99eca7a526851c53e598a03bf90

Text rendering tests (#1378)

* Added test coverage for text rendering
* Fixed bug: labels were not rendered on the last node (leaking instance)
* Matched exclusions are now rendered on their own line

Fixes #1375
Fixes #1350 | 2019-06-04 09:32:11 | 1926cb1db73f9583e11c557dbf2e5d46e3896a6e

Thread name based exclusions (#1353)

* Readded support for exclusions of local variable based on thread names
* Renamed ThreadExclusion to JavaLocalExclusion
* Fixed bug: KeyedWeakReference was not always ignored because its superclass is has a weakly reachable exclusion.
* Fixed bug: all root nodes had the same visit order as the first non root enqueued item, making it possible for a non root node to be dequeued before we're done with all roots.
* Redded gc root sorting
* Added tests to cover all uncovered bugs
* Added support for parsing StackFrameRecord

Fixes #1339 | 2019-05-20 13:17:18 | 6c2ee609efda323e88a4964d31fc5a5f0532f776

Reachability => LeakStatus (#1340)

* Combined leaking information from inspectors to solving conflicts while keeping all reasons
* Made reason from view leak inspector more obvious, and added label data about internals
* Moved reachability into LeakTraceElement
* Reachability renamed to LeakNodeStatus and leaking / not leaking
* ReachabilityInspector and Labeler are now functions with type aliases

Related to #1336: should fix the crash, though it's still unclear why AppCompatButton was a gc root there. | 2019-05-07 14:56:59 | 01210bbbfaecb3bcb6057c62b2195366d3bfa4f9

Revamp notifications (#1335)

* New notification that shows the count of retained instances. Tapping it triggers a heap dump. Fixes #1325
* Notifications are now split into two channels: default for results, and low for everything else.
* New config options: LeakCanary.config.dumpHeapWhenDebugging (default false) and LeakCanary.config.retainedVisibleThreshold (default 5)
* Replaced notification int constants and timestamps with resource ids.
* Don't show background notifications in instant apps (#1197) | 2019-05-05 16:38:26 | b14d9bc9c0a87119137bc0998bdec9314186dfcf

Highlighting new leaks (#1334)

New leaks are leaks that have a leak group that doesn't exist in any prior analysis.

* The notification now reports the count of leaks, with a split of new, known, and won't fix.
* The analysis success screen shows new leaks
* Moved description prefixes to be computed rather than inserted in the DB

Fixes #1328 | 2019-05-05 09:37:38 | f9a0518d4ddd69b782b6302caa3e3039787038e4

LeakSentry can be disabled (#1332)

LeakCanary has an enabled config option. Default is on in debug builds off in release builds.

Fixes #1327 | 2019-05-04 17:52:47 | f74f60901f34c751e8b8798d626678aa6233c893

Revert "fix trailing spaces per checkstyle"

This reverts commit ff17f879ec92ec326f8b1c6b7b8d77a5266d6622. | 2019-05-04 08:04:21 | 03136ca7dc1680299d710f79ca885412a1564144

Add test coverage for heap analysis (#1329)

* Fixed bug when reachability inspectors conflicts (reachable should win and erase unreachable)
* Added back support for leaking instances being empty objects, strings, primitive arrays or any object that we otherwise don't follow to find shortest paths. | 2019-05-04 07:51:02 | 59558e655d537c7654c411eebfd840773a8b77c9

Introducing exclusion priority (#1317)

* Add segmented FIFO queue

Unified several queues into one segmented FIFO queue. This will enable us to add several levels of priority.

* Introducing exclusion priority

* "excludedLeak" is now known as "won't fix leak", which matches its reality better. It's a leak that is known and real yet we're not fixing.
* Exclusion.alwaysExclude is replaced with Exclusion.status, with 3 possible values: NEVER_REACHABLE, WONT_FIX_LEAK, WEAKLY_REACHABLE.
* The shortest path finder will now follow weak references after all other paths have been exhausted.
* Removed class exclusion, was confusing, replaced with less lazy approach of listing fields to exclude
* VIEWLOCATIONHOLDER_ROOT should not have been always excluded, fixed.

Fixes #1173 ... well kinda. Instead of "non leaking retained instances", LeakCanary will report weakly reachable traces. Not sure if that'll help but it's a foundation we can build on. | 2019-04-30 17:44:15 | b0eedc553995e354e2382b3378bf0348801cd3c5

AllFieldsLabeler & cleanups (#1316)

* Add new optional labeler that prints all fields (useful for debugging)
* Move deprecated AnalysisResult to perflib
* Made DefaultAnalysisResultListener an object | 2019-04-30 07:08:29 | b9ee5356db265412db39c4c341880f305fbf2c76

fix format | 2019-04-22 06:25:09 | 4a2b158913e5a9eb0d5c6fdfbf949a80fc1b2c6b

Rename default to perflib and experimental to default (#1282)

* Remove experimental from module names

* Remove experimental prefix, add perflib prefix:

* update docs | 2019-04-19 06:01:39 | 425a9f24deb72691b02cdc85f80d177c05afebc5

fix list | 2019-04-18 21:55:43 | 8e3f9d26e8d3555bf934b99ac062aabc3aba528f

fix broken master | 2019-04-10 15:00:30 | f067ae53e050c5f52f47237440a6ac7eee3ca94c

fix broken build due to typo | 2019-04-10 05:44:19 | 7d4ddb4ffe3c9b0f30a84848675452dded0d4115

Leaking information aligned below simple class name. (#1258)

Also fixed issue where extraString + exclusionString were showing after the squiggly line.

Before: 
``` 
┬
├─ java.lang.Thread
│                 Leaking: NO (it's a GC root)
│                 ↓ thread Thread.<Java Local>
│                                ~~~~~~~~~~~~~ (named 'Thread-4')
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                 Leaking: UNKNOWN
│                 ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                     ~~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) 
```
After: 
``` 
┬
├─ java.lang.Thread
│            Leaking: NO (it's a GC root)
│            ↓ thread Thread.<Java Local> (named 'Thread-4')
│                            ~~~~~~~~~~~~
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                         Leaking: UNKNOWN
│                         ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                              ~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) ``` | 2019-04-05 20:11:47 | a938855585c7cf2522ffbd143d4bb66a234eea66

Add share to Stack Overflow button when viewing a leak (#1252)

* Add share to Stack Overflow button when viewing a leak

* Add question tag, lengthen toast and fix build failure. | 2019-04-04 20:49:50 | 8724d2aaffc07904517a3b823867802ca43233ae

Check if serviceInfo.processName is null. When LeakCanary runs on a seperate process and that process for some reason does not have a assigned processName, then we will crash on a NullPointerException. Also a debug log explaining this. (#1225) | 2019-04-01 19:20:40 | 3efc43608ed71dc20b0ad1e0e80e33d15249666f

fix master broken | 2019-04-01 19:07:27 | fe42130029174681a708b7d8622412efbaf81e73

fix trailing spaces per checkstyle | 2019-03-29 22:34:58 | ff17f879ec92ec326f8b1c6b7b8d77a5266d6622

Fix GC Root bugs that missed leaks (#1168)

In Perflib, Snapshot.getGcRoots() only returns the GC roots from the first heap. Based on empirical evidence, it seems like Android has 4 heaps, and the GC Roots used to only be in the first heap, but more recent versions of Android have GC Roots in other heaps as well.

This means LeakCanary would sometimes show "No Leak Found" when there actually was a leak.

Fixes #1163 | 2019-01-10 23:32:27 | 64b6e5a41796ae1587c50c8cc860cea25f28f382

fix typo | 2018-10-17 00:43:01 | 044b1e4827bc71ec008dc3f7e43c78f58885f1e1

Fix LeakCanary toasting (#1116)

- Prior attempts to get it to work with the application context turned out to be buggy.
- This makes LeakCanary use whatever the current resumed activity is, if any.
- If there is no resumed activity, then the toast isn't displayed.

This supersedes #1080 | 2018-10-16 13:23:14 | 0e39e2eea79bc05bf7147a4074dd7163f7c401ff

fix the wrong word (#1111) | 2018-10-16 01:25:28 | 636b9b6c2b39c0c887c9ed78e904239db9bc131e

Merge pull request #1104 from IlyaGulya/bug/travis-ci-cache-fix

Fix travis caching and improve build time. | 2018-09-22 21:25:59 | 344728b906daf6d010f66bdf4ccc29ad8fedede5

Error prone 2.3.1 + suggested fix and specify version

See http://errorprone.info/bugpattern/StringSplitter | 2018-08-22 07:37:33 | a6b6960d73a1da9661f4e85254570bf5f867f954

Merge pull request #1089 from hzsweers/z/fixAnother

Quick followup to #1088 | 2018-08-22 03:15:15 | be973f5f5da6a3516aedab98e639690697617747

Merge pull request #1087 from Goddchen/patch-2

Updated german translation | 2018-08-20 13:52:47 | b43c279b3e1623c193e1dc81955527f70e93f822

Merge pull request #1063 from javmarina/patch-1

Fixed wrong versions in AndroidExcludedRefs | 2018-07-25 18:31:55 | 3b4ebe3e2571377f93e9a6976e021324502a0f78

Fixed wrong versions in AndroidExcludedRefs

Commit https://android.googlesource.com/platform/frameworks/base/+/27db46850b708070452c0ce49daf5f79503fbde6 introduced this issue. This commit was first included in Jelly Bean 4.3 (JELLY_BEAN_MR2), not Jelly Bean 4.1 (JELLY_BEAN)
Commit https://android.googlesource.com/platform/frameworks/base/+/5200e1cb07190a1f6874d72a4561064cad3ee3e0 fixes this issue and was first included in Oreo 8.0 (O). Nougat still has this memory leak. | 2018-07-24 18:24:59 | e4778b25f2c6e65ebc485d255e38586c7d45ec97

Merge pull request #1057 from square/py/ui_bug

Fix drawing of start line | 2018-07-20 22:21:19 | af96577a7d19e4df9f63d95fd9c3bfd2adcddb5d

Avoid Toast crashes

Showing a toast can crash on API 25 because the Window Manager can throw a BadTokenException when addView is called.

This change fixes it by configuring the toast manually and calling the window manager directly. This is based on https://github.com/pyricau/frenchtoast/blob/master/frenchtoast/src/main/java/frenchtoast/Mixture.java#L49 .

Fixes #844 | 2018-07-20 16:11:22 | c9ebc5cf5099c093bde5d3309b2692cb0e2016d8

Fixing setup bug | 2018-06-28 04:07:09 | 505933817cf6e2eb0dad4a78d4c7c35a072b9868

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

Doc fixes and updates (#1744)

* Fixes to properly render recipes in MkDoc

* Bumped release date
Updated release doc | 2020-02-06 18:00:48 | 57057c636b816cd73f9b344a4201aa04a3a8cca8

[bugfix]AppWatcher manualInstall function not works bugfix (#1734)

* manualInstall config not enabled by default bugfix

* Make manualInstall config enable decided by isDebuggableBuild

* Make manualInstall config copy from existing customized config

* Make manualInstall config copy from existing customized config and set enabled to true forcely

* Make manualInstall config enable decided by InternalAppWatcher.isDebuggableBuild | 2020-02-04 03:30:50 | 00604fce8f86e3b8a9fe4ea2ea0e71fc1a74eb28

Merge pull request #1729 from square/py/fix_text

Fix helper text | 2020-01-24 19:53:15 | 825ac6242cde0a4c0488547d03e12a8df91a5f31

Fixed compilation issue by extracting example application to debug/release folders | 2019-10-09 01:29:24 | b9f1bf88c4b0ac9f0a91cc54638899d9c6ecb8e1

fix missing toString | 2020-01-04 01:28:33 | 47bad9fec441ea462129ece0c4f1125f578ba1ec

Use "x minutes ago" format for dates (#1675)

Also fixed some of the ordering (leaks types by counts desc, leaks by date desc)

Fixes #1672 | 2019-12-16 23:56:38 | 9fae7ed497e1760abe74cf2c22535fbd51f16331

Gradle plugin that puts proguard mapping file in the apk as an asset (#1589)

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Add unit tests for copy obfuscation file task

* Add recipe describing how to use the plugin

* Add plugin usage instruction

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Rebased onto master

* Add missing test dependencies

* Use lambda function instead of a collection for plugin configuration

* Post code review fixups

* Rename according to code review suggestions

* Fix detekt warning

* Pass empty file if mapping doesn't exist

* Improved recipe

* Code review fixups

* Fix CopyObfuscationMappingFileTask tests

* Code review fixes

* Fix detekt issues

* Add plugin tests

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Rebased onto master

* Use lambda function instead of a collection for plugin configuration

* Post code review fixups

* Rename according to code review suggestions

* Fix detekt warning

* Pass empty file if mapping doesn't exist

* Improved recipe

* Code review fixups

* Fix CopyObfuscationMappingFileTask tests

* Code review fixes

* Fix detekt issues

* Add plugin tests

* Rebased onto master

* Add one more test for plugin

* Try fixing CI tests by reading $ANDROID_HOME value

* Try fixing CI tests by hardcoding android sdk path

* Debugging CI failing test

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Post review fixes

* Debugging failing test on CI

* Try fixing CI tests by hardcoding android sdk path

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debug failing test on CI

* Debug failing test on CI

* Debug failing test on CI

* Debug failing test on CI

* Debug failing test on CI

* Debug failing test on CI

* Use trusty dist in travis config

* Debug failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debug failing CI test

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Prevent GradleRunner from running builds in a separate process

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* sni: modernize travis script. Solve emulator issue.
The build now uses build tools 28 which requires little adjustments
from the original recipe. In the future we can just use the original recipe
Original recipe: https://docs.travis-ci.com/user/languages/android/ | 2019-12-10 06:48:02 | 25a10fcd9f405235de63bd791ea4ae4eb5453924

Fix emulators  (#1667)

* Revert "Fix travis (#1665)"

This reverts commit 00b9bd32d535022800153f34916d4c4667d2a5cd.

* Fix emulators

A recent emulator update breaks a few CI projects.  This PR applies
a fix suggested by Google.

https://issuetracker.google.com/issues/145622251#comment33 | 2019-12-10 05:43:06 | b678e1508e9ef3618ce2c44d44ff733f350d4185

Fix travis (#1665)

According to [this tweet](https://twitter.com/colinwhi/status/1204102384458194944) from @colinrtwhite, Travis is failing due to a bug in the most recent version of the emulator. Pinning the emulator to an older version works around it. This commit steals the fix from https://github.com/coil-kt/coil/pull/195 . | 2019-12-09 19:54:40 | 00b9bd32d535022800153f34916d4c4667d2a5cd

Add ability to customize class used to detect tests (#1654)

Developers should not ship JUnit in their app, even in debug. However, some debug libraries unfortunately ship with JUnit as a dependency (e.g. see https://github.com/square/okhttp/issues/4667).

Developers can change the default to target a different class (e.g assertj) to help LeakCanary detect unit tests, by overriding a public string:

```
  <string name="leak_canary_test_class_name">org.assertj.core.api.Assertions</string>
```

Fixes #1649 | 2019-12-03 02:35:07 | dbbb969d59b066c3f9197ebc3863cc4f54dae5d2

fix changelog | 2019-11-25 19:32:41 | 50ae3ba7558e5a3f83fc11b4d17a281f072ff078

Fix bug in handling JNI roots (#1636)

* When adding support for native reference leaks (879ab7c) there was a missing bracket in an if/else branch that led to all native gc roots being ignored.

Fixes #1634 | 2019-11-25 19:00:23 | aff338544b5eebbb0b3c792c628cca11fa888373

fix typos | 2019-11-19 03:58:07 | 25b0df0da4f6e93dedcd90342c9cd1d0eab080ed

Merge pull request #1596 from fernandospr/patch-1

Update blog-articles.md | 2019-10-04 16:35:24 | e65236dae7c5827b7c9f64c19c8b1a16ea19e5a7

Merge pull request #1598 from PaulWoitaschek/patch-1

Fixed the german string placeholder for sharing the heap dump | 2019-10-03 16:16:23 | 029f28eefd7aa966520ac3649fd2688732c02867

Fix crash when pressing home from root screen (#1578)

This bug only happens on older Android devices.

Fixes #1555 | 2019-09-11 01:51:06 | 274f58f96e8de7dcd3000c06ba3e2b50e427747d

Merge pull request #1559 from bric3/fix-primitive-array-dump-skip

Fixes the primitive array dump record skipping | 2019-09-09 22:16:57 | c0fd4d812cb8d6c5723231e501c121da2af86f06

Parsing and applying proguard mapping during heap analysis (#1542)

* Parsing and applying proguard mapping during heap analysis

* Parsing and applying proguard mapping during heap analysis

* Rebased onto master

* Post review changes and updated shark-cli to support mapping files

* Post review fixes

* Moving proguard mapping reader out of the analyzer and formatting fixes | 2019-08-30 16:54:20 | 66182a52069d9be59d0af6220aa9afd74218aa9b

fix images | 2019-08-27 20:02:50 | 8f5030e9faa8690217e1bd436274a3de5b9d3fb3

fix image links in docs | 2019-08-27 19:59:20 | edca56a947278508350bfa5dd33d3fa10699001f

Merge pull request #1549 from Armaxis/patch-1

Added section about using Detekt to Contributing | 2019-08-24 22:16:26 | c923d14909888860a99d5899af17f5b52c9b000f

Revert "Replaced accessor with a call to setter to fix the build issue"

This reverts commit 82db0398 | 2019-08-17 02:21:08 | c570cb9b0fd7bd7fcc88c4d3b529df8837e98fdc

Replaced accessor with a call to setter to fix the build issue | 2019-08-16 04:32:25 | 82db039843303044f91d36ba7c43595ab59bacd5

fix typo | 2019-08-02 15:31:17 | a2452f61e78e689efb59adaf71384d74447578b0

Add / fix android inspectors (#1491)

* Added MortarScope and ViewRootImpl inspectors
* Fixed the ContextWrapper inspector

Fixes #1490
Fixes #1389 | 2019-07-25 22:50:48 | 915f8359690a016a09e66608a041454b9c8c52cb

Documenting public APIs (#1476)

Also fixed naming and other things that weren't right.

Fixes #1474 | 2019-07-19 06:57:25 | 41c69a5d424b4236114c5ce1b077afdad38e57a5

Adding CLI for LeakCanary (#1456)

Example usage:
```
./gradlew leakcanary-cli:run --args='analyze-process com.example.leakcanary'

./gradlew leakcanary-cli:run --args='dump-process com.example.leakcanary'

./gradlew leakcanary-cli:run --args='analyze-file /path/to/heapdump.hprof'
```

Also fixed a bug in ShortestPathFinder which did not ignore null references in object arrays | 2019-07-11 19:11:30 | eded1c96e84f37393857ba4de2580aec784b2391

Behavior change & bugfixes for retained count notification (#1433)

* Bugfix: when tapping the "dump heap" notification, if the GC found no retained instance we didn't use a distinct notification id to communicate that, and then soon after we'd dismiss the notification that let's the user know there is no retained instances on tap.
* Bugfix: we weren't running the GC when checking for retained instances and the count was under the threshold
* Change: we now update the notification and keep it around for 30 seconds when the count goes to 0
* Change: the "no retained instance" notification that shows on tap is identical and also auto dismisses after 30 seconds.
* Change: we're checking for retained references (and running the GC) every 2 seconds instead of 5.

Fixes #1427 | 2019-07-03 20:55:47 | 968083a915343d881bd63e40587c070fde543732

Update how to fix a leak | 2019-06-25 05:46:56 | 177e7fd12933d99eca7a526851c53e598a03bf90

Text rendering tests (#1378)

* Added test coverage for text rendering
* Fixed bug: labels were not rendered on the last node (leaking instance)
* Matched exclusions are now rendered on their own line

Fixes #1375
Fixes #1350 | 2019-06-04 09:32:11 | 1926cb1db73f9583e11c557dbf2e5d46e3896a6e

Thread name based exclusions (#1353)

* Readded support for exclusions of local variable based on thread names
* Renamed ThreadExclusion to JavaLocalExclusion
* Fixed bug: KeyedWeakReference was not always ignored because its superclass is has a weakly reachable exclusion.
* Fixed bug: all root nodes had the same visit order as the first non root enqueued item, making it possible for a non root node to be dequeued before we're done with all roots.
* Redded gc root sorting
* Added tests to cover all uncovered bugs
* Added support for parsing StackFrameRecord

Fixes #1339 | 2019-05-20 13:17:18 | 6c2ee609efda323e88a4964d31fc5a5f0532f776

Reachability => LeakStatus (#1340)

* Combined leaking information from inspectors to solving conflicts while keeping all reasons
* Made reason from view leak inspector more obvious, and added label data about internals
* Moved reachability into LeakTraceElement
* Reachability renamed to LeakNodeStatus and leaking / not leaking
* ReachabilityInspector and Labeler are now functions with type aliases

Related to #1336: should fix the crash, though it's still unclear why AppCompatButton was a gc root there. | 2019-05-07 14:56:59 | 01210bbbfaecb3bcb6057c62b2195366d3bfa4f9

Revamp notifications (#1335)

* New notification that shows the count of retained instances. Tapping it triggers a heap dump. Fixes #1325
* Notifications are now split into two channels: default for results, and low for everything else.
* New config options: LeakCanary.config.dumpHeapWhenDebugging (default false) and LeakCanary.config.retainedVisibleThreshold (default 5)
* Replaced notification int constants and timestamps with resource ids.
* Don't show background notifications in instant apps (#1197) | 2019-05-05 16:38:26 | b14d9bc9c0a87119137bc0998bdec9314186dfcf

Highlighting new leaks (#1334)

New leaks are leaks that have a leak group that doesn't exist in any prior analysis.

* The notification now reports the count of leaks, with a split of new, known, and won't fix.
* The analysis success screen shows new leaks
* Moved description prefixes to be computed rather than inserted in the DB

Fixes #1328 | 2019-05-05 09:37:38 | f9a0518d4ddd69b782b6302caa3e3039787038e4

LeakSentry can be disabled (#1332)

LeakCanary has an enabled config option. Default is on in debug builds off in release builds.

Fixes #1327 | 2019-05-04 17:52:47 | f74f60901f34c751e8b8798d626678aa6233c893

Revert "fix trailing spaces per checkstyle"

This reverts commit ff17f879ec92ec326f8b1c6b7b8d77a5266d6622. | 2019-05-04 08:04:21 | 03136ca7dc1680299d710f79ca885412a1564144

Add test coverage for heap analysis (#1329)

* Fixed bug when reachability inspectors conflicts (reachable should win and erase unreachable)
* Added back support for leaking instances being empty objects, strings, primitive arrays or any object that we otherwise don't follow to find shortest paths. | 2019-05-04 07:51:02 | 59558e655d537c7654c411eebfd840773a8b77c9

Introducing exclusion priority (#1317)

* Add segmented FIFO queue

Unified several queues into one segmented FIFO queue. This will enable us to add several levels of priority.

* Introducing exclusion priority

* "excludedLeak" is now known as "won't fix leak", which matches its reality better. It's a leak that is known and real yet we're not fixing.
* Exclusion.alwaysExclude is replaced with Exclusion.status, with 3 possible values: NEVER_REACHABLE, WONT_FIX_LEAK, WEAKLY_REACHABLE.
* The shortest path finder will now follow weak references after all other paths have been exhausted.
* Removed class exclusion, was confusing, replaced with less lazy approach of listing fields to exclude
* VIEWLOCATIONHOLDER_ROOT should not have been always excluded, fixed.

Fixes #1173 ... well kinda. Instead of "non leaking retained instances", LeakCanary will report weakly reachable traces. Not sure if that'll help but it's a foundation we can build on. | 2019-04-30 17:44:15 | b0eedc553995e354e2382b3378bf0348801cd3c5

AllFieldsLabeler & cleanups (#1316)

* Add new optional labeler that prints all fields (useful for debugging)
* Move deprecated AnalysisResult to perflib
* Made DefaultAnalysisResultListener an object | 2019-04-30 07:08:29 | b9ee5356db265412db39c4c341880f305fbf2c76

fix format | 2019-04-22 06:25:09 | 4a2b158913e5a9eb0d5c6fdfbf949a80fc1b2c6b

Rename default to perflib and experimental to default (#1282)

* Remove experimental from module names

* Remove experimental prefix, add perflib prefix:

* update docs | 2019-04-19 06:01:39 | 425a9f24deb72691b02cdc85f80d177c05afebc5

fix list | 2019-04-18 21:55:43 | 8e3f9d26e8d3555bf934b99ac062aabc3aba528f

fix broken master | 2019-04-10 15:00:30 | f067ae53e050c5f52f47237440a6ac7eee3ca94c

fix broken build due to typo | 2019-04-10 05:44:19 | 7d4ddb4ffe3c9b0f30a84848675452dded0d4115

Leaking information aligned below simple class name. (#1258)

Also fixed issue where extraString + exclusionString were showing after the squiggly line.

Before: 
``` 
┬
├─ java.lang.Thread
│                 Leaking: NO (it's a GC root)
│                 ↓ thread Thread.<Java Local>
│                                ~~~~~~~~~~~~~ (named 'Thread-4')
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                 Leaking: UNKNOWN
│                 ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                     ~~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) 
```
After: 
``` 
┬
├─ java.lang.Thread
│            Leaking: NO (it's a GC root)
│            ↓ thread Thread.<Java Local> (named 'Thread-4')
│                            ~~~~~~~~~~~~
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                         Leaking: UNKNOWN
│                         ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                              ~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) ``` | 2019-04-05 20:11:47 | a938855585c7cf2522ffbd143d4bb66a234eea66

Add share to Stack Overflow button when viewing a leak (#1252)

* Add share to Stack Overflow button when viewing a leak

* Add question tag, lengthen toast and fix build failure. | 2019-04-04 20:49:50 | 8724d2aaffc07904517a3b823867802ca43233ae

Check if serviceInfo.processName is null. When LeakCanary runs on a seperate process and that process for some reason does not have a assigned processName, then we will crash on a NullPointerException. Also a debug log explaining this. (#1225) | 2019-04-01 19:20:40 | 3efc43608ed71dc20b0ad1e0e80e33d15249666f

fix master broken | 2019-04-01 19:07:27 | fe42130029174681a708b7d8622412efbaf81e73

fix trailing spaces per checkstyle | 2019-03-29 22:34:58 | ff17f879ec92ec326f8b1c6b7b8d77a5266d6622

Fix GC Root bugs that missed leaks (#1168)

In Perflib, Snapshot.getGcRoots() only returns the GC roots from the first heap. Based on empirical evidence, it seems like Android has 4 heaps, and the GC Roots used to only be in the first heap, but more recent versions of Android have GC Roots in other heaps as well.

This means LeakCanary would sometimes show "No Leak Found" when there actually was a leak.

Fixes #1163 | 2019-01-10 23:32:27 | 64b6e5a41796ae1587c50c8cc860cea25f28f382

fix typo | 2018-10-17 00:43:01 | 044b1e4827bc71ec008dc3f7e43c78f58885f1e1

Fix LeakCanary toasting (#1116)

- Prior attempts to get it to work with the application context turned out to be buggy.
- This makes LeakCanary use whatever the current resumed activity is, if any.
- If there is no resumed activity, then the toast isn't displayed.

This supersedes #1080 | 2018-10-16 13:23:14 | 0e39e2eea79bc05bf7147a4074dd7163f7c401ff

fix the wrong word (#1111) | 2018-10-16 01:25:28 | 636b9b6c2b39c0c887c9ed78e904239db9bc131e

Merge pull request #1104 from IlyaGulya/bug/travis-ci-cache-fix

Fix travis caching and improve build time. | 2018-09-22 21:25:59 | 344728b906daf6d010f66bdf4ccc29ad8fedede5

Error prone 2.3.1 + suggested fix and specify version

See http://errorprone.info/bugpattern/StringSplitter | 2018-08-22 07:37:33 | a6b6960d73a1da9661f4e85254570bf5f867f954

Merge pull request #1089 from hzsweers/z/fixAnother

Quick followup to #1088 | 2018-08-22 03:15:15 | be973f5f5da6a3516aedab98e639690697617747

Merge pull request #1087 from Goddchen/patch-2

Updated german translation | 2018-08-20 13:52:47 | b43c279b3e1623c193e1dc81955527f70e93f822

Merge pull request #1063 from javmarina/patch-1

Fixed wrong versions in AndroidExcludedRefs | 2018-07-25 18:31:55 | 3b4ebe3e2571377f93e9a6976e021324502a0f78

Fixed wrong versions in AndroidExcludedRefs

Commit https://android.googlesource.com/platform/frameworks/base/+/27db46850b708070452c0ce49daf5f79503fbde6 introduced this issue. This commit was first included in Jelly Bean 4.3 (JELLY_BEAN_MR2), not Jelly Bean 4.1 (JELLY_BEAN)
Commit https://android.googlesource.com/platform/frameworks/base/+/5200e1cb07190a1f6874d72a4561064cad3ee3e0 fixes this issue and was first included in Oreo 8.0 (O). Nougat still has this memory leak. | 2018-07-24 18:24:59 | e4778b25f2c6e65ebc485d255e38586c7d45ec97

Merge pull request #1057 from square/py/ui_bug

Fix drawing of start line | 2018-07-20 22:21:19 | af96577a7d19e4df9f63d95fd9c3bfd2adcddb5d

Avoid Toast crashes

Showing a toast can crash on API 25 because the Window Manager can throw a BadTokenException when addView is called.

This change fixes it by configuring the toast manually and calling the window manager directly. This is based on https://github.com/pyricau/frenchtoast/blob/master/frenchtoast/src/main/java/frenchtoast/Mixture.java#L49 .

Fixes #844 | 2018-07-20 16:11:22 | c9ebc5cf5099c093bde5d3309b2692cb0e2016d8

Fixing setup bug | 2018-06-28 04:07:09 | 505933817cf6e2eb0dad4a78d4c7c35a072b9868

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

Fix crash when pressing home from root screen (#1578)

This bug only happens on older Android devices.

Fixes #1555 | 2019-09-11 01:51:06 | 274f58f96e8de7dcd3000c06ba3e2b50e427747d

Merge pull request #1559 from bric3/fix-primitive-array-dump-skip

Fixes the primitive array dump record skipping | 2019-09-09 22:16:57 | c0fd4d812cb8d6c5723231e501c121da2af86f06

Parsing and applying proguard mapping during heap analysis (#1542)

* Parsing and applying proguard mapping during heap analysis

* Parsing and applying proguard mapping during heap analysis

* Rebased onto master

* Post review changes and updated shark-cli to support mapping files

* Post review fixes

* Moving proguard mapping reader out of the analyzer and formatting fixes | 2019-08-30 16:54:20 | 66182a52069d9be59d0af6220aa9afd74218aa9b

fix images | 2019-08-27 20:02:50 | 8f5030e9faa8690217e1bd436274a3de5b9d3fb3

fix image links in docs | 2019-08-27 19:59:20 | edca56a947278508350bfa5dd33d3fa10699001f

Merge pull request #1549 from Armaxis/patch-1

Added section about using Detekt to Contributing | 2019-08-24 22:16:26 | c923d14909888860a99d5899af17f5b52c9b000f

Revert "Replaced accessor with a call to setter to fix the build issue"

This reverts commit 82db0398 | 2019-08-17 02:21:08 | c570cb9b0fd7bd7fcc88c4d3b529df8837e98fdc

Replaced accessor with a call to setter to fix the build issue | 2019-08-16 04:32:25 | 82db039843303044f91d36ba7c43595ab59bacd5

fix typo | 2019-08-02 15:31:17 | a2452f61e78e689efb59adaf71384d74447578b0

Add / fix android inspectors (#1491)

* Added MortarScope and ViewRootImpl inspectors
* Fixed the ContextWrapper inspector

Fixes #1490
Fixes #1389 | 2019-07-25 22:50:48 | 915f8359690a016a09e66608a041454b9c8c52cb

Documenting public APIs (#1476)

Also fixed naming and other things that weren't right.

Fixes #1474 | 2019-07-19 06:57:25 | 41c69a5d424b4236114c5ce1b077afdad38e57a5

Adding CLI for LeakCanary (#1456)

Example usage:
```
./gradlew leakcanary-cli:run --args='analyze-process com.example.leakcanary'

./gradlew leakcanary-cli:run --args='dump-process com.example.leakcanary'

./gradlew leakcanary-cli:run --args='analyze-file /path/to/heapdump.hprof'
```

Also fixed a bug in ShortestPathFinder which did not ignore null references in object arrays | 2019-07-11 19:11:30 | eded1c96e84f37393857ba4de2580aec784b2391

Behavior change & bugfixes for retained count notification (#1433)

* Bugfix: when tapping the "dump heap" notification, if the GC found no retained instance we didn't use a distinct notification id to communicate that, and then soon after we'd dismiss the notification that let's the user know there is no retained instances on tap.
* Bugfix: we weren't running the GC when checking for retained instances and the count was under the threshold
* Change: we now update the notification and keep it around for 30 seconds when the count goes to 0
* Change: the "no retained instance" notification that shows on tap is identical and also auto dismisses after 30 seconds.
* Change: we're checking for retained references (and running the GC) every 2 seconds instead of 5.

Fixes #1427 | 2019-07-03 20:55:47 | 968083a915343d881bd63e40587c070fde543732

Update how to fix a leak | 2019-06-25 05:46:56 | 177e7fd12933d99eca7a526851c53e598a03bf90

Text rendering tests (#1378)

* Added test coverage for text rendering
* Fixed bug: labels were not rendered on the last node (leaking instance)
* Matched exclusions are now rendered on their own line

Fixes #1375
Fixes #1350 | 2019-06-04 09:32:11 | 1926cb1db73f9583e11c557dbf2e5d46e3896a6e

Thread name based exclusions (#1353)

* Readded support for exclusions of local variable based on thread names
* Renamed ThreadExclusion to JavaLocalExclusion
* Fixed bug: KeyedWeakReference was not always ignored because its superclass is has a weakly reachable exclusion.
* Fixed bug: all root nodes had the same visit order as the first non root enqueued item, making it possible for a non root node to be dequeued before we're done with all roots.
* Redded gc root sorting
* Added tests to cover all uncovered bugs
* Added support for parsing StackFrameRecord

Fixes #1339 | 2019-05-20 13:17:18 | 6c2ee609efda323e88a4964d31fc5a5f0532f776

Reachability => LeakStatus (#1340)

* Combined leaking information from inspectors to solving conflicts while keeping all reasons
* Made reason from view leak inspector more obvious, and added label data about internals
* Moved reachability into LeakTraceElement
* Reachability renamed to LeakNodeStatus and leaking / not leaking
* ReachabilityInspector and Labeler are now functions with type aliases

Related to #1336: should fix the crash, though it's still unclear why AppCompatButton was a gc root there. | 2019-05-07 14:56:59 | 01210bbbfaecb3bcb6057c62b2195366d3bfa4f9

Revamp notifications (#1335)

* New notification that shows the count of retained instances. Tapping it triggers a heap dump. Fixes #1325
* Notifications are now split into two channels: default for results, and low for everything else.
* New config options: LeakCanary.config.dumpHeapWhenDebugging (default false) and LeakCanary.config.retainedVisibleThreshold (default 5)
* Replaced notification int constants and timestamps with resource ids.
* Don't show background notifications in instant apps (#1197) | 2019-05-05 16:38:26 | b14d9bc9c0a87119137bc0998bdec9314186dfcf

Highlighting new leaks (#1334)

New leaks are leaks that have a leak group that doesn't exist in any prior analysis.

* The notification now reports the count of leaks, with a split of new, known, and won't fix.
* The analysis success screen shows new leaks
* Moved description prefixes to be computed rather than inserted in the DB

Fixes #1328 | 2019-05-05 09:37:38 | f9a0518d4ddd69b782b6302caa3e3039787038e4

LeakSentry can be disabled (#1332)

LeakCanary has an enabled config option. Default is on in debug builds off in release builds.

Fixes #1327 | 2019-05-04 17:52:47 | f74f60901f34c751e8b8798d626678aa6233c893

Revert "fix trailing spaces per checkstyle"

This reverts commit ff17f879ec92ec326f8b1c6b7b8d77a5266d6622. | 2019-05-04 08:04:21 | 03136ca7dc1680299d710f79ca885412a1564144

Add test coverage for heap analysis (#1329)

* Fixed bug when reachability inspectors conflicts (reachable should win and erase unreachable)
* Added back support for leaking instances being empty objects, strings, primitive arrays or any object that we otherwise don't follow to find shortest paths. | 2019-05-04 07:51:02 | 59558e655d537c7654c411eebfd840773a8b77c9

Introducing exclusion priority (#1317)

* Add segmented FIFO queue

Unified several queues into one segmented FIFO queue. This will enable us to add several levels of priority.

* Introducing exclusion priority

* "excludedLeak" is now known as "won't fix leak", which matches its reality better. It's a leak that is known and real yet we're not fixing.
* Exclusion.alwaysExclude is replaced with Exclusion.status, with 3 possible values: NEVER_REACHABLE, WONT_FIX_LEAK, WEAKLY_REACHABLE.
* The shortest path finder will now follow weak references after all other paths have been exhausted.
* Removed class exclusion, was confusing, replaced with less lazy approach of listing fields to exclude
* VIEWLOCATIONHOLDER_ROOT should not have been always excluded, fixed.

Fixes #1173 ... well kinda. Instead of "non leaking retained instances", LeakCanary will report weakly reachable traces. Not sure if that'll help but it's a foundation we can build on. | 2019-04-30 17:44:15 | b0eedc553995e354e2382b3378bf0348801cd3c5

AllFieldsLabeler & cleanups (#1316)

* Add new optional labeler that prints all fields (useful for debugging)
* Move deprecated AnalysisResult to perflib
* Made DefaultAnalysisResultListener an object | 2019-04-30 07:08:29 | b9ee5356db265412db39c4c341880f305fbf2c76

fix format | 2019-04-22 06:25:09 | 4a2b158913e5a9eb0d5c6fdfbf949a80fc1b2c6b

Rename default to perflib and experimental to default (#1282)

* Remove experimental from module names

* Remove experimental prefix, add perflib prefix:

* update docs | 2019-04-19 06:01:39 | 425a9f24deb72691b02cdc85f80d177c05afebc5

fix list | 2019-04-18 21:55:43 | 8e3f9d26e8d3555bf934b99ac062aabc3aba528f

fix broken master | 2019-04-10 15:00:30 | f067ae53e050c5f52f47237440a6ac7eee3ca94c

fix broken build due to typo | 2019-04-10 05:44:19 | 7d4ddb4ffe3c9b0f30a84848675452dded0d4115

Leaking information aligned below simple class name. (#1258)

Also fixed issue where extraString + exclusionString were showing after the squiggly line.

Before: 
``` 
┬
├─ java.lang.Thread
│                 Leaking: NO (it's a GC root)
│                 ↓ thread Thread.<Java Local>
│                                ~~~~~~~~~~~~~ (named 'Thread-4')
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                 Leaking: UNKNOWN
│                 ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                     ~~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) 
```
After: 
``` 
┬
├─ java.lang.Thread
│            Leaking: NO (it's a GC root)
│            ↓ thread Thread.<Java Local> (named 'Thread-4')
│                            ~~~~~~~~~~~~
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                         Leaking: UNKNOWN
│                         ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                              ~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) ``` | 2019-04-05 20:11:47 | a938855585c7cf2522ffbd143d4bb66a234eea66

Add share to Stack Overflow button when viewing a leak (#1252)

* Add share to Stack Overflow button when viewing a leak

* Add question tag, lengthen toast and fix build failure. | 2019-04-04 20:49:50 | 8724d2aaffc07904517a3b823867802ca43233ae

Check if serviceInfo.processName is null. When LeakCanary runs on a seperate process and that process for some reason does not have a assigned processName, then we will crash on a NullPointerException. Also a debug log explaining this. (#1225) | 2019-04-01 19:20:40 | 3efc43608ed71dc20b0ad1e0e80e33d15249666f

fix master broken | 2019-04-01 19:07:27 | fe42130029174681a708b7d8622412efbaf81e73

fix trailing spaces per checkstyle | 2019-03-29 22:34:58 | ff17f879ec92ec326f8b1c6b7b8d77a5266d6622

Fix GC Root bugs that missed leaks (#1168)

In Perflib, Snapshot.getGcRoots() only returns the GC roots from the first heap. Based on empirical evidence, it seems like Android has 4 heaps, and the GC Roots used to only be in the first heap, but more recent versions of Android have GC Roots in other heaps as well.

This means LeakCanary would sometimes show "No Leak Found" when there actually was a leak.

Fixes #1163 | 2019-01-10 23:32:27 | 64b6e5a41796ae1587c50c8cc860cea25f28f382

fix typo | 2018-10-17 00:43:01 | 044b1e4827bc71ec008dc3f7e43c78f58885f1e1

Fix LeakCanary toasting (#1116)

- Prior attempts to get it to work with the application context turned out to be buggy.
- This makes LeakCanary use whatever the current resumed activity is, if any.
- If there is no resumed activity, then the toast isn't displayed.

This supersedes #1080 | 2018-10-16 13:23:14 | 0e39e2eea79bc05bf7147a4074dd7163f7c401ff

fix the wrong word (#1111) | 2018-10-16 01:25:28 | 636b9b6c2b39c0c887c9ed78e904239db9bc131e

Merge pull request #1104 from IlyaGulya/bug/travis-ci-cache-fix

Fix travis caching and improve build time. | 2018-09-22 21:25:59 | 344728b906daf6d010f66bdf4ccc29ad8fedede5

Error prone 2.3.1 + suggested fix and specify version

See http://errorprone.info/bugpattern/StringSplitter | 2018-08-22 07:37:33 | a6b6960d73a1da9661f4e85254570bf5f867f954

Merge pull request #1089 from hzsweers/z/fixAnother

Quick followup to #1088 | 2018-08-22 03:15:15 | be973f5f5da6a3516aedab98e639690697617747

Merge pull request #1087 from Goddchen/patch-2

Updated german translation | 2018-08-20 13:52:47 | b43c279b3e1623c193e1dc81955527f70e93f822

Merge pull request #1063 from javmarina/patch-1

Fixed wrong versions in AndroidExcludedRefs | 2018-07-25 18:31:55 | 3b4ebe3e2571377f93e9a6976e021324502a0f78

Fixed wrong versions in AndroidExcludedRefs

Commit https://android.googlesource.com/platform/frameworks/base/+/27db46850b708070452c0ce49daf5f79503fbde6 introduced this issue. This commit was first included in Jelly Bean 4.3 (JELLY_BEAN_MR2), not Jelly Bean 4.1 (JELLY_BEAN)
Commit https://android.googlesource.com/platform/frameworks/base/+/5200e1cb07190a1f6874d72a4561064cad3ee3e0 fixes this issue and was first included in Oreo 8.0 (O). Nougat still has this memory leak. | 2018-07-24 18:24:59 | e4778b25f2c6e65ebc485d255e38586c7d45ec97

Merge pull request #1057 from square/py/ui_bug

Fix drawing of start line | 2018-07-20 22:21:19 | af96577a7d19e4df9f63d95fd9c3bfd2adcddb5d

Avoid Toast crashes

Showing a toast can crash on API 25 because the Window Manager can throw a BadTokenException when addView is called.

This change fixes it by configuring the toast manually and calling the window manager directly. This is based on https://github.com/pyricau/frenchtoast/blob/master/frenchtoast/src/main/java/frenchtoast/Mixture.java#L49 .

Fixes #844 | 2018-07-20 16:11:22 | c9ebc5cf5099c093bde5d3309b2692cb0e2016d8

Fixing setup bug | 2018-06-28 04:07:09 | 505933817cf6e2eb0dad4a78d4c7c35a072b9868

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

Add / fix android inspectors (#1491)

* Added MortarScope and ViewRootImpl inspectors
* Fixed the ContextWrapper inspector

Fixes #1490
Fixes #1389 | 2019-07-25 22:50:48 | 915f8359690a016a09e66608a041454b9c8c52cb

Documenting public APIs (#1476)

Also fixed naming and other things that weren't right.

Fixes #1474 | 2019-07-19 06:57:25 | 41c69a5d424b4236114c5ce1b077afdad38e57a5

Adding CLI for LeakCanary (#1456)

Example usage:
```
./gradlew leakcanary-cli:run --args='analyze-process com.example.leakcanary'

./gradlew leakcanary-cli:run --args='dump-process com.example.leakcanary'

./gradlew leakcanary-cli:run --args='analyze-file /path/to/heapdump.hprof'
```

Also fixed a bug in ShortestPathFinder which did not ignore null references in object arrays | 2019-07-11 19:11:30 | eded1c96e84f37393857ba4de2580aec784b2391

Behavior change & bugfixes for retained count notification (#1433)

* Bugfix: when tapping the "dump heap" notification, if the GC found no retained instance we didn't use a distinct notification id to communicate that, and then soon after we'd dismiss the notification that let's the user know there is no retained instances on tap.
* Bugfix: we weren't running the GC when checking for retained instances and the count was under the threshold
* Change: we now update the notification and keep it around for 30 seconds when the count goes to 0
* Change: the "no retained instance" notification that shows on tap is identical and also auto dismisses after 30 seconds.
* Change: we're checking for retained references (and running the GC) every 2 seconds instead of 5.

Fixes #1427 | 2019-07-03 20:55:47 | 968083a915343d881bd63e40587c070fde543732

Update how to fix a leak | 2019-06-25 05:46:56 | 177e7fd12933d99eca7a526851c53e598a03bf90

Text rendering tests (#1378)

* Added test coverage for text rendering
* Fixed bug: labels were not rendered on the last node (leaking instance)
* Matched exclusions are now rendered on their own line

Fixes #1375
Fixes #1350 | 2019-06-04 09:32:11 | 1926cb1db73f9583e11c557dbf2e5d46e3896a6e

Thread name based exclusions (#1353)

* Readded support for exclusions of local variable based on thread names
* Renamed ThreadExclusion to JavaLocalExclusion
* Fixed bug: KeyedWeakReference was not always ignored because its superclass is has a weakly reachable exclusion.
* Fixed bug: all root nodes had the same visit order as the first non root enqueued item, making it possible for a non root node to be dequeued before we're done with all roots.
* Redded gc root sorting
* Added tests to cover all uncovered bugs
* Added support for parsing StackFrameRecord

Fixes #1339 | 2019-05-20 13:17:18 | 6c2ee609efda323e88a4964d31fc5a5f0532f776

Reachability => LeakStatus (#1340)

* Combined leaking information from inspectors to solving conflicts while keeping all reasons
* Made reason from view leak inspector more obvious, and added label data about internals
* Moved reachability into LeakTraceElement
* Reachability renamed to LeakNodeStatus and leaking / not leaking
* ReachabilityInspector and Labeler are now functions with type aliases

Related to #1336: should fix the crash, though it's still unclear why AppCompatButton was a gc root there. | 2019-05-07 14:56:59 | 01210bbbfaecb3bcb6057c62b2195366d3bfa4f9

Revamp notifications (#1335)

* New notification that shows the count of retained instances. Tapping it triggers a heap dump. Fixes #1325
* Notifications are now split into two channels: default for results, and low for everything else.
* New config options: LeakCanary.config.dumpHeapWhenDebugging (default false) and LeakCanary.config.retainedVisibleThreshold (default 5)
* Replaced notification int constants and timestamps with resource ids.
* Don't show background notifications in instant apps (#1197) | 2019-05-05 16:38:26 | b14d9bc9c0a87119137bc0998bdec9314186dfcf

Highlighting new leaks (#1334)

New leaks are leaks that have a leak group that doesn't exist in any prior analysis.

* The notification now reports the count of leaks, with a split of new, known, and won't fix.
* The analysis success screen shows new leaks
* Moved description prefixes to be computed rather than inserted in the DB

Fixes #1328 | 2019-05-05 09:37:38 | f9a0518d4ddd69b782b6302caa3e3039787038e4

LeakSentry can be disabled (#1332)

LeakCanary has an enabled config option. Default is on in debug builds off in release builds.

Fixes #1327 | 2019-05-04 17:52:47 | f74f60901f34c751e8b8798d626678aa6233c893

Revert "fix trailing spaces per checkstyle"

This reverts commit ff17f879ec92ec326f8b1c6b7b8d77a5266d6622. | 2019-05-04 08:04:21 | 03136ca7dc1680299d710f79ca885412a1564144

Add test coverage for heap analysis (#1329)

* Fixed bug when reachability inspectors conflicts (reachable should win and erase unreachable)
* Added back support for leaking instances being empty objects, strings, primitive arrays or any object that we otherwise don't follow to find shortest paths. | 2019-05-04 07:51:02 | 59558e655d537c7654c411eebfd840773a8b77c9

Introducing exclusion priority (#1317)

* Add segmented FIFO queue

Unified several queues into one segmented FIFO queue. This will enable us to add several levels of priority.

* Introducing exclusion priority

* "excludedLeak" is now known as "won't fix leak", which matches its reality better. It's a leak that is known and real yet we're not fixing.
* Exclusion.alwaysExclude is replaced with Exclusion.status, with 3 possible values: NEVER_REACHABLE, WONT_FIX_LEAK, WEAKLY_REACHABLE.
* The shortest path finder will now follow weak references after all other paths have been exhausted.
* Removed class exclusion, was confusing, replaced with less lazy approach of listing fields to exclude
* VIEWLOCATIONHOLDER_ROOT should not have been always excluded, fixed.

Fixes #1173 ... well kinda. Instead of "non leaking retained instances", LeakCanary will report weakly reachable traces. Not sure if that'll help but it's a foundation we can build on. | 2019-04-30 17:44:15 | b0eedc553995e354e2382b3378bf0348801cd3c5

AllFieldsLabeler & cleanups (#1316)

* Add new optional labeler that prints all fields (useful for debugging)
* Move deprecated AnalysisResult to perflib
* Made DefaultAnalysisResultListener an object | 2019-04-30 07:08:29 | b9ee5356db265412db39c4c341880f305fbf2c76

fix format | 2019-04-22 06:25:09 | 4a2b158913e5a9eb0d5c6fdfbf949a80fc1b2c6b

Rename default to perflib and experimental to default (#1282)

* Remove experimental from module names

* Remove experimental prefix, add perflib prefix:

* update docs | 2019-04-19 06:01:39 | 425a9f24deb72691b02cdc85f80d177c05afebc5

fix list | 2019-04-18 21:55:43 | 8e3f9d26e8d3555bf934b99ac062aabc3aba528f

fix broken master | 2019-04-10 15:00:30 | f067ae53e050c5f52f47237440a6ac7eee3ca94c

fix broken build due to typo | 2019-04-10 05:44:19 | 7d4ddb4ffe3c9b0f30a84848675452dded0d4115

Leaking information aligned below simple class name. (#1258)

Also fixed issue where extraString + exclusionString were showing after the squiggly line.

Before: 
``` 
┬
├─ java.lang.Thread
│                 Leaking: NO (it's a GC root)
│                 ↓ thread Thread.<Java Local>
│                                ~~~~~~~~~~~~~ (named 'Thread-4')
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                 Leaking: UNKNOWN
│                 ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                     ~~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) 
```
After: 
``` 
┬
├─ java.lang.Thread
│            Leaking: NO (it's a GC root)
│            ↓ thread Thread.<Java Local> (named 'Thread-4')
│                            ~~~~~~~~~~~~
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                         Leaking: UNKNOWN
│                         ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                              ~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) ``` | 2019-04-05 20:11:47 | a938855585c7cf2522ffbd143d4bb66a234eea66

Add share to Stack Overflow button when viewing a leak (#1252)

* Add share to Stack Overflow button when viewing a leak

* Add question tag, lengthen toast and fix build failure. | 2019-04-04 20:49:50 | 8724d2aaffc07904517a3b823867802ca43233ae

Check if serviceInfo.processName is null. When LeakCanary runs on a seperate process and that process for some reason does not have a assigned processName, then we will crash on a NullPointerException. Also a debug log explaining this. (#1225) | 2019-04-01 19:20:40 | 3efc43608ed71dc20b0ad1e0e80e33d15249666f

fix master broken | 2019-04-01 19:07:27 | fe42130029174681a708b7d8622412efbaf81e73

fix trailing spaces per checkstyle | 2019-03-29 22:34:58 | ff17f879ec92ec326f8b1c6b7b8d77a5266d6622

Fix GC Root bugs that missed leaks (#1168)

In Perflib, Snapshot.getGcRoots() only returns the GC roots from the first heap. Based on empirical evidence, it seems like Android has 4 heaps, and the GC Roots used to only be in the first heap, but more recent versions of Android have GC Roots in other heaps as well.

This means LeakCanary would sometimes show "No Leak Found" when there actually was a leak.

Fixes #1163 | 2019-01-10 23:32:27 | 64b6e5a41796ae1587c50c8cc860cea25f28f382

fix typo | 2018-10-17 00:43:01 | 044b1e4827bc71ec008dc3f7e43c78f58885f1e1

Fix LeakCanary toasting (#1116)

- Prior attempts to get it to work with the application context turned out to be buggy.
- This makes LeakCanary use whatever the current resumed activity is, if any.
- If there is no resumed activity, then the toast isn't displayed.

This supersedes #1080 | 2018-10-16 13:23:14 | 0e39e2eea79bc05bf7147a4074dd7163f7c401ff

fix the wrong word (#1111) | 2018-10-16 01:25:28 | 636b9b6c2b39c0c887c9ed78e904239db9bc131e

Merge pull request #1104 from IlyaGulya/bug/travis-ci-cache-fix

Fix travis caching and improve build time. | 2018-09-22 21:25:59 | 344728b906daf6d010f66bdf4ccc29ad8fedede5

Error prone 2.3.1 + suggested fix and specify version

See http://errorprone.info/bugpattern/StringSplitter | 2018-08-22 07:37:33 | a6b6960d73a1da9661f4e85254570bf5f867f954

Merge pull request #1089 from hzsweers/z/fixAnother

Quick followup to #1088 | 2018-08-22 03:15:15 | be973f5f5da6a3516aedab98e639690697617747

Merge pull request #1087 from Goddchen/patch-2

Updated german translation | 2018-08-20 13:52:47 | b43c279b3e1623c193e1dc81955527f70e93f822

Merge pull request #1063 from javmarina/patch-1

Fixed wrong versions in AndroidExcludedRefs | 2018-07-25 18:31:55 | 3b4ebe3e2571377f93e9a6976e021324502a0f78

Fixed wrong versions in AndroidExcludedRefs

Commit https://android.googlesource.com/platform/frameworks/base/+/27db46850b708070452c0ce49daf5f79503fbde6 introduced this issue. This commit was first included in Jelly Bean 4.3 (JELLY_BEAN_MR2), not Jelly Bean 4.1 (JELLY_BEAN)
Commit https://android.googlesource.com/platform/frameworks/base/+/5200e1cb07190a1f6874d72a4561064cad3ee3e0 fixes this issue and was first included in Oreo 8.0 (O). Nougat still has this memory leak. | 2018-07-24 18:24:59 | e4778b25f2c6e65ebc485d255e38586c7d45ec97

Merge pull request #1057 from square/py/ui_bug

Fix drawing of start line | 2018-07-20 22:21:19 | af96577a7d19e4df9f63d95fd9c3bfd2adcddb5d

Avoid Toast crashes

Showing a toast can crash on API 25 because the Window Manager can throw a BadTokenException when addView is called.

This change fixes it by configuring the toast manually and calling the window manager directly. This is based on https://github.com/pyricau/frenchtoast/blob/master/frenchtoast/src/main/java/frenchtoast/Mixture.java#L49 .

Fixes #844 | 2018-07-20 16:11:22 | c9ebc5cf5099c093bde5d3309b2692cb0e2016d8

Fixing setup bug | 2018-06-28 04:07:09 | 505933817cf6e2eb0dad4a78d4c7c35a072b9868

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

Fix GC Root bugs that missed leaks (#1168)

In Perflib, Snapshot.getGcRoots() only returns the GC roots from the first heap. Based on empirical evidence, it seems like Android has 4 heaps, and the GC Roots used to only be in the first heap, but more recent versions of Android have GC Roots in other heaps as well.

This means LeakCanary would sometimes show "No Leak Found" when there actually was a leak.

Fixes #1163 | 2019-01-10 23:32:27 | 64b6e5a41796ae1587c50c8cc860cea25f28f382

fix typo | 2018-10-17 00:43:01 | 044b1e4827bc71ec008dc3f7e43c78f58885f1e1

Fix LeakCanary toasting (#1116)

- Prior attempts to get it to work with the application context turned out to be buggy.
- This makes LeakCanary use whatever the current resumed activity is, if any.
- If there is no resumed activity, then the toast isn't displayed.

This supersedes #1080 | 2018-10-16 13:23:14 | 0e39e2eea79bc05bf7147a4074dd7163f7c401ff

fix the wrong word (#1111) | 2018-10-16 01:25:28 | 636b9b6c2b39c0c887c9ed78e904239db9bc131e

Merge pull request #1104 from IlyaGulya/bug/travis-ci-cache-fix

Fix travis caching and improve build time. | 2018-09-22 21:25:59 | 344728b906daf6d010f66bdf4ccc29ad8fedede5

Error prone 2.3.1 + suggested fix and specify version

See http://errorprone.info/bugpattern/StringSplitter | 2018-08-22 07:37:33 | a6b6960d73a1da9661f4e85254570bf5f867f954

Merge pull request #1089 from hzsweers/z/fixAnother

Quick followup to #1088 | 2018-08-22 03:15:15 | be973f5f5da6a3516aedab98e639690697617747

Merge pull request #1087 from Goddchen/patch-2

Updated german translation | 2018-08-20 13:52:47 | b43c279b3e1623c193e1dc81955527f70e93f822

Merge pull request #1063 from javmarina/patch-1

Fixed wrong versions in AndroidExcludedRefs | 2018-07-25 18:31:55 | 3b4ebe3e2571377f93e9a6976e021324502a0f78

Fixed wrong versions in AndroidExcludedRefs

Commit https://android.googlesource.com/platform/frameworks/base/+/27db46850b708070452c0ce49daf5f79503fbde6 introduced this issue. This commit was first included in Jelly Bean 4.3 (JELLY_BEAN_MR2), not Jelly Bean 4.1 (JELLY_BEAN)
Commit https://android.googlesource.com/platform/frameworks/base/+/5200e1cb07190a1f6874d72a4561064cad3ee3e0 fixes this issue and was first included in Oreo 8.0 (O). Nougat still has this memory leak. | 2018-07-24 18:24:59 | e4778b25f2c6e65ebc485d255e38586c7d45ec97

Merge pull request #1057 from square/py/ui_bug

Fix drawing of start line | 2018-07-20 22:21:19 | af96577a7d19e4df9f63d95fd9c3bfd2adcddb5d

Avoid Toast crashes

Showing a toast can crash on API 25 because the Window Manager can throw a BadTokenException when addView is called.

This change fixes it by configuring the toast manually and calling the window manager directly. This is based on https://github.com/pyricau/frenchtoast/blob/master/frenchtoast/src/main/java/frenchtoast/Mixture.java#L49 .

Fixes #844 | 2018-07-20 16:11:22 | c9ebc5cf5099c093bde5d3309b2692cb0e2016d8

Fixing setup bug | 2018-06-28 04:07:09 | 505933817cf6e2eb0dad4a78d4c7c35a072b9868

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

Rename default to perflib and experimental to default (#1282)

* Remove experimental from module names

* Remove experimental prefix, add perflib prefix:

* update docs | 2019-04-19 06:01:39 | 425a9f24deb72691b02cdc85f80d177c05afebc5

fix list | 2019-04-18 21:55:43 | 8e3f9d26e8d3555bf934b99ac062aabc3aba528f

fix broken master | 2019-04-10 15:00:30 | f067ae53e050c5f52f47237440a6ac7eee3ca94c

fix broken build due to typo | 2019-04-10 05:44:19 | 7d4ddb4ffe3c9b0f30a84848675452dded0d4115

Leaking information aligned below simple class name. (#1258)

Also fixed issue where extraString + exclusionString were showing after the squiggly line.

Before: 
``` 
┬
├─ java.lang.Thread
│                 Leaking: NO (it's a GC root)
│                 ↓ thread Thread.<Java Local>
│                                ~~~~~~~~~~~~~ (named 'Thread-4')
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                 Leaking: UNKNOWN
│                 ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                     ~~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) 
```
After: 
``` 
┬
├─ java.lang.Thread
│            Leaking: NO (it's a GC root)
│            ↓ thread Thread.<Java Local> (named 'Thread-4')
│                            ~~~~~~~~~~~~
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                         Leaking: UNKNOWN
│                         ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                              ~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) ``` | 2019-04-05 20:11:47 | a938855585c7cf2522ffbd143d4bb66a234eea66

Add share to Stack Overflow button when viewing a leak (#1252)

* Add share to Stack Overflow button when viewing a leak

* Add question tag, lengthen toast and fix build failure. | 2019-04-04 20:49:50 | 8724d2aaffc07904517a3b823867802ca43233ae

Check if serviceInfo.processName is null. When LeakCanary runs on a seperate process and that process for some reason does not have a assigned processName, then we will crash on a NullPointerException. Also a debug log explaining this. (#1225) | 2019-04-01 19:20:40 | 3efc43608ed71dc20b0ad1e0e80e33d15249666f

fix master broken | 2019-04-01 19:07:27 | fe42130029174681a708b7d8622412efbaf81e73

Fix GC Root bugs that missed leaks (#1168)

In Perflib, Snapshot.getGcRoots() only returns the GC roots from the first heap. Based on empirical evidence, it seems like Android has 4 heaps, and the GC Roots used to only be in the first heap, but more recent versions of Android have GC Roots in other heaps as well.

This means LeakCanary would sometimes show "No Leak Found" when there actually was a leak.

Fixes #1163 | 2019-01-10 23:32:27 | 64b6e5a41796ae1587c50c8cc860cea25f28f382

fix typo | 2018-10-17 00:43:01 | 044b1e4827bc71ec008dc3f7e43c78f58885f1e1

Fix LeakCanary toasting (#1116)

- Prior attempts to get it to work with the application context turned out to be buggy.
- This makes LeakCanary use whatever the current resumed activity is, if any.
- If there is no resumed activity, then the toast isn't displayed.

This supersedes #1080 | 2018-10-16 13:23:14 | 0e39e2eea79bc05bf7147a4074dd7163f7c401ff

fix the wrong word (#1111) | 2018-10-16 01:25:28 | 636b9b6c2b39c0c887c9ed78e904239db9bc131e

Merge pull request #1104 from IlyaGulya/bug/travis-ci-cache-fix

Fix travis caching and improve build time. | 2018-09-22 21:25:59 | 344728b906daf6d010f66bdf4ccc29ad8fedede5

Error prone 2.3.1 + suggested fix and specify version

See http://errorprone.info/bugpattern/StringSplitter | 2018-08-22 07:37:33 | a6b6960d73a1da9661f4e85254570bf5f867f954

Merge pull request #1089 from hzsweers/z/fixAnother

Quick followup to #1088 | 2018-08-22 03:15:15 | be973f5f5da6a3516aedab98e639690697617747

Merge pull request #1087 from Goddchen/patch-2

Updated german translation | 2018-08-20 13:52:47 | b43c279b3e1623c193e1dc81955527f70e93f822

Merge pull request #1063 from javmarina/patch-1

Fixed wrong versions in AndroidExcludedRefs | 2018-07-25 18:31:55 | 3b4ebe3e2571377f93e9a6976e021324502a0f78

Fixed wrong versions in AndroidExcludedRefs

Commit https://android.googlesource.com/platform/frameworks/base/+/27db46850b708070452c0ce49daf5f79503fbde6 introduced this issue. This commit was first included in Jelly Bean 4.3 (JELLY_BEAN_MR2), not Jelly Bean 4.1 (JELLY_BEAN)
Commit https://android.googlesource.com/platform/frameworks/base/+/5200e1cb07190a1f6874d72a4561064cad3ee3e0 fixes this issue and was first included in Oreo 8.0 (O). Nougat still has this memory leak. | 2018-07-24 18:24:59 | e4778b25f2c6e65ebc485d255e38586c7d45ec97

Merge pull request #1057 from square/py/ui_bug

Fix drawing of start line | 2018-07-20 22:21:19 | af96577a7d19e4df9f63d95fd9c3bfd2adcddb5d

Avoid Toast crashes

Showing a toast can crash on API 25 because the Window Manager can throw a BadTokenException when addView is called.

This change fixes it by configuring the toast manually and calling the window manager directly. This is based on https://github.com/pyricau/frenchtoast/blob/master/frenchtoast/src/main/java/frenchtoast/Mixture.java#L49 .

Fixes #844 | 2018-07-20 16:11:22 | c9ebc5cf5099c093bde5d3309b2692cb0e2016d8

Fixing setup bug | 2018-06-28 04:07:09 | 505933817cf6e2eb0dad4a78d4c7c35a072b9868

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

Merge pull request #1104 from IlyaGulya/bug/travis-ci-cache-fix

Fix travis caching and improve build time. | 2018-09-22 21:25:59 | 344728b906daf6d010f66bdf4ccc29ad8fedede5

Error prone 2.3.1 + suggested fix and specify version

See http://errorprone.info/bugpattern/StringSplitter | 2018-08-22 07:37:33 | a6b6960d73a1da9661f4e85254570bf5f867f954

Merge pull request #1089 from hzsweers/z/fixAnother

Quick followup to #1088 | 2018-08-22 03:15:15 | be973f5f5da6a3516aedab98e639690697617747

Merge pull request #1087 from Goddchen/patch-2

Updated german translation | 2018-08-20 13:52:47 | b43c279b3e1623c193e1dc81955527f70e93f822

Merge pull request #1063 from javmarina/patch-1

Fixed wrong versions in AndroidExcludedRefs | 2018-07-25 18:31:55 | 3b4ebe3e2571377f93e9a6976e021324502a0f78

Fixed wrong versions in AndroidExcludedRefs

Commit https://android.googlesource.com/platform/frameworks/base/+/27db46850b708070452c0ce49daf5f79503fbde6 introduced this issue. This commit was first included in Jelly Bean 4.3 (JELLY_BEAN_MR2), not Jelly Bean 4.1 (JELLY_BEAN)
Commit https://android.googlesource.com/platform/frameworks/base/+/5200e1cb07190a1f6874d72a4561064cad3ee3e0 fixes this issue and was first included in Oreo 8.0 (O). Nougat still has this memory leak. | 2018-07-24 18:24:59 | e4778b25f2c6e65ebc485d255e38586c7d45ec97

Merge pull request #1057 from square/py/ui_bug

Fix drawing of start line | 2018-07-20 22:21:19 | af96577a7d19e4df9f63d95fd9c3bfd2adcddb5d

Avoid Toast crashes

Showing a toast can crash on API 25 because the Window Manager can throw a BadTokenException when addView is called.

This change fixes it by configuring the toast manually and calling the window manager directly. This is based on https://github.com/pyricau/frenchtoast/blob/master/frenchtoast/src/main/java/frenchtoast/Mixture.java#L49 .

Fixes #844 | 2018-07-20 16:11:22 | c9ebc5cf5099c093bde5d3309b2692cb0e2016d8

Fixing setup bug | 2018-06-28 04:07:09 | 505933817cf6e2eb0dad4a78d4c7c35a072b9868

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

Use "x minutes ago" format for dates (#1675)

Also fixed some of the ordering (leaks types by counts desc, leaks by date desc)

Fixes #1672 | 2019-12-16 23:56:38 | 9fae7ed497e1760abe74cf2c22535fbd51f16331

Gradle plugin that puts proguard mapping file in the apk as an asset (#1589)

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Add unit tests for copy obfuscation file task

* Add recipe describing how to use the plugin

* Add plugin usage instruction

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Rebased onto master

* Add missing test dependencies

* Use lambda function instead of a collection for plugin configuration

* Post code review fixups

* Rename according to code review suggestions

* Fix detekt warning

* Pass empty file if mapping doesn't exist

* Improved recipe

* Code review fixups

* Fix CopyObfuscationMappingFileTask tests

* Code review fixes

* Fix detekt issues

* Add plugin tests

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Rebased onto master

* Use lambda function instead of a collection for plugin configuration

* Post code review fixups

* Rename according to code review suggestions

* Fix detekt warning

* Pass empty file if mapping doesn't exist

* Improved recipe

* Code review fixups

* Fix CopyObfuscationMappingFileTask tests

* Code review fixes

* Fix detekt issues

* Add plugin tests

* Rebased onto master

* Add one more test for plugin

* Try fixing CI tests by reading $ANDROID_HOME value

* Try fixing CI tests by hardcoding android sdk path

* Debugging CI failing test

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Post review fixes

* Debugging failing test on CI

* Try fixing CI tests by hardcoding android sdk path

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debug failing test on CI

* Debug failing test on CI

* Debug failing test on CI

* Debug failing test on CI

* Debug failing test on CI

* Debug failing test on CI

* Use trusty dist in travis config

* Debug failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debug failing CI test

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Prevent GradleRunner from running builds in a separate process

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* sni: modernize travis script. Solve emulator issue.
The build now uses build tools 28 which requires little adjustments
from the original recipe. In the future we can just use the original recipe
Original recipe: https://docs.travis-ci.com/user/languages/android/ | 2019-12-10 06:48:02 | 25a10fcd9f405235de63bd791ea4ae4eb5453924

Fix emulators  (#1667)

* Revert "Fix travis (#1665)"

This reverts commit 00b9bd32d535022800153f34916d4c4667d2a5cd.

* Fix emulators

A recent emulator update breaks a few CI projects.  This PR applies
a fix suggested by Google.

https://issuetracker.google.com/issues/145622251#comment33 | 2019-12-10 05:43:06 | b678e1508e9ef3618ce2c44d44ff733f350d4185

Fix travis (#1665)

According to [this tweet](https://twitter.com/colinwhi/status/1204102384458194944) from @colinrtwhite, Travis is failing due to a bug in the most recent version of the emulator. Pinning the emulator to an older version works around it. This commit steals the fix from https://github.com/coil-kt/coil/pull/195 . | 2019-12-09 19:54:40 | 00b9bd32d535022800153f34916d4c4667d2a5cd

Add ability to customize class used to detect tests (#1654)

Developers should not ship JUnit in their app, even in debug. However, some debug libraries unfortunately ship with JUnit as a dependency (e.g. see https://github.com/square/okhttp/issues/4667).

Developers can change the default to target a different class (e.g assertj) to help LeakCanary detect unit tests, by overriding a public string:

```
  <string name="leak_canary_test_class_name">org.assertj.core.api.Assertions</string>
```

Fixes #1649 | 2019-12-03 02:35:07 | dbbb969d59b066c3f9197ebc3863cc4f54dae5d2

fix changelog | 2019-11-25 19:32:41 | 50ae3ba7558e5a3f83fc11b4d17a281f072ff078

Fix bug in handling JNI roots (#1636)

* When adding support for native reference leaks (879ab7c) there was a missing bracket in an if/else branch that led to all native gc roots being ignored.

Fixes #1634 | 2019-11-25 19:00:23 | aff338544b5eebbb0b3c792c628cca11fa888373

fix typos | 2019-11-19 03:58:07 | 25b0df0da4f6e93dedcd90342c9cd1d0eab080ed

Merge pull request #1596 from fernandospr/patch-1

Update blog-articles.md | 2019-10-04 16:35:24 | e65236dae7c5827b7c9f64c19c8b1a16ea19e5a7

Merge pull request #1598 from PaulWoitaschek/patch-1

Fixed the german string placeholder for sharing the heap dump | 2019-10-03 16:16:23 | 029f28eefd7aa966520ac3649fd2688732c02867

Fix crash when pressing home from root screen (#1578)

This bug only happens on older Android devices.

Fixes #1555 | 2019-09-11 01:51:06 | 274f58f96e8de7dcd3000c06ba3e2b50e427747d

Merge pull request #1559 from bric3/fix-primitive-array-dump-skip

Fixes the primitive array dump record skipping | 2019-09-09 22:16:57 | c0fd4d812cb8d6c5723231e501c121da2af86f06

Parsing and applying proguard mapping during heap analysis (#1542)

* Parsing and applying proguard mapping during heap analysis

* Parsing and applying proguard mapping during heap analysis

* Rebased onto master

* Post review changes and updated shark-cli to support mapping files

* Post review fixes

* Moving proguard mapping reader out of the analyzer and formatting fixes | 2019-08-30 16:54:20 | 66182a52069d9be59d0af6220aa9afd74218aa9b

fix images | 2019-08-27 20:02:50 | 8f5030e9faa8690217e1bd436274a3de5b9d3fb3

fix image links in docs | 2019-08-27 19:59:20 | edca56a947278508350bfa5dd33d3fa10699001f

Merge pull request #1549 from Armaxis/patch-1

Added section about using Detekt to Contributing | 2019-08-24 22:16:26 | c923d14909888860a99d5899af17f5b52c9b000f

Revert "Replaced accessor with a call to setter to fix the build issue"

This reverts commit 82db0398 | 2019-08-17 02:21:08 | c570cb9b0fd7bd7fcc88c4d3b529df8837e98fdc

Replaced accessor with a call to setter to fix the build issue | 2019-08-16 04:32:25 | 82db039843303044f91d36ba7c43595ab59bacd5

fix typo | 2019-08-02 15:31:17 | a2452f61e78e689efb59adaf71384d74447578b0

Add / fix android inspectors (#1491)

* Added MortarScope and ViewRootImpl inspectors
* Fixed the ContextWrapper inspector

Fixes #1490
Fixes #1389 | 2019-07-25 22:50:48 | 915f8359690a016a09e66608a041454b9c8c52cb

Documenting public APIs (#1476)

Also fixed naming and other things that weren't right.

Fixes #1474 | 2019-07-19 06:57:25 | 41c69a5d424b4236114c5ce1b077afdad38e57a5

Adding CLI for LeakCanary (#1456)

Example usage:
```
./gradlew leakcanary-cli:run --args='analyze-process com.example.leakcanary'

./gradlew leakcanary-cli:run --args='dump-process com.example.leakcanary'

./gradlew leakcanary-cli:run --args='analyze-file /path/to/heapdump.hprof'
```

Also fixed a bug in ShortestPathFinder which did not ignore null references in object arrays | 2019-07-11 19:11:30 | eded1c96e84f37393857ba4de2580aec784b2391

Behavior change & bugfixes for retained count notification (#1433)

* Bugfix: when tapping the "dump heap" notification, if the GC found no retained instance we didn't use a distinct notification id to communicate that, and then soon after we'd dismiss the notification that let's the user know there is no retained instances on tap.
* Bugfix: we weren't running the GC when checking for retained instances and the count was under the threshold
* Change: we now update the notification and keep it around for 30 seconds when the count goes to 0
* Change: the "no retained instance" notification that shows on tap is identical and also auto dismisses after 30 seconds.
* Change: we're checking for retained references (and running the GC) every 2 seconds instead of 5.

Fixes #1427 | 2019-07-03 20:55:47 | 968083a915343d881bd63e40587c070fde543732

Update how to fix a leak | 2019-06-25 05:46:56 | 177e7fd12933d99eca7a526851c53e598a03bf90

Text rendering tests (#1378)

* Added test coverage for text rendering
* Fixed bug: labels were not rendered on the last node (leaking instance)
* Matched exclusions are now rendered on their own line

Fixes #1375
Fixes #1350 | 2019-06-04 09:32:11 | 1926cb1db73f9583e11c557dbf2e5d46e3896a6e

Thread name based exclusions (#1353)

* Readded support for exclusions of local variable based on thread names
* Renamed ThreadExclusion to JavaLocalExclusion
* Fixed bug: KeyedWeakReference was not always ignored because its superclass is has a weakly reachable exclusion.
* Fixed bug: all root nodes had the same visit order as the first non root enqueued item, making it possible for a non root node to be dequeued before we're done with all roots.
* Redded gc root sorting
* Added tests to cover all uncovered bugs
* Added support for parsing StackFrameRecord

Fixes #1339 | 2019-05-20 13:17:18 | 6c2ee609efda323e88a4964d31fc5a5f0532f776

Reachability => LeakStatus (#1340)

* Combined leaking information from inspectors to solving conflicts while keeping all reasons
* Made reason from view leak inspector more obvious, and added label data about internals
* Moved reachability into LeakTraceElement
* Reachability renamed to LeakNodeStatus and leaking / not leaking
* ReachabilityInspector and Labeler are now functions with type aliases

Related to #1336: should fix the crash, though it's still unclear why AppCompatButton was a gc root there. | 2019-05-07 14:56:59 | 01210bbbfaecb3bcb6057c62b2195366d3bfa4f9

Revamp notifications (#1335)

* New notification that shows the count of retained instances. Tapping it triggers a heap dump. Fixes #1325
* Notifications are now split into two channels: default for results, and low for everything else.
* New config options: LeakCanary.config.dumpHeapWhenDebugging (default false) and LeakCanary.config.retainedVisibleThreshold (default 5)
* Replaced notification int constants and timestamps with resource ids.
* Don't show background notifications in instant apps (#1197) | 2019-05-05 16:38:26 | b14d9bc9c0a87119137bc0998bdec9314186dfcf

Highlighting new leaks (#1334)

New leaks are leaks that have a leak group that doesn't exist in any prior analysis.

* The notification now reports the count of leaks, with a split of new, known, and won't fix.
* The analysis success screen shows new leaks
* Moved description prefixes to be computed rather than inserted in the DB

Fixes #1328 | 2019-05-05 09:37:38 | f9a0518d4ddd69b782b6302caa3e3039787038e4

LeakSentry can be disabled (#1332)

LeakCanary has an enabled config option. Default is on in debug builds off in release builds.

Fixes #1327 | 2019-05-04 17:52:47 | f74f60901f34c751e8b8798d626678aa6233c893

Revert "fix trailing spaces per checkstyle"

This reverts commit ff17f879ec92ec326f8b1c6b7b8d77a5266d6622. | 2019-05-04 08:04:21 | 03136ca7dc1680299d710f79ca885412a1564144

Add test coverage for heap analysis (#1329)

* Fixed bug when reachability inspectors conflicts (reachable should win and erase unreachable)
* Added back support for leaking instances being empty objects, strings, primitive arrays or any object that we otherwise don't follow to find shortest paths. | 2019-05-04 07:51:02 | 59558e655d537c7654c411eebfd840773a8b77c9

Introducing exclusion priority (#1317)

* Add segmented FIFO queue

Unified several queues into one segmented FIFO queue. This will enable us to add several levels of priority.

* Introducing exclusion priority

* "excludedLeak" is now known as "won't fix leak", which matches its reality better. It's a leak that is known and real yet we're not fixing.
* Exclusion.alwaysExclude is replaced with Exclusion.status, with 3 possible values: NEVER_REACHABLE, WONT_FIX_LEAK, WEAKLY_REACHABLE.
* The shortest path finder will now follow weak references after all other paths have been exhausted.
* Removed class exclusion, was confusing, replaced with less lazy approach of listing fields to exclude
* VIEWLOCATIONHOLDER_ROOT should not have been always excluded, fixed.

Fixes #1173 ... well kinda. Instead of "non leaking retained instances", LeakCanary will report weakly reachable traces. Not sure if that'll help but it's a foundation we can build on. | 2019-04-30 17:44:15 | b0eedc553995e354e2382b3378bf0348801cd3c5

AllFieldsLabeler & cleanups (#1316)

* Add new optional labeler that prints all fields (useful for debugging)
* Move deprecated AnalysisResult to perflib
* Made DefaultAnalysisResultListener an object | 2019-04-30 07:08:29 | b9ee5356db265412db39c4c341880f305fbf2c76

fix format | 2019-04-22 06:25:09 | 4a2b158913e5a9eb0d5c6fdfbf949a80fc1b2c6b

Rename default to perflib and experimental to default (#1282)

* Remove experimental from module names

* Remove experimental prefix, add perflib prefix:

* update docs | 2019-04-19 06:01:39 | 425a9f24deb72691b02cdc85f80d177c05afebc5

fix list | 2019-04-18 21:55:43 | 8e3f9d26e8d3555bf934b99ac062aabc3aba528f

fix broken master | 2019-04-10 15:00:30 | f067ae53e050c5f52f47237440a6ac7eee3ca94c

fix broken build due to typo | 2019-04-10 05:44:19 | 7d4ddb4ffe3c9b0f30a84848675452dded0d4115

Leaking information aligned below simple class name. (#1258)

Also fixed issue where extraString + exclusionString were showing after the squiggly line.

Before: 
``` 
┬
├─ java.lang.Thread
│                 Leaking: NO (it's a GC root)
│                 ↓ thread Thread.<Java Local>
│                                ~~~~~~~~~~~~~ (named 'Thread-4')
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                 Leaking: UNKNOWN
│                 ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                     ~~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) 
```
After: 
``` 
┬
├─ java.lang.Thread
│            Leaking: NO (it's a GC root)
│            ↓ thread Thread.<Java Local> (named 'Thread-4')
│                            ~~~~~~~~~~~~
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                         Leaking: UNKNOWN
│                         ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                              ~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) ``` | 2019-04-05 20:11:47 | a938855585c7cf2522ffbd143d4bb66a234eea66

Add share to Stack Overflow button when viewing a leak (#1252)

* Add share to Stack Overflow button when viewing a leak

* Add question tag, lengthen toast and fix build failure. | 2019-04-04 20:49:50 | 8724d2aaffc07904517a3b823867802ca43233ae

Check if serviceInfo.processName is null. When LeakCanary runs on a seperate process and that process for some reason does not have a assigned processName, then we will crash on a NullPointerException. Also a debug log explaining this. (#1225) | 2019-04-01 19:20:40 | 3efc43608ed71dc20b0ad1e0e80e33d15249666f

fix master broken | 2019-04-01 19:07:27 | fe42130029174681a708b7d8622412efbaf81e73

fix trailing spaces per checkstyle | 2019-03-29 22:34:58 | ff17f879ec92ec326f8b1c6b7b8d77a5266d6622

Fix GC Root bugs that missed leaks (#1168)

In Perflib, Snapshot.getGcRoots() only returns the GC roots from the first heap. Based on empirical evidence, it seems like Android has 4 heaps, and the GC Roots used to only be in the first heap, but more recent versions of Android have GC Roots in other heaps as well.

This means LeakCanary would sometimes show "No Leak Found" when there actually was a leak.

Fixes #1163 | 2019-01-10 23:32:27 | 64b6e5a41796ae1587c50c8cc860cea25f28f382

fix typo | 2018-10-17 00:43:01 | 044b1e4827bc71ec008dc3f7e43c78f58885f1e1

Fix LeakCanary toasting (#1116)

- Prior attempts to get it to work with the application context turned out to be buggy.
- This makes LeakCanary use whatever the current resumed activity is, if any.
- If there is no resumed activity, then the toast isn't displayed.

This supersedes #1080 | 2018-10-16 13:23:14 | 0e39e2eea79bc05bf7147a4074dd7163f7c401ff

fix the wrong word (#1111) | 2018-10-16 01:25:28 | 636b9b6c2b39c0c887c9ed78e904239db9bc131e

Merge pull request #1104 from IlyaGulya/bug/travis-ci-cache-fix

Fix travis caching and improve build time. | 2018-09-22 21:25:59 | 344728b906daf6d010f66bdf4ccc29ad8fedede5

Error prone 2.3.1 + suggested fix and specify version

See http://errorprone.info/bugpattern/StringSplitter | 2018-08-22 07:37:33 | a6b6960d73a1da9661f4e85254570bf5f867f954

Merge pull request #1089 from hzsweers/z/fixAnother

Quick followup to #1088 | 2018-08-22 03:15:15 | be973f5f5da6a3516aedab98e639690697617747

Merge pull request #1087 from Goddchen/patch-2

Updated german translation | 2018-08-20 13:52:47 | b43c279b3e1623c193e1dc81955527f70e93f822

Merge pull request #1063 from javmarina/patch-1

Fixed wrong versions in AndroidExcludedRefs | 2018-07-25 18:31:55 | 3b4ebe3e2571377f93e9a6976e021324502a0f78

Fixed wrong versions in AndroidExcludedRefs

Commit https://android.googlesource.com/platform/frameworks/base/+/27db46850b708070452c0ce49daf5f79503fbde6 introduced this issue. This commit was first included in Jelly Bean 4.3 (JELLY_BEAN_MR2), not Jelly Bean 4.1 (JELLY_BEAN)
Commit https://android.googlesource.com/platform/frameworks/base/+/5200e1cb07190a1f6874d72a4561064cad3ee3e0 fixes this issue and was first included in Oreo 8.0 (O). Nougat still has this memory leak. | 2018-07-24 18:24:59 | e4778b25f2c6e65ebc485d255e38586c7d45ec97

Merge pull request #1057 from square/py/ui_bug

Fix drawing of start line | 2018-07-20 22:21:19 | af96577a7d19e4df9f63d95fd9c3bfd2adcddb5d

Avoid Toast crashes

Showing a toast can crash on API 25 because the Window Manager can throw a BadTokenException when addView is called.

This change fixes it by configuring the toast manually and calling the window manager directly. This is based on https://github.com/pyricau/frenchtoast/blob/master/frenchtoast/src/main/java/frenchtoast/Mixture.java#L49 .

Fixes #844 | 2018-07-20 16:11:22 | c9ebc5cf5099c093bde5d3309b2692cb0e2016d8

Fixing setup bug | 2018-06-28 04:07:09 | 505933817cf6e2eb0dad4a78d4c7c35a072b9868

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

Add / fix android inspectors (#1491)

* Added MortarScope and ViewRootImpl inspectors
* Fixed the ContextWrapper inspector

Fixes #1490
Fixes #1389 | 2019-07-25 22:50:48 | 915f8359690a016a09e66608a041454b9c8c52cb

Documenting public APIs (#1476)

Also fixed naming and other things that weren't right.

Fixes #1474 | 2019-07-19 06:57:25 | 41c69a5d424b4236114c5ce1b077afdad38e57a5

Adding CLI for LeakCanary (#1456)

Example usage:
```
./gradlew leakcanary-cli:run --args='analyze-process com.example.leakcanary'

./gradlew leakcanary-cli:run --args='dump-process com.example.leakcanary'

./gradlew leakcanary-cli:run --args='analyze-file /path/to/heapdump.hprof'
```

Also fixed a bug in ShortestPathFinder which did not ignore null references in object arrays | 2019-07-11 19:11:30 | eded1c96e84f37393857ba4de2580aec784b2391

Behavior change & bugfixes for retained count notification (#1433)

* Bugfix: when tapping the "dump heap" notification, if the GC found no retained instance we didn't use a distinct notification id to communicate that, and then soon after we'd dismiss the notification that let's the user know there is no retained instances on tap.
* Bugfix: we weren't running the GC when checking for retained instances and the count was under the threshold
* Change: we now update the notification and keep it around for 30 seconds when the count goes to 0
* Change: the "no retained instance" notification that shows on tap is identical and also auto dismisses after 30 seconds.
* Change: we're checking for retained references (and running the GC) every 2 seconds instead of 5.

Fixes #1427 | 2019-07-03 20:55:47 | 968083a915343d881bd63e40587c070fde543732

Update how to fix a leak | 2019-06-25 05:46:56 | 177e7fd12933d99eca7a526851c53e598a03bf90

Text rendering tests (#1378)

* Added test coverage for text rendering
* Fixed bug: labels were not rendered on the last node (leaking instance)
* Matched exclusions are now rendered on their own line

Fixes #1375
Fixes #1350 | 2019-06-04 09:32:11 | 1926cb1db73f9583e11c557dbf2e5d46e3896a6e

Thread name based exclusions (#1353)

* Readded support for exclusions of local variable based on thread names
* Renamed ThreadExclusion to JavaLocalExclusion
* Fixed bug: KeyedWeakReference was not always ignored because its superclass is has a weakly reachable exclusion.
* Fixed bug: all root nodes had the same visit order as the first non root enqueued item, making it possible for a non root node to be dequeued before we're done with all roots.
* Redded gc root sorting
* Added tests to cover all uncovered bugs
* Added support for parsing StackFrameRecord

Fixes #1339 | 2019-05-20 13:17:18 | 6c2ee609efda323e88a4964d31fc5a5f0532f776

Reachability => LeakStatus (#1340)

* Combined leaking information from inspectors to solving conflicts while keeping all reasons
* Made reason from view leak inspector more obvious, and added label data about internals
* Moved reachability into LeakTraceElement
* Reachability renamed to LeakNodeStatus and leaking / not leaking
* ReachabilityInspector and Labeler are now functions with type aliases

Related to #1336: should fix the crash, though it's still unclear why AppCompatButton was a gc root there. | 2019-05-07 14:56:59 | 01210bbbfaecb3bcb6057c62b2195366d3bfa4f9

Revamp notifications (#1335)

* New notification that shows the count of retained instances. Tapping it triggers a heap dump. Fixes #1325
* Notifications are now split into two channels: default for results, and low for everything else.
* New config options: LeakCanary.config.dumpHeapWhenDebugging (default false) and LeakCanary.config.retainedVisibleThreshold (default 5)
* Replaced notification int constants and timestamps with resource ids.
* Don't show background notifications in instant apps (#1197) | 2019-05-05 16:38:26 | b14d9bc9c0a87119137bc0998bdec9314186dfcf

Highlighting new leaks (#1334)

New leaks are leaks that have a leak group that doesn't exist in any prior analysis.

* The notification now reports the count of leaks, with a split of new, known, and won't fix.
* The analysis success screen shows new leaks
* Moved description prefixes to be computed rather than inserted in the DB

Fixes #1328 | 2019-05-05 09:37:38 | f9a0518d4ddd69b782b6302caa3e3039787038e4

LeakSentry can be disabled (#1332)

LeakCanary has an enabled config option. Default is on in debug builds off in release builds.

Fixes #1327 | 2019-05-04 17:52:47 | f74f60901f34c751e8b8798d626678aa6233c893

Revert "fix trailing spaces per checkstyle"

This reverts commit ff17f879ec92ec326f8b1c6b7b8d77a5266d6622. | 2019-05-04 08:04:21 | 03136ca7dc1680299d710f79ca885412a1564144

Add test coverage for heap analysis (#1329)

* Fixed bug when reachability inspectors conflicts (reachable should win and erase unreachable)
* Added back support for leaking instances being empty objects, strings, primitive arrays or any object that we otherwise don't follow to find shortest paths. | 2019-05-04 07:51:02 | 59558e655d537c7654c411eebfd840773a8b77c9

Introducing exclusion priority (#1317)

* Add segmented FIFO queue

Unified several queues into one segmented FIFO queue. This will enable us to add several levels of priority.

* Introducing exclusion priority

* "excludedLeak" is now known as "won't fix leak", which matches its reality better. It's a leak that is known and real yet we're not fixing.
* Exclusion.alwaysExclude is replaced with Exclusion.status, with 3 possible values: NEVER_REACHABLE, WONT_FIX_LEAK, WEAKLY_REACHABLE.
* The shortest path finder will now follow weak references after all other paths have been exhausted.
* Removed class exclusion, was confusing, replaced with less lazy approach of listing fields to exclude
* VIEWLOCATIONHOLDER_ROOT should not have been always excluded, fixed.

Fixes #1173 ... well kinda. Instead of "non leaking retained instances", LeakCanary will report weakly reachable traces. Not sure if that'll help but it's a foundation we can build on. | 2019-04-30 17:44:15 | b0eedc553995e354e2382b3378bf0348801cd3c5

AllFieldsLabeler & cleanups (#1316)

* Add new optional labeler that prints all fields (useful for debugging)
* Move deprecated AnalysisResult to perflib
* Made DefaultAnalysisResultListener an object | 2019-04-30 07:08:29 | b9ee5356db265412db39c4c341880f305fbf2c76

fix format | 2019-04-22 06:25:09 | 4a2b158913e5a9eb0d5c6fdfbf949a80fc1b2c6b

Rename default to perflib and experimental to default (#1282)

* Remove experimental from module names

* Remove experimental prefix, add perflib prefix:

* update docs | 2019-04-19 06:01:39 | 425a9f24deb72691b02cdc85f80d177c05afebc5

fix list | 2019-04-18 21:55:43 | 8e3f9d26e8d3555bf934b99ac062aabc3aba528f

fix broken master | 2019-04-10 15:00:30 | f067ae53e050c5f52f47237440a6ac7eee3ca94c

fix broken build due to typo | 2019-04-10 05:44:19 | 7d4ddb4ffe3c9b0f30a84848675452dded0d4115

Leaking information aligned below simple class name. (#1258)

Also fixed issue where extraString + exclusionString were showing after the squiggly line.

Before: 
``` 
┬
├─ java.lang.Thread
│                 Leaking: NO (it's a GC root)
│                 ↓ thread Thread.<Java Local>
│                                ~~~~~~~~~~~~~ (named 'Thread-4')
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                 Leaking: UNKNOWN
│                 ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                     ~~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) 
```
After: 
``` 
┬
├─ java.lang.Thread
│            Leaking: NO (it's a GC root)
│            ↓ thread Thread.<Java Local> (named 'Thread-4')
│                            ~~~~~~~~~~~~
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                         Leaking: UNKNOWN
│                         ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                              ~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) ``` | 2019-04-05 20:11:47 | a938855585c7cf2522ffbd143d4bb66a234eea66

Add share to Stack Overflow button when viewing a leak (#1252)

* Add share to Stack Overflow button when viewing a leak

* Add question tag, lengthen toast and fix build failure. | 2019-04-04 20:49:50 | 8724d2aaffc07904517a3b823867802ca43233ae

Check if serviceInfo.processName is null. When LeakCanary runs on a seperate process and that process for some reason does not have a assigned processName, then we will crash on a NullPointerException. Also a debug log explaining this. (#1225) | 2019-04-01 19:20:40 | 3efc43608ed71dc20b0ad1e0e80e33d15249666f

fix master broken | 2019-04-01 19:07:27 | fe42130029174681a708b7d8622412efbaf81e73

fix trailing spaces per checkstyle | 2019-03-29 22:34:58 | ff17f879ec92ec326f8b1c6b7b8d77a5266d6622

Fix GC Root bugs that missed leaks (#1168)

In Perflib, Snapshot.getGcRoots() only returns the GC roots from the first heap. Based on empirical evidence, it seems like Android has 4 heaps, and the GC Roots used to only be in the first heap, but more recent versions of Android have GC Roots in other heaps as well.

This means LeakCanary would sometimes show "No Leak Found" when there actually was a leak.

Fixes #1163 | 2019-01-10 23:32:27 | 64b6e5a41796ae1587c50c8cc860cea25f28f382

fix typo | 2018-10-17 00:43:01 | 044b1e4827bc71ec008dc3f7e43c78f58885f1e1

Fix LeakCanary toasting (#1116)

- Prior attempts to get it to work with the application context turned out to be buggy.
- This makes LeakCanary use whatever the current resumed activity is, if any.
- If there is no resumed activity, then the toast isn't displayed.

This supersedes #1080 | 2018-10-16 13:23:14 | 0e39e2eea79bc05bf7147a4074dd7163f7c401ff

fix the wrong word (#1111) | 2018-10-16 01:25:28 | 636b9b6c2b39c0c887c9ed78e904239db9bc131e

Merge pull request #1104 from IlyaGulya/bug/travis-ci-cache-fix

Fix travis caching and improve build time. | 2018-09-22 21:25:59 | 344728b906daf6d010f66bdf4ccc29ad8fedede5

Error prone 2.3.1 + suggested fix and specify version

See http://errorprone.info/bugpattern/StringSplitter | 2018-08-22 07:37:33 | a6b6960d73a1da9661f4e85254570bf5f867f954

Merge pull request #1089 from hzsweers/z/fixAnother

Quick followup to #1088 | 2018-08-22 03:15:15 | be973f5f5da6a3516aedab98e639690697617747

Merge pull request #1087 from Goddchen/patch-2

Updated german translation | 2018-08-20 13:52:47 | b43c279b3e1623c193e1dc81955527f70e93f822

Merge pull request #1063 from javmarina/patch-1

Fixed wrong versions in AndroidExcludedRefs | 2018-07-25 18:31:55 | 3b4ebe3e2571377f93e9a6976e021324502a0f78

Fixed wrong versions in AndroidExcludedRefs

Commit https://android.googlesource.com/platform/frameworks/base/+/27db46850b708070452c0ce49daf5f79503fbde6 introduced this issue. This commit was first included in Jelly Bean 4.3 (JELLY_BEAN_MR2), not Jelly Bean 4.1 (JELLY_BEAN)
Commit https://android.googlesource.com/platform/frameworks/base/+/5200e1cb07190a1f6874d72a4561064cad3ee3e0 fixes this issue and was first included in Oreo 8.0 (O). Nougat still has this memory leak. | 2018-07-24 18:24:59 | e4778b25f2c6e65ebc485d255e38586c7d45ec97

Merge pull request #1057 from square/py/ui_bug

Fix drawing of start line | 2018-07-20 22:21:19 | af96577a7d19e4df9f63d95fd9c3bfd2adcddb5d

Avoid Toast crashes

Showing a toast can crash on API 25 because the Window Manager can throw a BadTokenException when addView is called.

This change fixes it by configuring the toast manually and calling the window manager directly. This is based on https://github.com/pyricau/frenchtoast/blob/master/frenchtoast/src/main/java/frenchtoast/Mixture.java#L49 .

Fixes #844 | 2018-07-20 16:11:22 | c9ebc5cf5099c093bde5d3309b2692cb0e2016d8

Fixing setup bug | 2018-06-28 04:07:09 | 505933817cf6e2eb0dad4a78d4c7c35a072b9868

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

Documenting public APIs (#1476)

Also fixed naming and other things that weren't right.

Fixes #1474 | 2019-07-19 06:57:25 | 41c69a5d424b4236114c5ce1b077afdad38e57a5

Adding CLI for LeakCanary (#1456)

Example usage:
```
./gradlew leakcanary-cli:run --args='analyze-process com.example.leakcanary'

./gradlew leakcanary-cli:run --args='dump-process com.example.leakcanary'

./gradlew leakcanary-cli:run --args='analyze-file /path/to/heapdump.hprof'
```

Also fixed a bug in ShortestPathFinder which did not ignore null references in object arrays | 2019-07-11 19:11:30 | eded1c96e84f37393857ba4de2580aec784b2391

Behavior change & bugfixes for retained count notification (#1433)

* Bugfix: when tapping the "dump heap" notification, if the GC found no retained instance we didn't use a distinct notification id to communicate that, and then soon after we'd dismiss the notification that let's the user know there is no retained instances on tap.
* Bugfix: we weren't running the GC when checking for retained instances and the count was under the threshold
* Change: we now update the notification and keep it around for 30 seconds when the count goes to 0
* Change: the "no retained instance" notification that shows on tap is identical and also auto dismisses after 30 seconds.
* Change: we're checking for retained references (and running the GC) every 2 seconds instead of 5.

Fixes #1427 | 2019-07-03 20:55:47 | 968083a915343d881bd63e40587c070fde543732

Update how to fix a leak | 2019-06-25 05:46:56 | 177e7fd12933d99eca7a526851c53e598a03bf90

Text rendering tests (#1378)

* Added test coverage for text rendering
* Fixed bug: labels were not rendered on the last node (leaking instance)
* Matched exclusions are now rendered on their own line

Fixes #1375
Fixes #1350 | 2019-06-04 09:32:11 | 1926cb1db73f9583e11c557dbf2e5d46e3896a6e

Thread name based exclusions (#1353)

* Readded support for exclusions of local variable based on thread names
* Renamed ThreadExclusion to JavaLocalExclusion
* Fixed bug: KeyedWeakReference was not always ignored because its superclass is has a weakly reachable exclusion.
* Fixed bug: all root nodes had the same visit order as the first non root enqueued item, making it possible for a non root node to be dequeued before we're done with all roots.
* Redded gc root sorting
* Added tests to cover all uncovered bugs
* Added support for parsing StackFrameRecord

Fixes #1339 | 2019-05-20 13:17:18 | 6c2ee609efda323e88a4964d31fc5a5f0532f776

Reachability => LeakStatus (#1340)

* Combined leaking information from inspectors to solving conflicts while keeping all reasons
* Made reason from view leak inspector more obvious, and added label data about internals
* Moved reachability into LeakTraceElement
* Reachability renamed to LeakNodeStatus and leaking / not leaking
* ReachabilityInspector and Labeler are now functions with type aliases

Related to #1336: should fix the crash, though it's still unclear why AppCompatButton was a gc root there. | 2019-05-07 14:56:59 | 01210bbbfaecb3bcb6057c62b2195366d3bfa4f9

Revamp notifications (#1335)

* New notification that shows the count of retained instances. Tapping it triggers a heap dump. Fixes #1325
* Notifications are now split into two channels: default for results, and low for everything else.
* New config options: LeakCanary.config.dumpHeapWhenDebugging (default false) and LeakCanary.config.retainedVisibleThreshold (default 5)
* Replaced notification int constants and timestamps with resource ids.
* Don't show background notifications in instant apps (#1197) | 2019-05-05 16:38:26 | b14d9bc9c0a87119137bc0998bdec9314186dfcf

Highlighting new leaks (#1334)

New leaks are leaks that have a leak group that doesn't exist in any prior analysis.

* The notification now reports the count of leaks, with a split of new, known, and won't fix.
* The analysis success screen shows new leaks
* Moved description prefixes to be computed rather than inserted in the DB

Fixes #1328 | 2019-05-05 09:37:38 | f9a0518d4ddd69b782b6302caa3e3039787038e4

LeakSentry can be disabled (#1332)

LeakCanary has an enabled config option. Default is on in debug builds off in release builds.

Fixes #1327 | 2019-05-04 17:52:47 | f74f60901f34c751e8b8798d626678aa6233c893

Revert "fix trailing spaces per checkstyle"

This reverts commit ff17f879ec92ec326f8b1c6b7b8d77a5266d6622. | 2019-05-04 08:04:21 | 03136ca7dc1680299d710f79ca885412a1564144

Add test coverage for heap analysis (#1329)

* Fixed bug when reachability inspectors conflicts (reachable should win and erase unreachable)
* Added back support for leaking instances being empty objects, strings, primitive arrays or any object that we otherwise don't follow to find shortest paths. | 2019-05-04 07:51:02 | 59558e655d537c7654c411eebfd840773a8b77c9

Introducing exclusion priority (#1317)

* Add segmented FIFO queue

Unified several queues into one segmented FIFO queue. This will enable us to add several levels of priority.

* Introducing exclusion priority

* "excludedLeak" is now known as "won't fix leak", which matches its reality better. It's a leak that is known and real yet we're not fixing.
* Exclusion.alwaysExclude is replaced with Exclusion.status, with 3 possible values: NEVER_REACHABLE, WONT_FIX_LEAK, WEAKLY_REACHABLE.
* The shortest path finder will now follow weak references after all other paths have been exhausted.
* Removed class exclusion, was confusing, replaced with less lazy approach of listing fields to exclude
* VIEWLOCATIONHOLDER_ROOT should not have been always excluded, fixed.

Fixes #1173 ... well kinda. Instead of "non leaking retained instances", LeakCanary will report weakly reachable traces. Not sure if that'll help but it's a foundation we can build on. | 2019-04-30 17:44:15 | b0eedc553995e354e2382b3378bf0348801cd3c5

AllFieldsLabeler & cleanups (#1316)

* Add new optional labeler that prints all fields (useful for debugging)
* Move deprecated AnalysisResult to perflib
* Made DefaultAnalysisResultListener an object | 2019-04-30 07:08:29 | b9ee5356db265412db39c4c341880f305fbf2c76

fix format | 2019-04-22 06:25:09 | 4a2b158913e5a9eb0d5c6fdfbf949a80fc1b2c6b

Rename default to perflib and experimental to default (#1282)

* Remove experimental from module names

* Remove experimental prefix, add perflib prefix:

* update docs | 2019-04-19 06:01:39 | 425a9f24deb72691b02cdc85f80d177c05afebc5

fix list | 2019-04-18 21:55:43 | 8e3f9d26e8d3555bf934b99ac062aabc3aba528f

fix broken master | 2019-04-10 15:00:30 | f067ae53e050c5f52f47237440a6ac7eee3ca94c

fix broken build due to typo | 2019-04-10 05:44:19 | 7d4ddb4ffe3c9b0f30a84848675452dded0d4115

Leaking information aligned below simple class name. (#1258)

Also fixed issue where extraString + exclusionString were showing after the squiggly line.

Before: 
``` 
┬
├─ java.lang.Thread
│                 Leaking: NO (it's a GC root)
│                 ↓ thread Thread.<Java Local>
│                                ~~~~~~~~~~~~~ (named 'Thread-4')
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                 Leaking: UNKNOWN
│                 ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                     ~~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) 
```
After: 
``` 
┬
├─ java.lang.Thread
│            Leaking: NO (it's a GC root)
│            ↓ thread Thread.<Java Local> (named 'Thread-4')
│                            ~~~~~~~~~~~~
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                         Leaking: UNKNOWN
│                         ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                              ~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) ``` | 2019-04-05 20:11:47 | a938855585c7cf2522ffbd143d4bb66a234eea66

Add share to Stack Overflow button when viewing a leak (#1252)

* Add share to Stack Overflow button when viewing a leak

* Add question tag, lengthen toast and fix build failure. | 2019-04-04 20:49:50 | 8724d2aaffc07904517a3b823867802ca43233ae

Check if serviceInfo.processName is null. When LeakCanary runs on a seperate process and that process for some reason does not have a assigned processName, then we will crash on a NullPointerException. Also a debug log explaining this. (#1225) | 2019-04-01 19:20:40 | 3efc43608ed71dc20b0ad1e0e80e33d15249666f

fix master broken | 2019-04-01 19:07:27 | fe42130029174681a708b7d8622412efbaf81e73

fix trailing spaces per checkstyle | 2019-03-29 22:34:58 | ff17f879ec92ec326f8b1c6b7b8d77a5266d6622

Fix GC Root bugs that missed leaks (#1168)

In Perflib, Snapshot.getGcRoots() only returns the GC roots from the first heap. Based on empirical evidence, it seems like Android has 4 heaps, and the GC Roots used to only be in the first heap, but more recent versions of Android have GC Roots in other heaps as well.

This means LeakCanary would sometimes show "No Leak Found" when there actually was a leak.

Fixes #1163 | 2019-01-10 23:32:27 | 64b6e5a41796ae1587c50c8cc860cea25f28f382

fix typo | 2018-10-17 00:43:01 | 044b1e4827bc71ec008dc3f7e43c78f58885f1e1

Fix LeakCanary toasting (#1116)

- Prior attempts to get it to work with the application context turned out to be buggy.
- This makes LeakCanary use whatever the current resumed activity is, if any.
- If there is no resumed activity, then the toast isn't displayed.

This supersedes #1080 | 2018-10-16 13:23:14 | 0e39e2eea79bc05bf7147a4074dd7163f7c401ff

fix the wrong word (#1111) | 2018-10-16 01:25:28 | 636b9b6c2b39c0c887c9ed78e904239db9bc131e

Merge pull request #1104 from IlyaGulya/bug/travis-ci-cache-fix

Fix travis caching and improve build time. | 2018-09-22 21:25:59 | 344728b906daf6d010f66bdf4ccc29ad8fedede5

Error prone 2.3.1 + suggested fix and specify version

See http://errorprone.info/bugpattern/StringSplitter | 2018-08-22 07:37:33 | a6b6960d73a1da9661f4e85254570bf5f867f954

Merge pull request #1089 from hzsweers/z/fixAnother

Quick followup to #1088 | 2018-08-22 03:15:15 | be973f5f5da6a3516aedab98e639690697617747

Merge pull request #1087 from Goddchen/patch-2

Updated german translation | 2018-08-20 13:52:47 | b43c279b3e1623c193e1dc81955527f70e93f822

Merge pull request #1063 from javmarina/patch-1

Fixed wrong versions in AndroidExcludedRefs | 2018-07-25 18:31:55 | 3b4ebe3e2571377f93e9a6976e021324502a0f78

Fixed wrong versions in AndroidExcludedRefs

Commit https://android.googlesource.com/platform/frameworks/base/+/27db46850b708070452c0ce49daf5f79503fbde6 introduced this issue. This commit was first included in Jelly Bean 4.3 (JELLY_BEAN_MR2), not Jelly Bean 4.1 (JELLY_BEAN)
Commit https://android.googlesource.com/platform/frameworks/base/+/5200e1cb07190a1f6874d72a4561064cad3ee3e0 fixes this issue and was first included in Oreo 8.0 (O). Nougat still has this memory leak. | 2018-07-24 18:24:59 | e4778b25f2c6e65ebc485d255e38586c7d45ec97

Merge pull request #1057 from square/py/ui_bug

Fix drawing of start line | 2018-07-20 22:21:19 | af96577a7d19e4df9f63d95fd9c3bfd2adcddb5d

Avoid Toast crashes

Showing a toast can crash on API 25 because the Window Manager can throw a BadTokenException when addView is called.

This change fixes it by configuring the toast manually and calling the window manager directly. This is based on https://github.com/pyricau/frenchtoast/blob/master/frenchtoast/src/main/java/frenchtoast/Mixture.java#L49 .

Fixes #844 | 2018-07-20 16:11:22 | c9ebc5cf5099c093bde5d3309b2692cb0e2016d8

Fixing setup bug | 2018-06-28 04:07:09 | 505933817cf6e2eb0dad4a78d4c7c35a072b9868

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

Adding CLI for LeakCanary (#1456)

Example usage:
```
./gradlew leakcanary-cli:run --args='analyze-process com.example.leakcanary'

./gradlew leakcanary-cli:run --args='dump-process com.example.leakcanary'

./gradlew leakcanary-cli:run --args='analyze-file /path/to/heapdump.hprof'
```

Also fixed a bug in ShortestPathFinder which did not ignore null references in object arrays | 2019-07-11 19:11:30 | eded1c96e84f37393857ba4de2580aec784b2391

Behavior change & bugfixes for retained count notification (#1433)

* Bugfix: when tapping the "dump heap" notification, if the GC found no retained instance we didn't use a distinct notification id to communicate that, and then soon after we'd dismiss the notification that let's the user know there is no retained instances on tap.
* Bugfix: we weren't running the GC when checking for retained instances and the count was under the threshold
* Change: we now update the notification and keep it around for 30 seconds when the count goes to 0
* Change: the "no retained instance" notification that shows on tap is identical and also auto dismisses after 30 seconds.
* Change: we're checking for retained references (and running the GC) every 2 seconds instead of 5.

Fixes #1427 | 2019-07-03 20:55:47 | 968083a915343d881bd63e40587c070fde543732

Update how to fix a leak | 2019-06-25 05:46:56 | 177e7fd12933d99eca7a526851c53e598a03bf90

Text rendering tests (#1378)

* Added test coverage for text rendering
* Fixed bug: labels were not rendered on the last node (leaking instance)
* Matched exclusions are now rendered on their own line

Fixes #1375
Fixes #1350 | 2019-06-04 09:32:11 | 1926cb1db73f9583e11c557dbf2e5d46e3896a6e

Thread name based exclusions (#1353)

* Readded support for exclusions of local variable based on thread names
* Renamed ThreadExclusion to JavaLocalExclusion
* Fixed bug: KeyedWeakReference was not always ignored because its superclass is has a weakly reachable exclusion.
* Fixed bug: all root nodes had the same visit order as the first non root enqueued item, making it possible for a non root node to be dequeued before we're done with all roots.
* Redded gc root sorting
* Added tests to cover all uncovered bugs
* Added support for parsing StackFrameRecord

Fixes #1339 | 2019-05-20 13:17:18 | 6c2ee609efda323e88a4964d31fc5a5f0532f776

Reachability => LeakStatus (#1340)

* Combined leaking information from inspectors to solving conflicts while keeping all reasons
* Made reason from view leak inspector more obvious, and added label data about internals
* Moved reachability into LeakTraceElement
* Reachability renamed to LeakNodeStatus and leaking / not leaking
* ReachabilityInspector and Labeler are now functions with type aliases

Related to #1336: should fix the crash, though it's still unclear why AppCompatButton was a gc root there. | 2019-05-07 14:56:59 | 01210bbbfaecb3bcb6057c62b2195366d3bfa4f9

Revamp notifications (#1335)

* New notification that shows the count of retained instances. Tapping it triggers a heap dump. Fixes #1325
* Notifications are now split into two channels: default for results, and low for everything else.
* New config options: LeakCanary.config.dumpHeapWhenDebugging (default false) and LeakCanary.config.retainedVisibleThreshold (default 5)
* Replaced notification int constants and timestamps with resource ids.
* Don't show background notifications in instant apps (#1197) | 2019-05-05 16:38:26 | b14d9bc9c0a87119137bc0998bdec9314186dfcf

Highlighting new leaks (#1334)

New leaks are leaks that have a leak group that doesn't exist in any prior analysis.

* The notification now reports the count of leaks, with a split of new, known, and won't fix.
* The analysis success screen shows new leaks
* Moved description prefixes to be computed rather than inserted in the DB

Fixes #1328 | 2019-05-05 09:37:38 | f9a0518d4ddd69b782b6302caa3e3039787038e4

LeakSentry can be disabled (#1332)

LeakCanary has an enabled config option. Default is on in debug builds off in release builds.

Fixes #1327 | 2019-05-04 17:52:47 | f74f60901f34c751e8b8798d626678aa6233c893

Revert "fix trailing spaces per checkstyle"

This reverts commit ff17f879ec92ec326f8b1c6b7b8d77a5266d6622. | 2019-05-04 08:04:21 | 03136ca7dc1680299d710f79ca885412a1564144

Add test coverage for heap analysis (#1329)

* Fixed bug when reachability inspectors conflicts (reachable should win and erase unreachable)
* Added back support for leaking instances being empty objects, strings, primitive arrays or any object that we otherwise don't follow to find shortest paths. | 2019-05-04 07:51:02 | 59558e655d537c7654c411eebfd840773a8b77c9

Introducing exclusion priority (#1317)

* Add segmented FIFO queue

Unified several queues into one segmented FIFO queue. This will enable us to add several levels of priority.

* Introducing exclusion priority

* "excludedLeak" is now known as "won't fix leak", which matches its reality better. It's a leak that is known and real yet we're not fixing.
* Exclusion.alwaysExclude is replaced with Exclusion.status, with 3 possible values: NEVER_REACHABLE, WONT_FIX_LEAK, WEAKLY_REACHABLE.
* The shortest path finder will now follow weak references after all other paths have been exhausted.
* Removed class exclusion, was confusing, replaced with less lazy approach of listing fields to exclude
* VIEWLOCATIONHOLDER_ROOT should not have been always excluded, fixed.

Fixes #1173 ... well kinda. Instead of "non leaking retained instances", LeakCanary will report weakly reachable traces. Not sure if that'll help but it's a foundation we can build on. | 2019-04-30 17:44:15 | b0eedc553995e354e2382b3378bf0348801cd3c5

AllFieldsLabeler & cleanups (#1316)

* Add new optional labeler that prints all fields (useful for debugging)
* Move deprecated AnalysisResult to perflib
* Made DefaultAnalysisResultListener an object | 2019-04-30 07:08:29 | b9ee5356db265412db39c4c341880f305fbf2c76

fix format | 2019-04-22 06:25:09 | 4a2b158913e5a9eb0d5c6fdfbf949a80fc1b2c6b

Rename default to perflib and experimental to default (#1282)

* Remove experimental from module names

* Remove experimental prefix, add perflib prefix:

* update docs | 2019-04-19 06:01:39 | 425a9f24deb72691b02cdc85f80d177c05afebc5

fix list | 2019-04-18 21:55:43 | 8e3f9d26e8d3555bf934b99ac062aabc3aba528f

fix broken master | 2019-04-10 15:00:30 | f067ae53e050c5f52f47237440a6ac7eee3ca94c

fix broken build due to typo | 2019-04-10 05:44:19 | 7d4ddb4ffe3c9b0f30a84848675452dded0d4115

Leaking information aligned below simple class name. (#1258)

Also fixed issue where extraString + exclusionString were showing after the squiggly line.

Before: 
``` 
┬
├─ java.lang.Thread
│                 Leaking: NO (it's a GC root)
│                 ↓ thread Thread.<Java Local>
│                                ~~~~~~~~~~~~~ (named 'Thread-4')
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                 Leaking: UNKNOWN
│                 ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                     ~~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) 
```
After: 
``` 
┬
├─ java.lang.Thread
│            Leaking: NO (it's a GC root)
│            ↓ thread Thread.<Java Local> (named 'Thread-4')
│                            ~~~~~~~~~~~~
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                         Leaking: UNKNOWN
│                         ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                              ~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) ``` | 2019-04-05 20:11:47 | a938855585c7cf2522ffbd143d4bb66a234eea66

Add share to Stack Overflow button when viewing a leak (#1252)

* Add share to Stack Overflow button when viewing a leak

* Add question tag, lengthen toast and fix build failure. | 2019-04-04 20:49:50 | 8724d2aaffc07904517a3b823867802ca43233ae

Check if serviceInfo.processName is null. When LeakCanary runs on a seperate process and that process for some reason does not have a assigned processName, then we will crash on a NullPointerException. Also a debug log explaining this. (#1225) | 2019-04-01 19:20:40 | 3efc43608ed71dc20b0ad1e0e80e33d15249666f

fix master broken | 2019-04-01 19:07:27 | fe42130029174681a708b7d8622412efbaf81e73

fix trailing spaces per checkstyle | 2019-03-29 22:34:58 | ff17f879ec92ec326f8b1c6b7b8d77a5266d6622

Fix GC Root bugs that missed leaks (#1168)

In Perflib, Snapshot.getGcRoots() only returns the GC roots from the first heap. Based on empirical evidence, it seems like Android has 4 heaps, and the GC Roots used to only be in the first heap, but more recent versions of Android have GC Roots in other heaps as well.

This means LeakCanary would sometimes show "No Leak Found" when there actually was a leak.

Fixes #1163 | 2019-01-10 23:32:27 | 64b6e5a41796ae1587c50c8cc860cea25f28f382

fix typo | 2018-10-17 00:43:01 | 044b1e4827bc71ec008dc3f7e43c78f58885f1e1

Fix LeakCanary toasting (#1116)

- Prior attempts to get it to work with the application context turned out to be buggy.
- This makes LeakCanary use whatever the current resumed activity is, if any.
- If there is no resumed activity, then the toast isn't displayed.

This supersedes #1080 | 2018-10-16 13:23:14 | 0e39e2eea79bc05bf7147a4074dd7163f7c401ff

fix the wrong word (#1111) | 2018-10-16 01:25:28 | 636b9b6c2b39c0c887c9ed78e904239db9bc131e

Merge pull request #1104 from IlyaGulya/bug/travis-ci-cache-fix

Fix travis caching and improve build time. | 2018-09-22 21:25:59 | 344728b906daf6d010f66bdf4ccc29ad8fedede5

Error prone 2.3.1 + suggested fix and specify version

See http://errorprone.info/bugpattern/StringSplitter | 2018-08-22 07:37:33 | a6b6960d73a1da9661f4e85254570bf5f867f954

Merge pull request #1089 from hzsweers/z/fixAnother

Quick followup to #1088 | 2018-08-22 03:15:15 | be973f5f5da6a3516aedab98e639690697617747

Merge pull request #1087 from Goddchen/patch-2

Updated german translation | 2018-08-20 13:52:47 | b43c279b3e1623c193e1dc81955527f70e93f822

Merge pull request #1063 from javmarina/patch-1

Fixed wrong versions in AndroidExcludedRefs | 2018-07-25 18:31:55 | 3b4ebe3e2571377f93e9a6976e021324502a0f78

Fixed wrong versions in AndroidExcludedRefs

Commit https://android.googlesource.com/platform/frameworks/base/+/27db46850b708070452c0ce49daf5f79503fbde6 introduced this issue. This commit was first included in Jelly Bean 4.3 (JELLY_BEAN_MR2), not Jelly Bean 4.1 (JELLY_BEAN)
Commit https://android.googlesource.com/platform/frameworks/base/+/5200e1cb07190a1f6874d72a4561064cad3ee3e0 fixes this issue and was first included in Oreo 8.0 (O). Nougat still has this memory leak. | 2018-07-24 18:24:59 | e4778b25f2c6e65ebc485d255e38586c7d45ec97

Merge pull request #1057 from square/py/ui_bug

Fix drawing of start line | 2018-07-20 22:21:19 | af96577a7d19e4df9f63d95fd9c3bfd2adcddb5d

Avoid Toast crashes

Showing a toast can crash on API 25 because the Window Manager can throw a BadTokenException when addView is called.

This change fixes it by configuring the toast manually and calling the window manager directly. This is based on https://github.com/pyricau/frenchtoast/blob/master/frenchtoast/src/main/java/frenchtoast/Mixture.java#L49 .

Fixes #844 | 2018-07-20 16:11:22 | c9ebc5cf5099c093bde5d3309b2692cb0e2016d8

Fixing setup bug | 2018-06-28 04:07:09 | 505933817cf6e2eb0dad4a78d4c7c35a072b9868

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

Documenting public APIs (#1476)

Also fixed naming and other things that weren't right.

Fixes #1474 | 2019-07-19 06:57:25 | 41c69a5d424b4236114c5ce1b077afdad38e57a5

Adding CLI for LeakCanary (#1456)

Example usage:
```
./gradlew leakcanary-cli:run --args='analyze-process com.example.leakcanary'

./gradlew leakcanary-cli:run --args='dump-process com.example.leakcanary'

./gradlew leakcanary-cli:run --args='analyze-file /path/to/heapdump.hprof'
```

Also fixed a bug in ShortestPathFinder which did not ignore null references in object arrays | 2019-07-11 19:11:30 | eded1c96e84f37393857ba4de2580aec784b2391

Behavior change & bugfixes for retained count notification (#1433)

* Bugfix: when tapping the "dump heap" notification, if the GC found no retained instance we didn't use a distinct notification id to communicate that, and then soon after we'd dismiss the notification that let's the user know there is no retained instances on tap.
* Bugfix: we weren't running the GC when checking for retained instances and the count was under the threshold
* Change: we now update the notification and keep it around for 30 seconds when the count goes to 0
* Change: the "no retained instance" notification that shows on tap is identical and also auto dismisses after 30 seconds.
* Change: we're checking for retained references (and running the GC) every 2 seconds instead of 5.

Fixes #1427 | 2019-07-03 20:55:47 | 968083a915343d881bd63e40587c070fde543732

Update how to fix a leak | 2019-06-25 05:46:56 | 177e7fd12933d99eca7a526851c53e598a03bf90

Text rendering tests (#1378)

* Added test coverage for text rendering
* Fixed bug: labels were not rendered on the last node (leaking instance)
* Matched exclusions are now rendered on their own line

Fixes #1375
Fixes #1350 | 2019-06-04 09:32:11 | 1926cb1db73f9583e11c557dbf2e5d46e3896a6e

Thread name based exclusions (#1353)

* Readded support for exclusions of local variable based on thread names
* Renamed ThreadExclusion to JavaLocalExclusion
* Fixed bug: KeyedWeakReference was not always ignored because its superclass is has a weakly reachable exclusion.
* Fixed bug: all root nodes had the same visit order as the first non root enqueued item, making it possible for a non root node to be dequeued before we're done with all roots.
* Redded gc root sorting
* Added tests to cover all uncovered bugs
* Added support for parsing StackFrameRecord

Fixes #1339 | 2019-05-20 13:17:18 | 6c2ee609efda323e88a4964d31fc5a5f0532f776

Reachability => LeakStatus (#1340)

* Combined leaking information from inspectors to solving conflicts while keeping all reasons
* Made reason from view leak inspector more obvious, and added label data about internals
* Moved reachability into LeakTraceElement
* Reachability renamed to LeakNodeStatus and leaking / not leaking
* ReachabilityInspector and Labeler are now functions with type aliases

Related to #1336: should fix the crash, though it's still unclear why AppCompatButton was a gc root there. | 2019-05-07 14:56:59 | 01210bbbfaecb3bcb6057c62b2195366d3bfa4f9

Revamp notifications (#1335)

* New notification that shows the count of retained instances. Tapping it triggers a heap dump. Fixes #1325
* Notifications are now split into two channels: default for results, and low for everything else.
* New config options: LeakCanary.config.dumpHeapWhenDebugging (default false) and LeakCanary.config.retainedVisibleThreshold (default 5)
* Replaced notification int constants and timestamps with resource ids.
* Don't show background notifications in instant apps (#1197) | 2019-05-05 16:38:26 | b14d9bc9c0a87119137bc0998bdec9314186dfcf

Highlighting new leaks (#1334)

New leaks are leaks that have a leak group that doesn't exist in any prior analysis.

* The notification now reports the count of leaks, with a split of new, known, and won't fix.
* The analysis success screen shows new leaks
* Moved description prefixes to be computed rather than inserted in the DB

Fixes #1328 | 2019-05-05 09:37:38 | f9a0518d4ddd69b782b6302caa3e3039787038e4

LeakSentry can be disabled (#1332)

LeakCanary has an enabled config option. Default is on in debug builds off in release builds.

Fixes #1327 | 2019-05-04 17:52:47 | f74f60901f34c751e8b8798d626678aa6233c893

Revert "fix trailing spaces per checkstyle"

This reverts commit ff17f879ec92ec326f8b1c6b7b8d77a5266d6622. | 2019-05-04 08:04:21 | 03136ca7dc1680299d710f79ca885412a1564144

Add test coverage for heap analysis (#1329)

* Fixed bug when reachability inspectors conflicts (reachable should win and erase unreachable)
* Added back support for leaking instances being empty objects, strings, primitive arrays or any object that we otherwise don't follow to find shortest paths. | 2019-05-04 07:51:02 | 59558e655d537c7654c411eebfd840773a8b77c9

Introducing exclusion priority (#1317)

* Add segmented FIFO queue

Unified several queues into one segmented FIFO queue. This will enable us to add several levels of priority.

* Introducing exclusion priority

* "excludedLeak" is now known as "won't fix leak", which matches its reality better. It's a leak that is known and real yet we're not fixing.
* Exclusion.alwaysExclude is replaced with Exclusion.status, with 3 possible values: NEVER_REACHABLE, WONT_FIX_LEAK, WEAKLY_REACHABLE.
* The shortest path finder will now follow weak references after all other paths have been exhausted.
* Removed class exclusion, was confusing, replaced with less lazy approach of listing fields to exclude
* VIEWLOCATIONHOLDER_ROOT should not have been always excluded, fixed.

Fixes #1173 ... well kinda. Instead of "non leaking retained instances", LeakCanary will report weakly reachable traces. Not sure if that'll help but it's a foundation we can build on. | 2019-04-30 17:44:15 | b0eedc553995e354e2382b3378bf0348801cd3c5

AllFieldsLabeler & cleanups (#1316)

* Add new optional labeler that prints all fields (useful for debugging)
* Move deprecated AnalysisResult to perflib
* Made DefaultAnalysisResultListener an object | 2019-04-30 07:08:29 | b9ee5356db265412db39c4c341880f305fbf2c76

fix format | 2019-04-22 06:25:09 | 4a2b158913e5a9eb0d5c6fdfbf949a80fc1b2c6b

Rename default to perflib and experimental to default (#1282)

* Remove experimental from module names

* Remove experimental prefix, add perflib prefix:

* update docs | 2019-04-19 06:01:39 | 425a9f24deb72691b02cdc85f80d177c05afebc5

fix list | 2019-04-18 21:55:43 | 8e3f9d26e8d3555bf934b99ac062aabc3aba528f

fix broken master | 2019-04-10 15:00:30 | f067ae53e050c5f52f47237440a6ac7eee3ca94c

fix broken build due to typo | 2019-04-10 05:44:19 | 7d4ddb4ffe3c9b0f30a84848675452dded0d4115

Leaking information aligned below simple class name. (#1258)

Also fixed issue where extraString + exclusionString were showing after the squiggly line.

Before: 
``` 
┬
├─ java.lang.Thread
│                 Leaking: NO (it's a GC root)
│                 ↓ thread Thread.<Java Local>
│                                ~~~~~~~~~~~~~ (named 'Thread-4')
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                 Leaking: UNKNOWN
│                 ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                     ~~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) 
```
After: 
``` 
┬
├─ java.lang.Thread
│            Leaking: NO (it's a GC root)
│            ↓ thread Thread.<Java Local> (named 'Thread-4')
│                            ~~~~~~~~~~~~
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                         Leaking: UNKNOWN
│                         ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                              ~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) ``` | 2019-04-05 20:11:47 | a938855585c7cf2522ffbd143d4bb66a234eea66

Add share to Stack Overflow button when viewing a leak (#1252)

* Add share to Stack Overflow button when viewing a leak

* Add question tag, lengthen toast and fix build failure. | 2019-04-04 20:49:50 | 8724d2aaffc07904517a3b823867802ca43233ae

Check if serviceInfo.processName is null. When LeakCanary runs on a seperate process and that process for some reason does not have a assigned processName, then we will crash on a NullPointerException. Also a debug log explaining this. (#1225) | 2019-04-01 19:20:40 | 3efc43608ed71dc20b0ad1e0e80e33d15249666f

fix master broken | 2019-04-01 19:07:27 | fe42130029174681a708b7d8622412efbaf81e73

fix trailing spaces per checkstyle | 2019-03-29 22:34:58 | ff17f879ec92ec326f8b1c6b7b8d77a5266d6622

Fix GC Root bugs that missed leaks (#1168)

In Perflib, Snapshot.getGcRoots() only returns the GC roots from the first heap. Based on empirical evidence, it seems like Android has 4 heaps, and the GC Roots used to only be in the first heap, but more recent versions of Android have GC Roots in other heaps as well.

This means LeakCanary would sometimes show "No Leak Found" when there actually was a leak.

Fixes #1163 | 2019-01-10 23:32:27 | 64b6e5a41796ae1587c50c8cc860cea25f28f382

fix typo | 2018-10-17 00:43:01 | 044b1e4827bc71ec008dc3f7e43c78f58885f1e1

Fix LeakCanary toasting (#1116)

- Prior attempts to get it to work with the application context turned out to be buggy.
- This makes LeakCanary use whatever the current resumed activity is, if any.
- If there is no resumed activity, then the toast isn't displayed.

This supersedes #1080 | 2018-10-16 13:23:14 | 0e39e2eea79bc05bf7147a4074dd7163f7c401ff

fix the wrong word (#1111) | 2018-10-16 01:25:28 | 636b9b6c2b39c0c887c9ed78e904239db9bc131e

Merge pull request #1104 from IlyaGulya/bug/travis-ci-cache-fix

Fix travis caching and improve build time. | 2018-09-22 21:25:59 | 344728b906daf6d010f66bdf4ccc29ad8fedede5

Error prone 2.3.1 + suggested fix and specify version

See http://errorprone.info/bugpattern/StringSplitter | 2018-08-22 07:37:33 | a6b6960d73a1da9661f4e85254570bf5f867f954

Merge pull request #1089 from hzsweers/z/fixAnother

Quick followup to #1088 | 2018-08-22 03:15:15 | be973f5f5da6a3516aedab98e639690697617747

Merge pull request #1087 from Goddchen/patch-2

Updated german translation | 2018-08-20 13:52:47 | b43c279b3e1623c193e1dc81955527f70e93f822

Merge pull request #1063 from javmarina/patch-1

Fixed wrong versions in AndroidExcludedRefs | 2018-07-25 18:31:55 | 3b4ebe3e2571377f93e9a6976e021324502a0f78

Fixed wrong versions in AndroidExcludedRefs

Commit https://android.googlesource.com/platform/frameworks/base/+/27db46850b708070452c0ce49daf5f79503fbde6 introduced this issue. This commit was first included in Jelly Bean 4.3 (JELLY_BEAN_MR2), not Jelly Bean 4.1 (JELLY_BEAN)
Commit https://android.googlesource.com/platform/frameworks/base/+/5200e1cb07190a1f6874d72a4561064cad3ee3e0 fixes this issue and was first included in Oreo 8.0 (O). Nougat still has this memory leak. | 2018-07-24 18:24:59 | e4778b25f2c6e65ebc485d255e38586c7d45ec97

Merge pull request #1057 from square/py/ui_bug

Fix drawing of start line | 2018-07-20 22:21:19 | af96577a7d19e4df9f63d95fd9c3bfd2adcddb5d

Avoid Toast crashes

Showing a toast can crash on API 25 because the Window Manager can throw a BadTokenException when addView is called.

This change fixes it by configuring the toast manually and calling the window manager directly. This is based on https://github.com/pyricau/frenchtoast/blob/master/frenchtoast/src/main/java/frenchtoast/Mixture.java#L49 .

Fixes #844 | 2018-07-20 16:11:22 | c9ebc5cf5099c093bde5d3309b2692cb0e2016d8

Fixing setup bug | 2018-06-28 04:07:09 | 505933817cf6e2eb0dad4a78d4c7c35a072b9868

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

LeakSentry can be disabled

LeakCanary has an enabled config option. Default is on in debug builds off in release builds.

Fixes #1327 | 2019-05-04 17:51:23 | 742746cb3de15b91d00f18a5d82cd5c50b8c1948

Revert "fix trailing spaces per checkstyle"

This reverts commit ff17f879ec92ec326f8b1c6b7b8d77a5266d6622. | 2019-05-04 08:04:21 | 03136ca7dc1680299d710f79ca885412a1564144

Add test coverage for heap analysis (#1329)

* Fixed bug when reachability inspectors conflicts (reachable should win and erase unreachable)
* Added back support for leaking instances being empty objects, strings, primitive arrays or any object that we otherwise don't follow to find shortest paths. | 2019-05-04 07:51:02 | 59558e655d537c7654c411eebfd840773a8b77c9

Introducing exclusion priority (#1317)

* Add segmented FIFO queue

Unified several queues into one segmented FIFO queue. This will enable us to add several levels of priority.

* Introducing exclusion priority

* "excludedLeak" is now known as "won't fix leak", which matches its reality better. It's a leak that is known and real yet we're not fixing.
* Exclusion.alwaysExclude is replaced with Exclusion.status, with 3 possible values: NEVER_REACHABLE, WONT_FIX_LEAK, WEAKLY_REACHABLE.
* The shortest path finder will now follow weak references after all other paths have been exhausted.
* Removed class exclusion, was confusing, replaced with less lazy approach of listing fields to exclude
* VIEWLOCATIONHOLDER_ROOT should not have been always excluded, fixed.

Fixes #1173 ... well kinda. Instead of "non leaking retained instances", LeakCanary will report weakly reachable traces. Not sure if that'll help but it's a foundation we can build on. | 2019-04-30 17:44:15 | b0eedc553995e354e2382b3378bf0348801cd3c5

AllFieldsLabeler & cleanups (#1316)

* Add new optional labeler that prints all fields (useful for debugging)
* Move deprecated AnalysisResult to perflib
* Made DefaultAnalysisResultListener an object | 2019-04-30 07:08:29 | b9ee5356db265412db39c4c341880f305fbf2c76

fix format | 2019-04-22 06:25:09 | 4a2b158913e5a9eb0d5c6fdfbf949a80fc1b2c6b

Rename default to perflib and experimental to default (#1282)

* Remove experimental from module names

* Remove experimental prefix, add perflib prefix:

* update docs | 2019-04-19 06:01:39 | 425a9f24deb72691b02cdc85f80d177c05afebc5

fix list | 2019-04-18 21:55:43 | 8e3f9d26e8d3555bf934b99ac062aabc3aba528f

fix broken master | 2019-04-10 15:00:30 | f067ae53e050c5f52f47237440a6ac7eee3ca94c

fix broken build due to typo | 2019-04-10 05:44:19 | 7d4ddb4ffe3c9b0f30a84848675452dded0d4115

Leaking information aligned below simple class name. (#1258)

Also fixed issue where extraString + exclusionString were showing after the squiggly line.

Before: 
``` 
┬
├─ java.lang.Thread
│                 Leaking: NO (it's a GC root)
│                 ↓ thread Thread.<Java Local>
│                                ~~~~~~~~~~~~~ (named 'Thread-4')
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                 Leaking: UNKNOWN
│                 ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                     ~~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) 
```
After: 
``` 
┬
├─ java.lang.Thread
│            Leaking: NO (it's a GC root)
│            ↓ thread Thread.<Java Local> (named 'Thread-4')
│                            ~~~~~~~~~~~~
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                         Leaking: UNKNOWN
│                         ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                              ~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) ``` | 2019-04-05 20:11:47 | a938855585c7cf2522ffbd143d4bb66a234eea66

Add share to Stack Overflow button when viewing a leak (#1252)

* Add share to Stack Overflow button when viewing a leak

* Add question tag, lengthen toast and fix build failure. | 2019-04-04 20:49:50 | 8724d2aaffc07904517a3b823867802ca43233ae

Check if serviceInfo.processName is null. When LeakCanary runs on a seperate process and that process for some reason does not have a assigned processName, then we will crash on a NullPointerException. Also a debug log explaining this. (#1225) | 2019-04-01 19:20:40 | 3efc43608ed71dc20b0ad1e0e80e33d15249666f

fix master broken | 2019-04-01 19:07:27 | fe42130029174681a708b7d8622412efbaf81e73

fix trailing spaces per checkstyle | 2019-03-29 22:34:58 | ff17f879ec92ec326f8b1c6b7b8d77a5266d6622

Fix GC Root bugs that missed leaks (#1168)

In Perflib, Snapshot.getGcRoots() only returns the GC roots from the first heap. Based on empirical evidence, it seems like Android has 4 heaps, and the GC Roots used to only be in the first heap, but more recent versions of Android have GC Roots in other heaps as well.

This means LeakCanary would sometimes show "No Leak Found" when there actually was a leak.

Fixes #1163 | 2019-01-10 23:32:27 | 64b6e5a41796ae1587c50c8cc860cea25f28f382

fix typo | 2018-10-17 00:43:01 | 044b1e4827bc71ec008dc3f7e43c78f58885f1e1

Fix LeakCanary toasting (#1116)

- Prior attempts to get it to work with the application context turned out to be buggy.
- This makes LeakCanary use whatever the current resumed activity is, if any.
- If there is no resumed activity, then the toast isn't displayed.

This supersedes #1080 | 2018-10-16 13:23:14 | 0e39e2eea79bc05bf7147a4074dd7163f7c401ff

fix the wrong word (#1111) | 2018-10-16 01:25:28 | 636b9b6c2b39c0c887c9ed78e904239db9bc131e

Merge pull request #1104 from IlyaGulya/bug/travis-ci-cache-fix

Fix travis caching and improve build time. | 2018-09-22 21:25:59 | 344728b906daf6d010f66bdf4ccc29ad8fedede5

Error prone 2.3.1 + suggested fix and specify version

See http://errorprone.info/bugpattern/StringSplitter | 2018-08-22 07:37:33 | a6b6960d73a1da9661f4e85254570bf5f867f954

Merge pull request #1089 from hzsweers/z/fixAnother

Quick followup to #1088 | 2018-08-22 03:15:15 | be973f5f5da6a3516aedab98e639690697617747

Merge pull request #1087 from Goddchen/patch-2

Updated german translation | 2018-08-20 13:52:47 | b43c279b3e1623c193e1dc81955527f70e93f822

Merge pull request #1063 from javmarina/patch-1

Fixed wrong versions in AndroidExcludedRefs | 2018-07-25 18:31:55 | 3b4ebe3e2571377f93e9a6976e021324502a0f78

Fixed wrong versions in AndroidExcludedRefs

Commit https://android.googlesource.com/platform/frameworks/base/+/27db46850b708070452c0ce49daf5f79503fbde6 introduced this issue. This commit was first included in Jelly Bean 4.3 (JELLY_BEAN_MR2), not Jelly Bean 4.1 (JELLY_BEAN)
Commit https://android.googlesource.com/platform/frameworks/base/+/5200e1cb07190a1f6874d72a4561064cad3ee3e0 fixes this issue and was first included in Oreo 8.0 (O). Nougat still has this memory leak. | 2018-07-24 18:24:59 | e4778b25f2c6e65ebc485d255e38586c7d45ec97

Merge pull request #1057 from square/py/ui_bug

Fix drawing of start line | 2018-07-20 22:21:19 | af96577a7d19e4df9f63d95fd9c3bfd2adcddb5d

Avoid Toast crashes

Showing a toast can crash on API 25 because the Window Manager can throw a BadTokenException when addView is called.

This change fixes it by configuring the toast manually and calling the window manager directly. This is based on https://github.com/pyricau/frenchtoast/blob/master/frenchtoast/src/main/java/frenchtoast/Mixture.java#L49 .

Fixes #844 | 2018-07-20 16:11:22 | c9ebc5cf5099c093bde5d3309b2692cb0e2016d8

Fixing setup bug | 2018-06-28 04:07:09 | 505933817cf6e2eb0dad4a78d4c7c35a072b9868

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

Fixing setup bug | 2018-06-28 04:07:09 | 505933817cf6e2eb0dad4a78d4c7c35a072b9868

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

Documenting public APIs (#1476)

Also fixed naming and other things that weren't right.

Fixes #1474 | 2019-07-19 06:57:25 | 41c69a5d424b4236114c5ce1b077afdad38e57a5

Adding CLI for LeakCanary (#1456)

Example usage:
```
./gradlew leakcanary-cli:run --args='analyze-process com.example.leakcanary'

./gradlew leakcanary-cli:run --args='dump-process com.example.leakcanary'

./gradlew leakcanary-cli:run --args='analyze-file /path/to/heapdump.hprof'
```

Also fixed a bug in ShortestPathFinder which did not ignore null references in object arrays | 2019-07-11 19:11:30 | eded1c96e84f37393857ba4de2580aec784b2391

Behavior change & bugfixes for retained count notification (#1433)

* Bugfix: when tapping the "dump heap" notification, if the GC found no retained instance we didn't use a distinct notification id to communicate that, and then soon after we'd dismiss the notification that let's the user know there is no retained instances on tap.
* Bugfix: we weren't running the GC when checking for retained instances and the count was under the threshold
* Change: we now update the notification and keep it around for 30 seconds when the count goes to 0
* Change: the "no retained instance" notification that shows on tap is identical and also auto dismisses after 30 seconds.
* Change: we're checking for retained references (and running the GC) every 2 seconds instead of 5.

Fixes #1427 | 2019-07-03 20:55:47 | 968083a915343d881bd63e40587c070fde543732

Update how to fix a leak | 2019-06-25 05:46:56 | 177e7fd12933d99eca7a526851c53e598a03bf90

Text rendering tests (#1378)

* Added test coverage for text rendering
* Fixed bug: labels were not rendered on the last node (leaking instance)
* Matched exclusions are now rendered on their own line

Fixes #1375
Fixes #1350 | 2019-06-04 09:32:11 | 1926cb1db73f9583e11c557dbf2e5d46e3896a6e

Thread name based exclusions (#1353)

* Readded support for exclusions of local variable based on thread names
* Renamed ThreadExclusion to JavaLocalExclusion
* Fixed bug: KeyedWeakReference was not always ignored because its superclass is has a weakly reachable exclusion.
* Fixed bug: all root nodes had the same visit order as the first non root enqueued item, making it possible for a non root node to be dequeued before we're done with all roots.
* Redded gc root sorting
* Added tests to cover all uncovered bugs
* Added support for parsing StackFrameRecord

Fixes #1339 | 2019-05-20 13:17:18 | 6c2ee609efda323e88a4964d31fc5a5f0532f776

Reachability => LeakStatus (#1340)

* Combined leaking information from inspectors to solving conflicts while keeping all reasons
* Made reason from view leak inspector more obvious, and added label data about internals
* Moved reachability into LeakTraceElement
* Reachability renamed to LeakNodeStatus and leaking / not leaking
* ReachabilityInspector and Labeler are now functions with type aliases

Related to #1336: should fix the crash, though it's still unclear why AppCompatButton was a gc root there. | 2019-05-07 14:56:59 | 01210bbbfaecb3bcb6057c62b2195366d3bfa4f9

Revamp notifications (#1335)

* New notification that shows the count of retained instances. Tapping it triggers a heap dump. Fixes #1325
* Notifications are now split into two channels: default for results, and low for everything else.
* New config options: LeakCanary.config.dumpHeapWhenDebugging (default false) and LeakCanary.config.retainedVisibleThreshold (default 5)
* Replaced notification int constants and timestamps with resource ids.
* Don't show background notifications in instant apps (#1197) | 2019-05-05 16:38:26 | b14d9bc9c0a87119137bc0998bdec9314186dfcf

Highlighting new leaks (#1334)

New leaks are leaks that have a leak group that doesn't exist in any prior analysis.

* The notification now reports the count of leaks, with a split of new, known, and won't fix.
* The analysis success screen shows new leaks
* Moved description prefixes to be computed rather than inserted in the DB

Fixes #1328 | 2019-05-05 09:37:38 | f9a0518d4ddd69b782b6302caa3e3039787038e4

LeakSentry can be disabled (#1332)

LeakCanary has an enabled config option. Default is on in debug builds off in release builds.

Fixes #1327 | 2019-05-04 17:52:47 | f74f60901f34c751e8b8798d626678aa6233c893

Revert "fix trailing spaces per checkstyle"

This reverts commit ff17f879ec92ec326f8b1c6b7b8d77a5266d6622. | 2019-05-04 08:04:21 | 03136ca7dc1680299d710f79ca885412a1564144

Add test coverage for heap analysis (#1329)

* Fixed bug when reachability inspectors conflicts (reachable should win and erase unreachable)
* Added back support for leaking instances being empty objects, strings, primitive arrays or any object that we otherwise don't follow to find shortest paths. | 2019-05-04 07:51:02 | 59558e655d537c7654c411eebfd840773a8b77c9

Introducing exclusion priority (#1317)

* Add segmented FIFO queue

Unified several queues into one segmented FIFO queue. This will enable us to add several levels of priority.

* Introducing exclusion priority

* "excludedLeak" is now known as "won't fix leak", which matches its reality better. It's a leak that is known and real yet we're not fixing.
* Exclusion.alwaysExclude is replaced with Exclusion.status, with 3 possible values: NEVER_REACHABLE, WONT_FIX_LEAK, WEAKLY_REACHABLE.
* The shortest path finder will now follow weak references after all other paths have been exhausted.
* Removed class exclusion, was confusing, replaced with less lazy approach of listing fields to exclude
* VIEWLOCATIONHOLDER_ROOT should not have been always excluded, fixed.

Fixes #1173 ... well kinda. Instead of "non leaking retained instances", LeakCanary will report weakly reachable traces. Not sure if that'll help but it's a foundation we can build on. | 2019-04-30 17:44:15 | b0eedc553995e354e2382b3378bf0348801cd3c5

AllFieldsLabeler & cleanups (#1316)

* Add new optional labeler that prints all fields (useful for debugging)
* Move deprecated AnalysisResult to perflib
* Made DefaultAnalysisResultListener an object | 2019-04-30 07:08:29 | b9ee5356db265412db39c4c341880f305fbf2c76

fix format | 2019-04-22 06:25:09 | 4a2b158913e5a9eb0d5c6fdfbf949a80fc1b2c6b

Rename default to perflib and experimental to default (#1282)

* Remove experimental from module names

* Remove experimental prefix, add perflib prefix:

* update docs | 2019-04-19 06:01:39 | 425a9f24deb72691b02cdc85f80d177c05afebc5

fix list | 2019-04-18 21:55:43 | 8e3f9d26e8d3555bf934b99ac062aabc3aba528f

fix broken master | 2019-04-10 15:00:30 | f067ae53e050c5f52f47237440a6ac7eee3ca94c

fix broken build due to typo | 2019-04-10 05:44:19 | 7d4ddb4ffe3c9b0f30a84848675452dded0d4115

Leaking information aligned below simple class name. (#1258)

Also fixed issue where extraString + exclusionString were showing after the squiggly line.

Before: 
``` 
┬
├─ java.lang.Thread
│                 Leaking: NO (it's a GC root)
│                 ↓ thread Thread.<Java Local>
│                                ~~~~~~~~~~~~~ (named 'Thread-4')
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                 Leaking: UNKNOWN
│                 ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                     ~~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) 
```
After: 
``` 
┬
├─ java.lang.Thread
│            Leaking: NO (it's a GC root)
│            ↓ thread Thread.<Java Local> (named 'Thread-4')
│                            ~~~~~~~~~~~~
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                         Leaking: UNKNOWN
│                         ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                              ~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) ``` | 2019-04-05 20:11:47 | a938855585c7cf2522ffbd143d4bb66a234eea66

Add share to Stack Overflow button when viewing a leak (#1252)

* Add share to Stack Overflow button when viewing a leak

* Add question tag, lengthen toast and fix build failure. | 2019-04-04 20:49:50 | 8724d2aaffc07904517a3b823867802ca43233ae

Check if serviceInfo.processName is null. When LeakCanary runs on a seperate process and that process for some reason does not have a assigned processName, then we will crash on a NullPointerException. Also a debug log explaining this. (#1225) | 2019-04-01 19:20:40 | 3efc43608ed71dc20b0ad1e0e80e33d15249666f

fix master broken | 2019-04-01 19:07:27 | fe42130029174681a708b7d8622412efbaf81e73

fix trailing spaces per checkstyle | 2019-03-29 22:34:58 | ff17f879ec92ec326f8b1c6b7b8d77a5266d6622

Fix GC Root bugs that missed leaks (#1168)

In Perflib, Snapshot.getGcRoots() only returns the GC roots from the first heap. Based on empirical evidence, it seems like Android has 4 heaps, and the GC Roots used to only be in the first heap, but more recent versions of Android have GC Roots in other heaps as well.

This means LeakCanary would sometimes show "No Leak Found" when there actually was a leak.

Fixes #1163 | 2019-01-10 23:32:27 | 64b6e5a41796ae1587c50c8cc860cea25f28f382

fix typo | 2018-10-17 00:43:01 | 044b1e4827bc71ec008dc3f7e43c78f58885f1e1

Fix LeakCanary toasting (#1116)

- Prior attempts to get it to work with the application context turned out to be buggy.
- This makes LeakCanary use whatever the current resumed activity is, if any.
- If there is no resumed activity, then the toast isn't displayed.

This supersedes #1080 | 2018-10-16 13:23:14 | 0e39e2eea79bc05bf7147a4074dd7163f7c401ff

fix the wrong word (#1111) | 2018-10-16 01:25:28 | 636b9b6c2b39c0c887c9ed78e904239db9bc131e

Merge pull request #1104 from IlyaGulya/bug/travis-ci-cache-fix

Fix travis caching and improve build time. | 2018-09-22 21:25:59 | 344728b906daf6d010f66bdf4ccc29ad8fedede5

Error prone 2.3.1 + suggested fix and specify version

See http://errorprone.info/bugpattern/StringSplitter | 2018-08-22 07:37:33 | a6b6960d73a1da9661f4e85254570bf5f867f954

Merge pull request #1089 from hzsweers/z/fixAnother

Quick followup to #1088 | 2018-08-22 03:15:15 | be973f5f5da6a3516aedab98e639690697617747

Merge pull request #1087 from Goddchen/patch-2

Updated german translation | 2018-08-20 13:52:47 | b43c279b3e1623c193e1dc81955527f70e93f822

Merge pull request #1063 from javmarina/patch-1

Fixed wrong versions in AndroidExcludedRefs | 2018-07-25 18:31:55 | 3b4ebe3e2571377f93e9a6976e021324502a0f78

Fixed wrong versions in AndroidExcludedRefs

Commit https://android.googlesource.com/platform/frameworks/base/+/27db46850b708070452c0ce49daf5f79503fbde6 introduced this issue. This commit was first included in Jelly Bean 4.3 (JELLY_BEAN_MR2), not Jelly Bean 4.1 (JELLY_BEAN)
Commit https://android.googlesource.com/platform/frameworks/base/+/5200e1cb07190a1f6874d72a4561064cad3ee3e0 fixes this issue and was first included in Oreo 8.0 (O). Nougat still has this memory leak. | 2018-07-24 18:24:59 | e4778b25f2c6e65ebc485d255e38586c7d45ec97

Merge pull request #1057 from square/py/ui_bug

Fix drawing of start line | 2018-07-20 22:21:19 | af96577a7d19e4df9f63d95fd9c3bfd2adcddb5d

Avoid Toast crashes

Showing a toast can crash on API 25 because the Window Manager can throw a BadTokenException when addView is called.

This change fixes it by configuring the toast manually and calling the window manager directly. This is based on https://github.com/pyricau/frenchtoast/blob/master/frenchtoast/src/main/java/frenchtoast/Mixture.java#L49 .

Fixes #844 | 2018-07-20 16:11:22 | c9ebc5cf5099c093bde5d3309b2692cb0e2016d8

Fixing setup bug | 2018-06-28 04:07:09 | 505933817cf6e2eb0dad4a78d4c7c35a072b9868

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

fix changelog | 2019-11-25 19:32:41 | 50ae3ba7558e5a3f83fc11b4d17a281f072ff078

Fix bug in handling JNI roots (#1636)

* When adding support for native reference leaks (879ab7c) there was a missing bracket in an if/else branch that led to all native gc roots being ignored.

Fixes #1634 | 2019-11-25 19:00:23 | aff338544b5eebbb0b3c792c628cca11fa888373

fix typos | 2019-11-19 03:58:07 | 25b0df0da4f6e93dedcd90342c9cd1d0eab080ed

Merge pull request #1596 from fernandospr/patch-1

Update blog-articles.md | 2019-10-04 16:35:24 | e65236dae7c5827b7c9f64c19c8b1a16ea19e5a7

Merge pull request #1598 from PaulWoitaschek/patch-1

Fixed the german string placeholder for sharing the heap dump | 2019-10-03 16:16:23 | 029f28eefd7aa966520ac3649fd2688732c02867

Fix crash when pressing home from root screen (#1578)

This bug only happens on older Android devices.

Fixes #1555 | 2019-09-11 01:51:06 | 274f58f96e8de7dcd3000c06ba3e2b50e427747d

Merge pull request #1559 from bric3/fix-primitive-array-dump-skip

Fixes the primitive array dump record skipping | 2019-09-09 22:16:57 | c0fd4d812cb8d6c5723231e501c121da2af86f06

Parsing and applying proguard mapping during heap analysis (#1542)

* Parsing and applying proguard mapping during heap analysis

* Parsing and applying proguard mapping during heap analysis

* Rebased onto master

* Post review changes and updated shark-cli to support mapping files

* Post review fixes

* Moving proguard mapping reader out of the analyzer and formatting fixes | 2019-08-30 16:54:20 | 66182a52069d9be59d0af6220aa9afd74218aa9b

fix images | 2019-08-27 20:02:50 | 8f5030e9faa8690217e1bd436274a3de5b9d3fb3

fix image links in docs | 2019-08-27 19:59:20 | edca56a947278508350bfa5dd33d3fa10699001f

Merge pull request #1549 from Armaxis/patch-1

Added section about using Detekt to Contributing | 2019-08-24 22:16:26 | c923d14909888860a99d5899af17f5b52c9b000f

Revert "Replaced accessor with a call to setter to fix the build issue"

This reverts commit 82db0398 | 2019-08-17 02:21:08 | c570cb9b0fd7bd7fcc88c4d3b529df8837e98fdc

Replaced accessor with a call to setter to fix the build issue | 2019-08-16 04:32:25 | 82db039843303044f91d36ba7c43595ab59bacd5

fix typo | 2019-08-02 15:31:17 | a2452f61e78e689efb59adaf71384d74447578b0

Add / fix android inspectors (#1491)

* Added MortarScope and ViewRootImpl inspectors
* Fixed the ContextWrapper inspector

Fixes #1490
Fixes #1389 | 2019-07-25 22:50:48 | 915f8359690a016a09e66608a041454b9c8c52cb

Documenting public APIs (#1476)

Also fixed naming and other things that weren't right.

Fixes #1474 | 2019-07-19 06:57:25 | 41c69a5d424b4236114c5ce1b077afdad38e57a5

Adding CLI for LeakCanary (#1456)

Example usage:
```
./gradlew leakcanary-cli:run --args='analyze-process com.example.leakcanary'

./gradlew leakcanary-cli:run --args='dump-process com.example.leakcanary'

./gradlew leakcanary-cli:run --args='analyze-file /path/to/heapdump.hprof'
```

Also fixed a bug in ShortestPathFinder which did not ignore null references in object arrays | 2019-07-11 19:11:30 | eded1c96e84f37393857ba4de2580aec784b2391

Behavior change & bugfixes for retained count notification (#1433)

* Bugfix: when tapping the "dump heap" notification, if the GC found no retained instance we didn't use a distinct notification id to communicate that, and then soon after we'd dismiss the notification that let's the user know there is no retained instances on tap.
* Bugfix: we weren't running the GC when checking for retained instances and the count was under the threshold
* Change: we now update the notification and keep it around for 30 seconds when the count goes to 0
* Change: the "no retained instance" notification that shows on tap is identical and also auto dismisses after 30 seconds.
* Change: we're checking for retained references (and running the GC) every 2 seconds instead of 5.

Fixes #1427 | 2019-07-03 20:55:47 | 968083a915343d881bd63e40587c070fde543732

Update how to fix a leak | 2019-06-25 05:46:56 | 177e7fd12933d99eca7a526851c53e598a03bf90

Text rendering tests (#1378)

* Added test coverage for text rendering
* Fixed bug: labels were not rendered on the last node (leaking instance)
* Matched exclusions are now rendered on their own line

Fixes #1375
Fixes #1350 | 2019-06-04 09:32:11 | 1926cb1db73f9583e11c557dbf2e5d46e3896a6e

Thread name based exclusions (#1353)

* Readded support for exclusions of local variable based on thread names
* Renamed ThreadExclusion to JavaLocalExclusion
* Fixed bug: KeyedWeakReference was not always ignored because its superclass is has a weakly reachable exclusion.
* Fixed bug: all root nodes had the same visit order as the first non root enqueued item, making it possible for a non root node to be dequeued before we're done with all roots.
* Redded gc root sorting
* Added tests to cover all uncovered bugs
* Added support for parsing StackFrameRecord

Fixes #1339 | 2019-05-20 13:17:18 | 6c2ee609efda323e88a4964d31fc5a5f0532f776

Reachability => LeakStatus (#1340)

* Combined leaking information from inspectors to solving conflicts while keeping all reasons
* Made reason from view leak inspector more obvious, and added label data about internals
* Moved reachability into LeakTraceElement
* Reachability renamed to LeakNodeStatus and leaking / not leaking
* ReachabilityInspector and Labeler are now functions with type aliases

Related to #1336: should fix the crash, though it's still unclear why AppCompatButton was a gc root there. | 2019-05-07 14:56:59 | 01210bbbfaecb3bcb6057c62b2195366d3bfa4f9

Revamp notifications (#1335)

* New notification that shows the count of retained instances. Tapping it triggers a heap dump. Fixes #1325
* Notifications are now split into two channels: default for results, and low for everything else.
* New config options: LeakCanary.config.dumpHeapWhenDebugging (default false) and LeakCanary.config.retainedVisibleThreshold (default 5)
* Replaced notification int constants and timestamps with resource ids.
* Don't show background notifications in instant apps (#1197) | 2019-05-05 16:38:26 | b14d9bc9c0a87119137bc0998bdec9314186dfcf

Highlighting new leaks (#1334)

New leaks are leaks that have a leak group that doesn't exist in any prior analysis.

* The notification now reports the count of leaks, with a split of new, known, and won't fix.
* The analysis success screen shows new leaks
* Moved description prefixes to be computed rather than inserted in the DB

Fixes #1328 | 2019-05-05 09:37:38 | f9a0518d4ddd69b782b6302caa3e3039787038e4

LeakSentry can be disabled (#1332)

LeakCanary has an enabled config option. Default is on in debug builds off in release builds.

Fixes #1327 | 2019-05-04 17:52:47 | f74f60901f34c751e8b8798d626678aa6233c893

Revert "fix trailing spaces per checkstyle"

This reverts commit ff17f879ec92ec326f8b1c6b7b8d77a5266d6622. | 2019-05-04 08:04:21 | 03136ca7dc1680299d710f79ca885412a1564144

Add test coverage for heap analysis (#1329)

* Fixed bug when reachability inspectors conflicts (reachable should win and erase unreachable)
* Added back support for leaking instances being empty objects, strings, primitive arrays or any object that we otherwise don't follow to find shortest paths. | 2019-05-04 07:51:02 | 59558e655d537c7654c411eebfd840773a8b77c9

Introducing exclusion priority (#1317)

* Add segmented FIFO queue

Unified several queues into one segmented FIFO queue. This will enable us to add several levels of priority.

* Introducing exclusion priority

* "excludedLeak" is now known as "won't fix leak", which matches its reality better. It's a leak that is known and real yet we're not fixing.
* Exclusion.alwaysExclude is replaced with Exclusion.status, with 3 possible values: NEVER_REACHABLE, WONT_FIX_LEAK, WEAKLY_REACHABLE.
* The shortest path finder will now follow weak references after all other paths have been exhausted.
* Removed class exclusion, was confusing, replaced with less lazy approach of listing fields to exclude
* VIEWLOCATIONHOLDER_ROOT should not have been always excluded, fixed.

Fixes #1173 ... well kinda. Instead of "non leaking retained instances", LeakCanary will report weakly reachable traces. Not sure if that'll help but it's a foundation we can build on. | 2019-04-30 17:44:15 | b0eedc553995e354e2382b3378bf0348801cd3c5

AllFieldsLabeler & cleanups (#1316)

* Add new optional labeler that prints all fields (useful for debugging)
* Move deprecated AnalysisResult to perflib
* Made DefaultAnalysisResultListener an object | 2019-04-30 07:08:29 | b9ee5356db265412db39c4c341880f305fbf2c76

fix format | 2019-04-22 06:25:09 | 4a2b158913e5a9eb0d5c6fdfbf949a80fc1b2c6b

Rename default to perflib and experimental to default (#1282)

* Remove experimental from module names

* Remove experimental prefix, add perflib prefix:

* update docs | 2019-04-19 06:01:39 | 425a9f24deb72691b02cdc85f80d177c05afebc5

fix list | 2019-04-18 21:55:43 | 8e3f9d26e8d3555bf934b99ac062aabc3aba528f

fix broken master | 2019-04-10 15:00:30 | f067ae53e050c5f52f47237440a6ac7eee3ca94c

fix broken build due to typo | 2019-04-10 05:44:19 | 7d4ddb4ffe3c9b0f30a84848675452dded0d4115

Leaking information aligned below simple class name. (#1258)

Also fixed issue where extraString + exclusionString were showing after the squiggly line.

Before: 
``` 
┬
├─ java.lang.Thread
│                 Leaking: NO (it's a GC root)
│                 ↓ thread Thread.<Java Local>
│                                ~~~~~~~~~~~~~ (named 'Thread-4')
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                 Leaking: UNKNOWN
│                 ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                     ~~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) 
```
After: 
``` 
┬
├─ java.lang.Thread
│            Leaking: NO (it's a GC root)
│            ↓ thread Thread.<Java Local> (named 'Thread-4')
│                            ~~~~~~~~~~~~
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                         Leaking: UNKNOWN
│                         ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                              ~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) ``` | 2019-04-05 20:11:47 | a938855585c7cf2522ffbd143d4bb66a234eea66

Add share to Stack Overflow button when viewing a leak (#1252)

* Add share to Stack Overflow button when viewing a leak

* Add question tag, lengthen toast and fix build failure. | 2019-04-04 20:49:50 | 8724d2aaffc07904517a3b823867802ca43233ae

Check if serviceInfo.processName is null. When LeakCanary runs on a seperate process and that process for some reason does not have a assigned processName, then we will crash on a NullPointerException. Also a debug log explaining this. (#1225) | 2019-04-01 19:20:40 | 3efc43608ed71dc20b0ad1e0e80e33d15249666f

fix master broken | 2019-04-01 19:07:27 | fe42130029174681a708b7d8622412efbaf81e73

fix trailing spaces per checkstyle | 2019-03-29 22:34:58 | ff17f879ec92ec326f8b1c6b7b8d77a5266d6622

Fix GC Root bugs that missed leaks (#1168)

In Perflib, Snapshot.getGcRoots() only returns the GC roots from the first heap. Based on empirical evidence, it seems like Android has 4 heaps, and the GC Roots used to only be in the first heap, but more recent versions of Android have GC Roots in other heaps as well.

This means LeakCanary would sometimes show "No Leak Found" when there actually was a leak.

Fixes #1163 | 2019-01-10 23:32:27 | 64b6e5a41796ae1587c50c8cc860cea25f28f382

fix typo | 2018-10-17 00:43:01 | 044b1e4827bc71ec008dc3f7e43c78f58885f1e1

Fix LeakCanary toasting (#1116)

- Prior attempts to get it to work with the application context turned out to be buggy.
- This makes LeakCanary use whatever the current resumed activity is, if any.
- If there is no resumed activity, then the toast isn't displayed.

This supersedes #1080 | 2018-10-16 13:23:14 | 0e39e2eea79bc05bf7147a4074dd7163f7c401ff

fix the wrong word (#1111) | 2018-10-16 01:25:28 | 636b9b6c2b39c0c887c9ed78e904239db9bc131e

Merge pull request #1104 from IlyaGulya/bug/travis-ci-cache-fix

Fix travis caching and improve build time. | 2018-09-22 21:25:59 | 344728b906daf6d010f66bdf4ccc29ad8fedede5

Error prone 2.3.1 + suggested fix and specify version

See http://errorprone.info/bugpattern/StringSplitter | 2018-08-22 07:37:33 | a6b6960d73a1da9661f4e85254570bf5f867f954

Merge pull request #1089 from hzsweers/z/fixAnother

Quick followup to #1088 | 2018-08-22 03:15:15 | be973f5f5da6a3516aedab98e639690697617747

Merge pull request #1087 from Goddchen/patch-2

Updated german translation | 2018-08-20 13:52:47 | b43c279b3e1623c193e1dc81955527f70e93f822

Merge pull request #1063 from javmarina/patch-1

Fixed wrong versions in AndroidExcludedRefs | 2018-07-25 18:31:55 | 3b4ebe3e2571377f93e9a6976e021324502a0f78

Fixed wrong versions in AndroidExcludedRefs

Commit https://android.googlesource.com/platform/frameworks/base/+/27db46850b708070452c0ce49daf5f79503fbde6 introduced this issue. This commit was first included in Jelly Bean 4.3 (JELLY_BEAN_MR2), not Jelly Bean 4.1 (JELLY_BEAN)
Commit https://android.googlesource.com/platform/frameworks/base/+/5200e1cb07190a1f6874d72a4561064cad3ee3e0 fixes this issue and was first included in Oreo 8.0 (O). Nougat still has this memory leak. | 2018-07-24 18:24:59 | e4778b25f2c6e65ebc485d255e38586c7d45ec97

Merge pull request #1057 from square/py/ui_bug

Fix drawing of start line | 2018-07-20 22:21:19 | af96577a7d19e4df9f63d95fd9c3bfd2adcddb5d

Avoid Toast crashes

Showing a toast can crash on API 25 because the Window Manager can throw a BadTokenException when addView is called.

This change fixes it by configuring the toast manually and calling the window manager directly. This is based on https://github.com/pyricau/frenchtoast/blob/master/frenchtoast/src/main/java/frenchtoast/Mixture.java#L49 .

Fixes #844 | 2018-07-20 16:11:22 | c9ebc5cf5099c093bde5d3309b2692cb0e2016d8

Fixing setup bug | 2018-06-28 04:07:09 | 505933817cf6e2eb0dad4a78d4c7c35a072b9868

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

fix broken master | 2019-04-10 15:00:30 | f067ae53e050c5f52f47237440a6ac7eee3ca94c

fix broken build due to typo | 2019-04-10 05:44:19 | 7d4ddb4ffe3c9b0f30a84848675452dded0d4115

Leaking information aligned below simple class name. (#1258)

Also fixed issue where extraString + exclusionString were showing after the squiggly line.

Before: 
``` 
┬
├─ java.lang.Thread
│                 Leaking: NO (it's a GC root)
│                 ↓ thread Thread.<Java Local>
│                                ~~~~~~~~~~~~~ (named 'Thread-4')
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                 Leaking: UNKNOWN
│                 ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                     ~~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) 
```
After: 
``` 
┬
├─ java.lang.Thread
│            Leaking: NO (it's a GC root)
│            ↓ thread Thread.<Java Local> (named 'Thread-4')
│                            ~~~~~~~~~~~~
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                         Leaking: UNKNOWN
│                         ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                              ~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) ``` | 2019-04-05 20:11:47 | a938855585c7cf2522ffbd143d4bb66a234eea66

Add share to Stack Overflow button when viewing a leak (#1252)

* Add share to Stack Overflow button when viewing a leak

* Add question tag, lengthen toast and fix build failure. | 2019-04-04 20:49:50 | 8724d2aaffc07904517a3b823867802ca43233ae

Check if serviceInfo.processName is null. When LeakCanary runs on a seperate process and that process for some reason does not have a assigned processName, then we will crash on a NullPointerException. Also a debug log explaining this. (#1225) | 2019-04-01 19:20:40 | 3efc43608ed71dc20b0ad1e0e80e33d15249666f

fix master broken | 2019-04-01 19:07:27 | fe42130029174681a708b7d8622412efbaf81e73

Fix GC Root bugs that missed leaks (#1168)

In Perflib, Snapshot.getGcRoots() only returns the GC roots from the first heap. Based on empirical evidence, it seems like Android has 4 heaps, and the GC Roots used to only be in the first heap, but more recent versions of Android have GC Roots in other heaps as well.

This means LeakCanary would sometimes show "No Leak Found" when there actually was a leak.

Fixes #1163 | 2019-01-10 23:32:27 | 64b6e5a41796ae1587c50c8cc860cea25f28f382

fix typo | 2018-10-17 00:43:01 | 044b1e4827bc71ec008dc3f7e43c78f58885f1e1

Fix LeakCanary toasting (#1116)

- Prior attempts to get it to work with the application context turned out to be buggy.
- This makes LeakCanary use whatever the current resumed activity is, if any.
- If there is no resumed activity, then the toast isn't displayed.

This supersedes #1080 | 2018-10-16 13:23:14 | 0e39e2eea79bc05bf7147a4074dd7163f7c401ff

fix the wrong word (#1111) | 2018-10-16 01:25:28 | 636b9b6c2b39c0c887c9ed78e904239db9bc131e

Merge pull request #1104 from IlyaGulya/bug/travis-ci-cache-fix

Fix travis caching and improve build time. | 2018-09-22 21:25:59 | 344728b906daf6d010f66bdf4ccc29ad8fedede5

Error prone 2.3.1 + suggested fix and specify version

See http://errorprone.info/bugpattern/StringSplitter | 2018-08-22 07:37:33 | a6b6960d73a1da9661f4e85254570bf5f867f954

Merge pull request #1089 from hzsweers/z/fixAnother

Quick followup to #1088 | 2018-08-22 03:15:15 | be973f5f5da6a3516aedab98e639690697617747

Merge pull request #1087 from Goddchen/patch-2

Updated german translation | 2018-08-20 13:52:47 | b43c279b3e1623c193e1dc81955527f70e93f822

Merge pull request #1063 from javmarina/patch-1

Fixed wrong versions in AndroidExcludedRefs | 2018-07-25 18:31:55 | 3b4ebe3e2571377f93e9a6976e021324502a0f78

Fixed wrong versions in AndroidExcludedRefs

Commit https://android.googlesource.com/platform/frameworks/base/+/27db46850b708070452c0ce49daf5f79503fbde6 introduced this issue. This commit was first included in Jelly Bean 4.3 (JELLY_BEAN_MR2), not Jelly Bean 4.1 (JELLY_BEAN)
Commit https://android.googlesource.com/platform/frameworks/base/+/5200e1cb07190a1f6874d72a4561064cad3ee3e0 fixes this issue and was first included in Oreo 8.0 (O). Nougat still has this memory leak. | 2018-07-24 18:24:59 | e4778b25f2c6e65ebc485d255e38586c7d45ec97

Merge pull request #1057 from square/py/ui_bug

Fix drawing of start line | 2018-07-20 22:21:19 | af96577a7d19e4df9f63d95fd9c3bfd2adcddb5d

Avoid Toast crashes

Showing a toast can crash on API 25 because the Window Manager can throw a BadTokenException when addView is called.

This change fixes it by configuring the toast manually and calling the window manager directly. This is based on https://github.com/pyricau/frenchtoast/blob/master/frenchtoast/src/main/java/frenchtoast/Mixture.java#L49 .

Fixes #844 | 2018-07-20 16:11:22 | c9ebc5cf5099c093bde5d3309b2692cb0e2016d8

Fixing setup bug | 2018-06-28 04:07:09 | 505933817cf6e2eb0dad4a78d4c7c35a072b9868

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

Fixing setup bug | 2018-06-28 04:07:09 | 505933817cf6e2eb0dad4a78d4c7c35a072b9868

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

Use "x minutes ago" format for dates (#1675)

Also fixed some of the ordering (leaks types by counts desc, leaks by date desc)

Fixes #1672 | 2019-12-16 23:56:38 | 9fae7ed497e1760abe74cf2c22535fbd51f16331

Gradle plugin that puts proguard mapping file in the apk as an asset (#1589)

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Add unit tests for copy obfuscation file task

* Add recipe describing how to use the plugin

* Add plugin usage instruction

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Rebased onto master

* Add missing test dependencies

* Use lambda function instead of a collection for plugin configuration

* Post code review fixups

* Rename according to code review suggestions

* Fix detekt warning

* Pass empty file if mapping doesn't exist

* Improved recipe

* Code review fixups

* Fix CopyObfuscationMappingFileTask tests

* Code review fixes

* Fix detekt issues

* Add plugin tests

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Rebased onto master

* Use lambda function instead of a collection for plugin configuration

* Post code review fixups

* Rename according to code review suggestions

* Fix detekt warning

* Pass empty file if mapping doesn't exist

* Improved recipe

* Code review fixups

* Fix CopyObfuscationMappingFileTask tests

* Code review fixes

* Fix detekt issues

* Add plugin tests

* Rebased onto master

* Add one more test for plugin

* Try fixing CI tests by reading $ANDROID_HOME value

* Try fixing CI tests by hardcoding android sdk path

* Debugging CI failing test

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Post review fixes

* Debugging failing test on CI

* Try fixing CI tests by hardcoding android sdk path

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debug failing test on CI

* Debug failing test on CI

* Debug failing test on CI

* Debug failing test on CI

* Debug failing test on CI

* Debug failing test on CI

* Use trusty dist in travis config

* Debug failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debug failing CI test

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Prevent GradleRunner from running builds in a separate process

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* sni: modernize travis script. Solve emulator issue.
The build now uses build tools 28 which requires little adjustments
from the original recipe. In the future we can just use the original recipe
Original recipe: https://docs.travis-ci.com/user/languages/android/ | 2019-12-10 06:48:02 | 25a10fcd9f405235de63bd791ea4ae4eb5453924

Fix emulators  (#1667)

* Revert "Fix travis (#1665)"

This reverts commit 00b9bd32d535022800153f34916d4c4667d2a5cd.

* Fix emulators

A recent emulator update breaks a few CI projects.  This PR applies
a fix suggested by Google.

https://issuetracker.google.com/issues/145622251#comment33 | 2019-12-10 05:43:06 | b678e1508e9ef3618ce2c44d44ff733f350d4185

Fix travis (#1665)

According to [this tweet](https://twitter.com/colinwhi/status/1204102384458194944) from @colinrtwhite, Travis is failing due to a bug in the most recent version of the emulator. Pinning the emulator to an older version works around it. This commit steals the fix from https://github.com/coil-kt/coil/pull/195 . | 2019-12-09 19:54:40 | 00b9bd32d535022800153f34916d4c4667d2a5cd

Add ability to customize class used to detect tests (#1654)

Developers should not ship JUnit in their app, even in debug. However, some debug libraries unfortunately ship with JUnit as a dependency (e.g. see https://github.com/square/okhttp/issues/4667).

Developers can change the default to target a different class (e.g assertj) to help LeakCanary detect unit tests, by overriding a public string:

```
  <string name="leak_canary_test_class_name">org.assertj.core.api.Assertions</string>
```

Fixes #1649 | 2019-12-03 02:35:07 | dbbb969d59b066c3f9197ebc3863cc4f54dae5d2

fix changelog | 2019-11-25 19:32:41 | 50ae3ba7558e5a3f83fc11b4d17a281f072ff078

Fix bug in handling JNI roots (#1636)

* When adding support for native reference leaks (879ab7c) there was a missing bracket in an if/else branch that led to all native gc roots being ignored.

Fixes #1634 | 2019-11-25 19:00:23 | aff338544b5eebbb0b3c792c628cca11fa888373

fix typos | 2019-11-19 03:58:07 | 25b0df0da4f6e93dedcd90342c9cd1d0eab080ed

Merge pull request #1596 from fernandospr/patch-1

Update blog-articles.md | 2019-10-04 16:35:24 | e65236dae7c5827b7c9f64c19c8b1a16ea19e5a7

Merge pull request #1598 from PaulWoitaschek/patch-1

Fixed the german string placeholder for sharing the heap dump | 2019-10-03 16:16:23 | 029f28eefd7aa966520ac3649fd2688732c02867

Fix crash when pressing home from root screen (#1578)

This bug only happens on older Android devices.

Fixes #1555 | 2019-09-11 01:51:06 | 274f58f96e8de7dcd3000c06ba3e2b50e427747d

Merge pull request #1559 from bric3/fix-primitive-array-dump-skip

Fixes the primitive array dump record skipping | 2019-09-09 22:16:57 | c0fd4d812cb8d6c5723231e501c121da2af86f06

Parsing and applying proguard mapping during heap analysis (#1542)

* Parsing and applying proguard mapping during heap analysis

* Parsing and applying proguard mapping during heap analysis

* Rebased onto master

* Post review changes and updated shark-cli to support mapping files

* Post review fixes

* Moving proguard mapping reader out of the analyzer and formatting fixes | 2019-08-30 16:54:20 | 66182a52069d9be59d0af6220aa9afd74218aa9b

fix images | 2019-08-27 20:02:50 | 8f5030e9faa8690217e1bd436274a3de5b9d3fb3

fix image links in docs | 2019-08-27 19:59:20 | edca56a947278508350bfa5dd33d3fa10699001f

Merge pull request #1549 from Armaxis/patch-1

Added section about using Detekt to Contributing | 2019-08-24 22:16:26 | c923d14909888860a99d5899af17f5b52c9b000f

Revert "Replaced accessor with a call to setter to fix the build issue"

This reverts commit 82db0398 | 2019-08-17 02:21:08 | c570cb9b0fd7bd7fcc88c4d3b529df8837e98fdc

Replaced accessor with a call to setter to fix the build issue | 2019-08-16 04:32:25 | 82db039843303044f91d36ba7c43595ab59bacd5

fix typo | 2019-08-02 15:31:17 | a2452f61e78e689efb59adaf71384d74447578b0

Add / fix android inspectors (#1491)

* Added MortarScope and ViewRootImpl inspectors
* Fixed the ContextWrapper inspector

Fixes #1490
Fixes #1389 | 2019-07-25 22:50:48 | 915f8359690a016a09e66608a041454b9c8c52cb

Documenting public APIs (#1476)

Also fixed naming and other things that weren't right.

Fixes #1474 | 2019-07-19 06:57:25 | 41c69a5d424b4236114c5ce1b077afdad38e57a5

Adding CLI for LeakCanary (#1456)

Example usage:
```
./gradlew leakcanary-cli:run --args='analyze-process com.example.leakcanary'

./gradlew leakcanary-cli:run --args='dump-process com.example.leakcanary'

./gradlew leakcanary-cli:run --args='analyze-file /path/to/heapdump.hprof'
```

Also fixed a bug in ShortestPathFinder which did not ignore null references in object arrays | 2019-07-11 19:11:30 | eded1c96e84f37393857ba4de2580aec784b2391

Behavior change & bugfixes for retained count notification (#1433)

* Bugfix: when tapping the "dump heap" notification, if the GC found no retained instance we didn't use a distinct notification id to communicate that, and then soon after we'd dismiss the notification that let's the user know there is no retained instances on tap.
* Bugfix: we weren't running the GC when checking for retained instances and the count was under the threshold
* Change: we now update the notification and keep it around for 30 seconds when the count goes to 0
* Change: the "no retained instance" notification that shows on tap is identical and also auto dismisses after 30 seconds.
* Change: we're checking for retained references (and running the GC) every 2 seconds instead of 5.

Fixes #1427 | 2019-07-03 20:55:47 | 968083a915343d881bd63e40587c070fde543732

Update how to fix a leak | 2019-06-25 05:46:56 | 177e7fd12933d99eca7a526851c53e598a03bf90

Text rendering tests (#1378)

* Added test coverage for text rendering
* Fixed bug: labels were not rendered on the last node (leaking instance)
* Matched exclusions are now rendered on their own line

Fixes #1375
Fixes #1350 | 2019-06-04 09:32:11 | 1926cb1db73f9583e11c557dbf2e5d46e3896a6e

Thread name based exclusions (#1353)

* Readded support for exclusions of local variable based on thread names
* Renamed ThreadExclusion to JavaLocalExclusion
* Fixed bug: KeyedWeakReference was not always ignored because its superclass is has a weakly reachable exclusion.
* Fixed bug: all root nodes had the same visit order as the first non root enqueued item, making it possible for a non root node to be dequeued before we're done with all roots.
* Redded gc root sorting
* Added tests to cover all uncovered bugs
* Added support for parsing StackFrameRecord

Fixes #1339 | 2019-05-20 13:17:18 | 6c2ee609efda323e88a4964d31fc5a5f0532f776

Reachability => LeakStatus (#1340)

* Combined leaking information from inspectors to solving conflicts while keeping all reasons
* Made reason from view leak inspector more obvious, and added label data about internals
* Moved reachability into LeakTraceElement
* Reachability renamed to LeakNodeStatus and leaking / not leaking
* ReachabilityInspector and Labeler are now functions with type aliases

Related to #1336: should fix the crash, though it's still unclear why AppCompatButton was a gc root there. | 2019-05-07 14:56:59 | 01210bbbfaecb3bcb6057c62b2195366d3bfa4f9

Revamp notifications (#1335)

* New notification that shows the count of retained instances. Tapping it triggers a heap dump. Fixes #1325
* Notifications are now split into two channels: default for results, and low for everything else.
* New config options: LeakCanary.config.dumpHeapWhenDebugging (default false) and LeakCanary.config.retainedVisibleThreshold (default 5)
* Replaced notification int constants and timestamps with resource ids.
* Don't show background notifications in instant apps (#1197) | 2019-05-05 16:38:26 | b14d9bc9c0a87119137bc0998bdec9314186dfcf

Highlighting new leaks (#1334)

New leaks are leaks that have a leak group that doesn't exist in any prior analysis.

* The notification now reports the count of leaks, with a split of new, known, and won't fix.
* The analysis success screen shows new leaks
* Moved description prefixes to be computed rather than inserted in the DB

Fixes #1328 | 2019-05-05 09:37:38 | f9a0518d4ddd69b782b6302caa3e3039787038e4

LeakSentry can be disabled (#1332)

LeakCanary has an enabled config option. Default is on in debug builds off in release builds.

Fixes #1327 | 2019-05-04 17:52:47 | f74f60901f34c751e8b8798d626678aa6233c893

Revert "fix trailing spaces per checkstyle"

This reverts commit ff17f879ec92ec326f8b1c6b7b8d77a5266d6622. | 2019-05-04 08:04:21 | 03136ca7dc1680299d710f79ca885412a1564144

Add test coverage for heap analysis (#1329)

* Fixed bug when reachability inspectors conflicts (reachable should win and erase unreachable)
* Added back support for leaking instances being empty objects, strings, primitive arrays or any object that we otherwise don't follow to find shortest paths. | 2019-05-04 07:51:02 | 59558e655d537c7654c411eebfd840773a8b77c9

Introducing exclusion priority (#1317)

* Add segmented FIFO queue

Unified several queues into one segmented FIFO queue. This will enable us to add several levels of priority.

* Introducing exclusion priority

* "excludedLeak" is now known as "won't fix leak", which matches its reality better. It's a leak that is known and real yet we're not fixing.
* Exclusion.alwaysExclude is replaced with Exclusion.status, with 3 possible values: NEVER_REACHABLE, WONT_FIX_LEAK, WEAKLY_REACHABLE.
* The shortest path finder will now follow weak references after all other paths have been exhausted.
* Removed class exclusion, was confusing, replaced with less lazy approach of listing fields to exclude
* VIEWLOCATIONHOLDER_ROOT should not have been always excluded, fixed.

Fixes #1173 ... well kinda. Instead of "non leaking retained instances", LeakCanary will report weakly reachable traces. Not sure if that'll help but it's a foundation we can build on. | 2019-04-30 17:44:15 | b0eedc553995e354e2382b3378bf0348801cd3c5

AllFieldsLabeler & cleanups (#1316)

* Add new optional labeler that prints all fields (useful for debugging)
* Move deprecated AnalysisResult to perflib
* Made DefaultAnalysisResultListener an object | 2019-04-30 07:08:29 | b9ee5356db265412db39c4c341880f305fbf2c76

fix format | 2019-04-22 06:25:09 | 4a2b158913e5a9eb0d5c6fdfbf949a80fc1b2c6b

Rename default to perflib and experimental to default (#1282)

* Remove experimental from module names

* Remove experimental prefix, add perflib prefix:

* update docs | 2019-04-19 06:01:39 | 425a9f24deb72691b02cdc85f80d177c05afebc5

fix list | 2019-04-18 21:55:43 | 8e3f9d26e8d3555bf934b99ac062aabc3aba528f

fix broken master | 2019-04-10 15:00:30 | f067ae53e050c5f52f47237440a6ac7eee3ca94c

fix broken build due to typo | 2019-04-10 05:44:19 | 7d4ddb4ffe3c9b0f30a84848675452dded0d4115

Leaking information aligned below simple class name. (#1258)

Also fixed issue where extraString + exclusionString were showing after the squiggly line.

Before: 
``` 
┬
├─ java.lang.Thread
│                 Leaking: NO (it's a GC root)
│                 ↓ thread Thread.<Java Local>
│                                ~~~~~~~~~~~~~ (named 'Thread-4')
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                 Leaking: UNKNOWN
│                 ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                     ~~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) 
```
After: 
``` 
┬
├─ java.lang.Thread
│            Leaking: NO (it's a GC root)
│            ↓ thread Thread.<Java Local> (named 'Thread-4')
│                            ~~~~~~~~~~~~
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                         Leaking: UNKNOWN
│                         ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                              ~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) ``` | 2019-04-05 20:11:47 | a938855585c7cf2522ffbd143d4bb66a234eea66

Add share to Stack Overflow button when viewing a leak (#1252)

* Add share to Stack Overflow button when viewing a leak

* Add question tag, lengthen toast and fix build failure. | 2019-04-04 20:49:50 | 8724d2aaffc07904517a3b823867802ca43233ae

Check if serviceInfo.processName is null. When LeakCanary runs on a seperate process and that process for some reason does not have a assigned processName, then we will crash on a NullPointerException. Also a debug log explaining this. (#1225) | 2019-04-01 19:20:40 | 3efc43608ed71dc20b0ad1e0e80e33d15249666f

fix master broken | 2019-04-01 19:07:27 | fe42130029174681a708b7d8622412efbaf81e73

fix trailing spaces per checkstyle | 2019-03-29 22:34:58 | ff17f879ec92ec326f8b1c6b7b8d77a5266d6622

Fix GC Root bugs that missed leaks (#1168)

In Perflib, Snapshot.getGcRoots() only returns the GC roots from the first heap. Based on empirical evidence, it seems like Android has 4 heaps, and the GC Roots used to only be in the first heap, but more recent versions of Android have GC Roots in other heaps as well.

This means LeakCanary would sometimes show "No Leak Found" when there actually was a leak.

Fixes #1163 | 2019-01-10 23:32:27 | 64b6e5a41796ae1587c50c8cc860cea25f28f382

fix typo | 2018-10-17 00:43:01 | 044b1e4827bc71ec008dc3f7e43c78f58885f1e1

Fix LeakCanary toasting (#1116)

- Prior attempts to get it to work with the application context turned out to be buggy.
- This makes LeakCanary use whatever the current resumed activity is, if any.
- If there is no resumed activity, then the toast isn't displayed.

This supersedes #1080 | 2018-10-16 13:23:14 | 0e39e2eea79bc05bf7147a4074dd7163f7c401ff

fix the wrong word (#1111) | 2018-10-16 01:25:28 | 636b9b6c2b39c0c887c9ed78e904239db9bc131e

Merge pull request #1104 from IlyaGulya/bug/travis-ci-cache-fix

Fix travis caching and improve build time. | 2018-09-22 21:25:59 | 344728b906daf6d010f66bdf4ccc29ad8fedede5

Error prone 2.3.1 + suggested fix and specify version

See http://errorprone.info/bugpattern/StringSplitter | 2018-08-22 07:37:33 | a6b6960d73a1da9661f4e85254570bf5f867f954

Merge pull request #1089 from hzsweers/z/fixAnother

Quick followup to #1088 | 2018-08-22 03:15:15 | be973f5f5da6a3516aedab98e639690697617747

Merge pull request #1087 from Goddchen/patch-2

Updated german translation | 2018-08-20 13:52:47 | b43c279b3e1623c193e1dc81955527f70e93f822

Merge pull request #1063 from javmarina/patch-1

Fixed wrong versions in AndroidExcludedRefs | 2018-07-25 18:31:55 | 3b4ebe3e2571377f93e9a6976e021324502a0f78

Fixed wrong versions in AndroidExcludedRefs

Commit https://android.googlesource.com/platform/frameworks/base/+/27db46850b708070452c0ce49daf5f79503fbde6 introduced this issue. This commit was first included in Jelly Bean 4.3 (JELLY_BEAN_MR2), not Jelly Bean 4.1 (JELLY_BEAN)
Commit https://android.googlesource.com/platform/frameworks/base/+/5200e1cb07190a1f6874d72a4561064cad3ee3e0 fixes this issue and was first included in Oreo 8.0 (O). Nougat still has this memory leak. | 2018-07-24 18:24:59 | e4778b25f2c6e65ebc485d255e38586c7d45ec97

Merge pull request #1057 from square/py/ui_bug

Fix drawing of start line | 2018-07-20 22:21:19 | af96577a7d19e4df9f63d95fd9c3bfd2adcddb5d

Avoid Toast crashes

Showing a toast can crash on API 25 because the Window Manager can throw a BadTokenException when addView is called.

This change fixes it by configuring the toast manually and calling the window manager directly. This is based on https://github.com/pyricau/frenchtoast/blob/master/frenchtoast/src/main/java/frenchtoast/Mixture.java#L49 .

Fixes #844 | 2018-07-20 16:11:22 | c9ebc5cf5099c093bde5d3309b2692cb0e2016d8

Fixing setup bug | 2018-06-28 04:07:09 | 505933817cf6e2eb0dad4a78d4c7c35a072b9868

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

Introducing exclusion priority (#1317)

* Add segmented FIFO queue

Unified several queues into one segmented FIFO queue. This will enable us to add several levels of priority.

* Introducing exclusion priority

* "excludedLeak" is now known as "won't fix leak", which matches its reality better. It's a leak that is known and real yet we're not fixing.
* Exclusion.alwaysExclude is replaced with Exclusion.status, with 3 possible values: NEVER_REACHABLE, WONT_FIX_LEAK, WEAKLY_REACHABLE.
* The shortest path finder will now follow weak references after all other paths have been exhausted.
* Removed class exclusion, was confusing, replaced with less lazy approach of listing fields to exclude
* VIEWLOCATIONHOLDER_ROOT should not have been always excluded, fixed.

Fixes #1173 ... well kinda. Instead of "non leaking retained instances", LeakCanary will report weakly reachable traces. Not sure if that'll help but it's a foundation we can build on. | 2019-04-30 17:44:15 | b0eedc553995e354e2382b3378bf0348801cd3c5

AllFieldsLabeler & cleanups (#1316)

* Add new optional labeler that prints all fields (useful for debugging)
* Move deprecated AnalysisResult to perflib
* Made DefaultAnalysisResultListener an object | 2019-04-30 07:08:29 | b9ee5356db265412db39c4c341880f305fbf2c76

fix format | 2019-04-22 06:25:09 | 4a2b158913e5a9eb0d5c6fdfbf949a80fc1b2c6b

Rename default to perflib and experimental to default (#1282)

* Remove experimental from module names

* Remove experimental prefix, add perflib prefix:

* update docs | 2019-04-19 06:01:39 | 425a9f24deb72691b02cdc85f80d177c05afebc5

fix list | 2019-04-18 21:55:43 | 8e3f9d26e8d3555bf934b99ac062aabc3aba528f

fix broken master | 2019-04-10 15:00:30 | f067ae53e050c5f52f47237440a6ac7eee3ca94c

fix broken build due to typo | 2019-04-10 05:44:19 | 7d4ddb4ffe3c9b0f30a84848675452dded0d4115

Leaking information aligned below simple class name. (#1258)

Also fixed issue where extraString + exclusionString were showing after the squiggly line.

Before: 
``` 
┬
├─ java.lang.Thread
│                 Leaking: NO (it's a GC root)
│                 ↓ thread Thread.<Java Local>
│                                ~~~~~~~~~~~~~ (named 'Thread-4')
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                 Leaking: UNKNOWN
│                 ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                     ~~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) 
```
After: 
``` 
┬
├─ java.lang.Thread
│            Leaking: NO (it's a GC root)
│            ↓ thread Thread.<Java Local> (named 'Thread-4')
│                            ~~~~~~~~~~~~
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                         Leaking: UNKNOWN
│                         ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                              ~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) ``` | 2019-04-05 20:11:47 | a938855585c7cf2522ffbd143d4bb66a234eea66

Add share to Stack Overflow button when viewing a leak (#1252)

* Add share to Stack Overflow button when viewing a leak

* Add question tag, lengthen toast and fix build failure. | 2019-04-04 20:49:50 | 8724d2aaffc07904517a3b823867802ca43233ae

Check if serviceInfo.processName is null. When LeakCanary runs on a seperate process and that process for some reason does not have a assigned processName, then we will crash on a NullPointerException. Also a debug log explaining this. (#1225) | 2019-04-01 19:20:40 | 3efc43608ed71dc20b0ad1e0e80e33d15249666f

fix master broken | 2019-04-01 19:07:27 | fe42130029174681a708b7d8622412efbaf81e73

Fix GC Root bugs that missed leaks (#1168)

In Perflib, Snapshot.getGcRoots() only returns the GC roots from the first heap. Based on empirical evidence, it seems like Android has 4 heaps, and the GC Roots used to only be in the first heap, but more recent versions of Android have GC Roots in other heaps as well.

This means LeakCanary would sometimes show "No Leak Found" when there actually was a leak.

Fixes #1163 | 2019-01-10 23:32:27 | 64b6e5a41796ae1587c50c8cc860cea25f28f382

fix typo | 2018-10-17 00:43:01 | 044b1e4827bc71ec008dc3f7e43c78f58885f1e1

Fix LeakCanary toasting (#1116)

- Prior attempts to get it to work with the application context turned out to be buggy.
- This makes LeakCanary use whatever the current resumed activity is, if any.
- If there is no resumed activity, then the toast isn't displayed.

This supersedes #1080 | 2018-10-16 13:23:14 | 0e39e2eea79bc05bf7147a4074dd7163f7c401ff

fix the wrong word (#1111) | 2018-10-16 01:25:28 | 636b9b6c2b39c0c887c9ed78e904239db9bc131e

Merge pull request #1104 from IlyaGulya/bug/travis-ci-cache-fix

Fix travis caching and improve build time. | 2018-09-22 21:25:59 | 344728b906daf6d010f66bdf4ccc29ad8fedede5

Error prone 2.3.1 + suggested fix and specify version

See http://errorprone.info/bugpattern/StringSplitter | 2018-08-22 07:37:33 | a6b6960d73a1da9661f4e85254570bf5f867f954

Merge pull request #1089 from hzsweers/z/fixAnother

Quick followup to #1088 | 2018-08-22 03:15:15 | be973f5f5da6a3516aedab98e639690697617747

Merge pull request #1087 from Goddchen/patch-2

Updated german translation | 2018-08-20 13:52:47 | b43c279b3e1623c193e1dc81955527f70e93f822

Merge pull request #1063 from javmarina/patch-1

Fixed wrong versions in AndroidExcludedRefs | 2018-07-25 18:31:55 | 3b4ebe3e2571377f93e9a6976e021324502a0f78

Fixed wrong versions in AndroidExcludedRefs

Commit https://android.googlesource.com/platform/frameworks/base/+/27db46850b708070452c0ce49daf5f79503fbde6 introduced this issue. This commit was first included in Jelly Bean 4.3 (JELLY_BEAN_MR2), not Jelly Bean 4.1 (JELLY_BEAN)
Commit https://android.googlesource.com/platform/frameworks/base/+/5200e1cb07190a1f6874d72a4561064cad3ee3e0 fixes this issue and was first included in Oreo 8.0 (O). Nougat still has this memory leak. | 2018-07-24 18:24:59 | e4778b25f2c6e65ebc485d255e38586c7d45ec97

Merge pull request #1057 from square/py/ui_bug

Fix drawing of start line | 2018-07-20 22:21:19 | af96577a7d19e4df9f63d95fd9c3bfd2adcddb5d

Avoid Toast crashes

Showing a toast can crash on API 25 because the Window Manager can throw a BadTokenException when addView is called.

This change fixes it by configuring the toast manually and calling the window manager directly. This is based on https://github.com/pyricau/frenchtoast/blob/master/frenchtoast/src/main/java/frenchtoast/Mixture.java#L49 .

Fixes #844 | 2018-07-20 16:11:22 | c9ebc5cf5099c093bde5d3309b2692cb0e2016d8

Fixing setup bug | 2018-06-28 04:07:09 | 505933817cf6e2eb0dad4a78d4c7c35a072b9868

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

Fixing setup bug | 2018-06-28 04:07:09 | 505933817cf6e2eb0dad4a78d4c7c35a072b9868

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

Update how to fix a leak | 2019-06-25 05:46:56 | 177e7fd12933d99eca7a526851c53e598a03bf90

Text rendering tests (#1378)

* Added test coverage for text rendering
* Fixed bug: labels were not rendered on the last node (leaking instance)
* Matched exclusions are now rendered on their own line

Fixes #1375
Fixes #1350 | 2019-06-04 09:32:11 | 1926cb1db73f9583e11c557dbf2e5d46e3896a6e

Thread name based exclusions (#1353)

* Readded support for exclusions of local variable based on thread names
* Renamed ThreadExclusion to JavaLocalExclusion
* Fixed bug: KeyedWeakReference was not always ignored because its superclass is has a weakly reachable exclusion.
* Fixed bug: all root nodes had the same visit order as the first non root enqueued item, making it possible for a non root node to be dequeued before we're done with all roots.
* Redded gc root sorting
* Added tests to cover all uncovered bugs
* Added support for parsing StackFrameRecord

Fixes #1339 | 2019-05-20 13:17:18 | 6c2ee609efda323e88a4964d31fc5a5f0532f776

Reachability => LeakStatus (#1340)

* Combined leaking information from inspectors to solving conflicts while keeping all reasons
* Made reason from view leak inspector more obvious, and added label data about internals
* Moved reachability into LeakTraceElement
* Reachability renamed to LeakNodeStatus and leaking / not leaking
* ReachabilityInspector and Labeler are now functions with type aliases

Related to #1336: should fix the crash, though it's still unclear why AppCompatButton was a gc root there. | 2019-05-07 14:56:59 | 01210bbbfaecb3bcb6057c62b2195366d3bfa4f9

Revamp notifications (#1335)

* New notification that shows the count of retained instances. Tapping it triggers a heap dump. Fixes #1325
* Notifications are now split into two channels: default for results, and low for everything else.
* New config options: LeakCanary.config.dumpHeapWhenDebugging (default false) and LeakCanary.config.retainedVisibleThreshold (default 5)
* Replaced notification int constants and timestamps with resource ids.
* Don't show background notifications in instant apps (#1197) | 2019-05-05 16:38:26 | b14d9bc9c0a87119137bc0998bdec9314186dfcf

Highlighting new leaks (#1334)

New leaks are leaks that have a leak group that doesn't exist in any prior analysis.

* The notification now reports the count of leaks, with a split of new, known, and won't fix.
* The analysis success screen shows new leaks
* Moved description prefixes to be computed rather than inserted in the DB

Fixes #1328 | 2019-05-05 09:37:38 | f9a0518d4ddd69b782b6302caa3e3039787038e4

LeakSentry can be disabled (#1332)

LeakCanary has an enabled config option. Default is on in debug builds off in release builds.

Fixes #1327 | 2019-05-04 17:52:47 | f74f60901f34c751e8b8798d626678aa6233c893

Revert "fix trailing spaces per checkstyle"

This reverts commit ff17f879ec92ec326f8b1c6b7b8d77a5266d6622. | 2019-05-04 08:04:21 | 03136ca7dc1680299d710f79ca885412a1564144

Add test coverage for heap analysis (#1329)

* Fixed bug when reachability inspectors conflicts (reachable should win and erase unreachable)
* Added back support for leaking instances being empty objects, strings, primitive arrays or any object that we otherwise don't follow to find shortest paths. | 2019-05-04 07:51:02 | 59558e655d537c7654c411eebfd840773a8b77c9

Introducing exclusion priority (#1317)

* Add segmented FIFO queue

Unified several queues into one segmented FIFO queue. This will enable us to add several levels of priority.

* Introducing exclusion priority

* "excludedLeak" is now known as "won't fix leak", which matches its reality better. It's a leak that is known and real yet we're not fixing.
* Exclusion.alwaysExclude is replaced with Exclusion.status, with 3 possible values: NEVER_REACHABLE, WONT_FIX_LEAK, WEAKLY_REACHABLE.
* The shortest path finder will now follow weak references after all other paths have been exhausted.
* Removed class exclusion, was confusing, replaced with less lazy approach of listing fields to exclude
* VIEWLOCATIONHOLDER_ROOT should not have been always excluded, fixed.

Fixes #1173 ... well kinda. Instead of "non leaking retained instances", LeakCanary will report weakly reachable traces. Not sure if that'll help but it's a foundation we can build on. | 2019-04-30 17:44:15 | b0eedc553995e354e2382b3378bf0348801cd3c5

AllFieldsLabeler & cleanups (#1316)

* Add new optional labeler that prints all fields (useful for debugging)
* Move deprecated AnalysisResult to perflib
* Made DefaultAnalysisResultListener an object | 2019-04-30 07:08:29 | b9ee5356db265412db39c4c341880f305fbf2c76

fix format | 2019-04-22 06:25:09 | 4a2b158913e5a9eb0d5c6fdfbf949a80fc1b2c6b

Rename default to perflib and experimental to default (#1282)

* Remove experimental from module names

* Remove experimental prefix, add perflib prefix:

* update docs | 2019-04-19 06:01:39 | 425a9f24deb72691b02cdc85f80d177c05afebc5

fix list | 2019-04-18 21:55:43 | 8e3f9d26e8d3555bf934b99ac062aabc3aba528f

fix broken master | 2019-04-10 15:00:30 | f067ae53e050c5f52f47237440a6ac7eee3ca94c

fix broken build due to typo | 2019-04-10 05:44:19 | 7d4ddb4ffe3c9b0f30a84848675452dded0d4115

Leaking information aligned below simple class name. (#1258)

Also fixed issue where extraString + exclusionString were showing after the squiggly line.

Before: 
``` 
┬
├─ java.lang.Thread
│                 Leaking: NO (it's a GC root)
│                 ↓ thread Thread.<Java Local>
│                                ~~~~~~~~~~~~~ (named 'Thread-4')
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                 Leaking: UNKNOWN
│                 ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                     ~~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) 
```
After: 
``` 
┬
├─ java.lang.Thread
│            Leaking: NO (it's a GC root)
│            ↓ thread Thread.<Java Local> (named 'Thread-4')
│                            ~~~~~~~~~~~~
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                         Leaking: UNKNOWN
│                         ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                              ~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) ``` | 2019-04-05 20:11:47 | a938855585c7cf2522ffbd143d4bb66a234eea66

Add share to Stack Overflow button when viewing a leak (#1252)

* Add share to Stack Overflow button when viewing a leak

* Add question tag, lengthen toast and fix build failure. | 2019-04-04 20:49:50 | 8724d2aaffc07904517a3b823867802ca43233ae

Check if serviceInfo.processName is null. When LeakCanary runs on a seperate process and that process for some reason does not have a assigned processName, then we will crash on a NullPointerException. Also a debug log explaining this. (#1225) | 2019-04-01 19:20:40 | 3efc43608ed71dc20b0ad1e0e80e33d15249666f

fix master broken | 2019-04-01 19:07:27 | fe42130029174681a708b7d8622412efbaf81e73

fix trailing spaces per checkstyle | 2019-03-29 22:34:58 | ff17f879ec92ec326f8b1c6b7b8d77a5266d6622

Fix GC Root bugs that missed leaks (#1168)

In Perflib, Snapshot.getGcRoots() only returns the GC roots from the first heap. Based on empirical evidence, it seems like Android has 4 heaps, and the GC Roots used to only be in the first heap, but more recent versions of Android have GC Roots in other heaps as well.

This means LeakCanary would sometimes show "No Leak Found" when there actually was a leak.

Fixes #1163 | 2019-01-10 23:32:27 | 64b6e5a41796ae1587c50c8cc860cea25f28f382

fix typo | 2018-10-17 00:43:01 | 044b1e4827bc71ec008dc3f7e43c78f58885f1e1

Fix LeakCanary toasting (#1116)

- Prior attempts to get it to work with the application context turned out to be buggy.
- This makes LeakCanary use whatever the current resumed activity is, if any.
- If there is no resumed activity, then the toast isn't displayed.

This supersedes #1080 | 2018-10-16 13:23:14 | 0e39e2eea79bc05bf7147a4074dd7163f7c401ff

fix the wrong word (#1111) | 2018-10-16 01:25:28 | 636b9b6c2b39c0c887c9ed78e904239db9bc131e

Merge pull request #1104 from IlyaGulya/bug/travis-ci-cache-fix

Fix travis caching and improve build time. | 2018-09-22 21:25:59 | 344728b906daf6d010f66bdf4ccc29ad8fedede5

Error prone 2.3.1 + suggested fix and specify version

See http://errorprone.info/bugpattern/StringSplitter | 2018-08-22 07:37:33 | a6b6960d73a1da9661f4e85254570bf5f867f954

Merge pull request #1089 from hzsweers/z/fixAnother

Quick followup to #1088 | 2018-08-22 03:15:15 | be973f5f5da6a3516aedab98e639690697617747

Merge pull request #1087 from Goddchen/patch-2

Updated german translation | 2018-08-20 13:52:47 | b43c279b3e1623c193e1dc81955527f70e93f822

Merge pull request #1063 from javmarina/patch-1

Fixed wrong versions in AndroidExcludedRefs | 2018-07-25 18:31:55 | 3b4ebe3e2571377f93e9a6976e021324502a0f78

Fixed wrong versions in AndroidExcludedRefs

Commit https://android.googlesource.com/platform/frameworks/base/+/27db46850b708070452c0ce49daf5f79503fbde6 introduced this issue. This commit was first included in Jelly Bean 4.3 (JELLY_BEAN_MR2), not Jelly Bean 4.1 (JELLY_BEAN)
Commit https://android.googlesource.com/platform/frameworks/base/+/5200e1cb07190a1f6874d72a4561064cad3ee3e0 fixes this issue and was first included in Oreo 8.0 (O). Nougat still has this memory leak. | 2018-07-24 18:24:59 | e4778b25f2c6e65ebc485d255e38586c7d45ec97

Merge pull request #1057 from square/py/ui_bug

Fix drawing of start line | 2018-07-20 22:21:19 | af96577a7d19e4df9f63d95fd9c3bfd2adcddb5d

Avoid Toast crashes

Showing a toast can crash on API 25 because the Window Manager can throw a BadTokenException when addView is called.

This change fixes it by configuring the toast manually and calling the window manager directly. This is based on https://github.com/pyricau/frenchtoast/blob/master/frenchtoast/src/main/java/frenchtoast/Mixture.java#L49 .

Fixes #844 | 2018-07-20 16:11:22 | c9ebc5cf5099c093bde5d3309b2692cb0e2016d8

Fixing setup bug | 2018-06-28 04:07:09 | 505933817cf6e2eb0dad4a78d4c7c35a072b9868

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

Adding CLI for LeakCanary (#1456)

Example usage:
```
./gradlew leakcanary-cli:run --args='analyze-process com.example.leakcanary'

./gradlew leakcanary-cli:run --args='dump-process com.example.leakcanary'

./gradlew leakcanary-cli:run --args='analyze-file /path/to/heapdump.hprof'
```

Also fixed a bug in ShortestPathFinder which did not ignore null references in object arrays | 2019-07-11 19:11:30 | eded1c96e84f37393857ba4de2580aec784b2391

Behavior change & bugfixes for retained count notification (#1433)

* Bugfix: when tapping the "dump heap" notification, if the GC found no retained instance we didn't use a distinct notification id to communicate that, and then soon after we'd dismiss the notification that let's the user know there is no retained instances on tap.
* Bugfix: we weren't running the GC when checking for retained instances and the count was under the threshold
* Change: we now update the notification and keep it around for 30 seconds when the count goes to 0
* Change: the "no retained instance" notification that shows on tap is identical and also auto dismisses after 30 seconds.
* Change: we're checking for retained references (and running the GC) every 2 seconds instead of 5.

Fixes #1427 | 2019-07-03 20:55:47 | 968083a915343d881bd63e40587c070fde543732

Update how to fix a leak | 2019-06-25 05:46:56 | 177e7fd12933d99eca7a526851c53e598a03bf90

Text rendering tests (#1378)

* Added test coverage for text rendering
* Fixed bug: labels were not rendered on the last node (leaking instance)
* Matched exclusions are now rendered on their own line

Fixes #1375
Fixes #1350 | 2019-06-04 09:32:11 | 1926cb1db73f9583e11c557dbf2e5d46e3896a6e

Thread name based exclusions (#1353)

* Readded support for exclusions of local variable based on thread names
* Renamed ThreadExclusion to JavaLocalExclusion
* Fixed bug: KeyedWeakReference was not always ignored because its superclass is has a weakly reachable exclusion.
* Fixed bug: all root nodes had the same visit order as the first non root enqueued item, making it possible for a non root node to be dequeued before we're done with all roots.
* Redded gc root sorting
* Added tests to cover all uncovered bugs
* Added support for parsing StackFrameRecord

Fixes #1339 | 2019-05-20 13:17:18 | 6c2ee609efda323e88a4964d31fc5a5f0532f776

Reachability => LeakStatus (#1340)

* Combined leaking information from inspectors to solving conflicts while keeping all reasons
* Made reason from view leak inspector more obvious, and added label data about internals
* Moved reachability into LeakTraceElement
* Reachability renamed to LeakNodeStatus and leaking / not leaking
* ReachabilityInspector and Labeler are now functions with type aliases

Related to #1336: should fix the crash, though it's still unclear why AppCompatButton was a gc root there. | 2019-05-07 14:56:59 | 01210bbbfaecb3bcb6057c62b2195366d3bfa4f9

Revamp notifications (#1335)

* New notification that shows the count of retained instances. Tapping it triggers a heap dump. Fixes #1325
* Notifications are now split into two channels: default for results, and low for everything else.
* New config options: LeakCanary.config.dumpHeapWhenDebugging (default false) and LeakCanary.config.retainedVisibleThreshold (default 5)
* Replaced notification int constants and timestamps with resource ids.
* Don't show background notifications in instant apps (#1197) | 2019-05-05 16:38:26 | b14d9bc9c0a87119137bc0998bdec9314186dfcf

Highlighting new leaks (#1334)

New leaks are leaks that have a leak group that doesn't exist in any prior analysis.

* The notification now reports the count of leaks, with a split of new, known, and won't fix.
* The analysis success screen shows new leaks
* Moved description prefixes to be computed rather than inserted in the DB

Fixes #1328 | 2019-05-05 09:37:38 | f9a0518d4ddd69b782b6302caa3e3039787038e4

LeakSentry can be disabled (#1332)

LeakCanary has an enabled config option. Default is on in debug builds off in release builds.

Fixes #1327 | 2019-05-04 17:52:47 | f74f60901f34c751e8b8798d626678aa6233c893

Revert "fix trailing spaces per checkstyle"

This reverts commit ff17f879ec92ec326f8b1c6b7b8d77a5266d6622. | 2019-05-04 08:04:21 | 03136ca7dc1680299d710f79ca885412a1564144

Add test coverage for heap analysis (#1329)

* Fixed bug when reachability inspectors conflicts (reachable should win and erase unreachable)
* Added back support for leaking instances being empty objects, strings, primitive arrays or any object that we otherwise don't follow to find shortest paths. | 2019-05-04 07:51:02 | 59558e655d537c7654c411eebfd840773a8b77c9

Introducing exclusion priority (#1317)

* Add segmented FIFO queue

Unified several queues into one segmented FIFO queue. This will enable us to add several levels of priority.

* Introducing exclusion priority

* "excludedLeak" is now known as "won't fix leak", which matches its reality better. It's a leak that is known and real yet we're not fixing.
* Exclusion.alwaysExclude is replaced with Exclusion.status, with 3 possible values: NEVER_REACHABLE, WONT_FIX_LEAK, WEAKLY_REACHABLE.
* The shortest path finder will now follow weak references after all other paths have been exhausted.
* Removed class exclusion, was confusing, replaced with less lazy approach of listing fields to exclude
* VIEWLOCATIONHOLDER_ROOT should not have been always excluded, fixed.

Fixes #1173 ... well kinda. Instead of "non leaking retained instances", LeakCanary will report weakly reachable traces. Not sure if that'll help but it's a foundation we can build on. | 2019-04-30 17:44:15 | b0eedc553995e354e2382b3378bf0348801cd3c5

AllFieldsLabeler & cleanups (#1316)

* Add new optional labeler that prints all fields (useful for debugging)
* Move deprecated AnalysisResult to perflib
* Made DefaultAnalysisResultListener an object | 2019-04-30 07:08:29 | b9ee5356db265412db39c4c341880f305fbf2c76

fix format | 2019-04-22 06:25:09 | 4a2b158913e5a9eb0d5c6fdfbf949a80fc1b2c6b

Rename default to perflib and experimental to default (#1282)

* Remove experimental from module names

* Remove experimental prefix, add perflib prefix:

* update docs | 2019-04-19 06:01:39 | 425a9f24deb72691b02cdc85f80d177c05afebc5

fix list | 2019-04-18 21:55:43 | 8e3f9d26e8d3555bf934b99ac062aabc3aba528f

fix broken master | 2019-04-10 15:00:30 | f067ae53e050c5f52f47237440a6ac7eee3ca94c

fix broken build due to typo | 2019-04-10 05:44:19 | 7d4ddb4ffe3c9b0f30a84848675452dded0d4115

Leaking information aligned below simple class name. (#1258)

Also fixed issue where extraString + exclusionString were showing after the squiggly line.

Before: 
``` 
┬
├─ java.lang.Thread
│                 Leaking: NO (it's a GC root)
│                 ↓ thread Thread.<Java Local>
│                                ~~~~~~~~~~~~~ (named 'Thread-4')
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                 Leaking: UNKNOWN
│                 ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                     ~~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) 
```
After: 
``` 
┬
├─ java.lang.Thread
│            Leaking: NO (it's a GC root)
│            ↓ thread Thread.<Java Local> (named 'Thread-4')
│                            ~~~~~~~~~~~~
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                         Leaking: UNKNOWN
│                         ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                              ~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) ``` | 2019-04-05 20:11:47 | a938855585c7cf2522ffbd143d4bb66a234eea66

Add share to Stack Overflow button when viewing a leak (#1252)

* Add share to Stack Overflow button when viewing a leak

* Add question tag, lengthen toast and fix build failure. | 2019-04-04 20:49:50 | 8724d2aaffc07904517a3b823867802ca43233ae

Check if serviceInfo.processName is null. When LeakCanary runs on a seperate process and that process for some reason does not have a assigned processName, then we will crash on a NullPointerException. Also a debug log explaining this. (#1225) | 2019-04-01 19:20:40 | 3efc43608ed71dc20b0ad1e0e80e33d15249666f

fix master broken | 2019-04-01 19:07:27 | fe42130029174681a708b7d8622412efbaf81e73

fix trailing spaces per checkstyle | 2019-03-29 22:34:58 | ff17f879ec92ec326f8b1c6b7b8d77a5266d6622

Fix GC Root bugs that missed leaks (#1168)

In Perflib, Snapshot.getGcRoots() only returns the GC roots from the first heap. Based on empirical evidence, it seems like Android has 4 heaps, and the GC Roots used to only be in the first heap, but more recent versions of Android have GC Roots in other heaps as well.

This means LeakCanary would sometimes show "No Leak Found" when there actually was a leak.

Fixes #1163 | 2019-01-10 23:32:27 | 64b6e5a41796ae1587c50c8cc860cea25f28f382

fix typo | 2018-10-17 00:43:01 | 044b1e4827bc71ec008dc3f7e43c78f58885f1e1

Fix LeakCanary toasting (#1116)

- Prior attempts to get it to work with the application context turned out to be buggy.
- This makes LeakCanary use whatever the current resumed activity is, if any.
- If there is no resumed activity, then the toast isn't displayed.

This supersedes #1080 | 2018-10-16 13:23:14 | 0e39e2eea79bc05bf7147a4074dd7163f7c401ff

fix the wrong word (#1111) | 2018-10-16 01:25:28 | 636b9b6c2b39c0c887c9ed78e904239db9bc131e

Merge pull request #1104 from IlyaGulya/bug/travis-ci-cache-fix

Fix travis caching and improve build time. | 2018-09-22 21:25:59 | 344728b906daf6d010f66bdf4ccc29ad8fedede5

Error prone 2.3.1 + suggested fix and specify version

See http://errorprone.info/bugpattern/StringSplitter | 2018-08-22 07:37:33 | a6b6960d73a1da9661f4e85254570bf5f867f954

Merge pull request #1089 from hzsweers/z/fixAnother

Quick followup to #1088 | 2018-08-22 03:15:15 | be973f5f5da6a3516aedab98e639690697617747

Merge pull request #1087 from Goddchen/patch-2

Updated german translation | 2018-08-20 13:52:47 | b43c279b3e1623c193e1dc81955527f70e93f822

Merge pull request #1063 from javmarina/patch-1

Fixed wrong versions in AndroidExcludedRefs | 2018-07-25 18:31:55 | 3b4ebe3e2571377f93e9a6976e021324502a0f78

Fixed wrong versions in AndroidExcludedRefs

Commit https://android.googlesource.com/platform/frameworks/base/+/27db46850b708070452c0ce49daf5f79503fbde6 introduced this issue. This commit was first included in Jelly Bean 4.3 (JELLY_BEAN_MR2), not Jelly Bean 4.1 (JELLY_BEAN)
Commit https://android.googlesource.com/platform/frameworks/base/+/5200e1cb07190a1f6874d72a4561064cad3ee3e0 fixes this issue and was first included in Oreo 8.0 (O). Nougat still has this memory leak. | 2018-07-24 18:24:59 | e4778b25f2c6e65ebc485d255e38586c7d45ec97

Merge pull request #1057 from square/py/ui_bug

Fix drawing of start line | 2018-07-20 22:21:19 | af96577a7d19e4df9f63d95fd9c3bfd2adcddb5d

Avoid Toast crashes

Showing a toast can crash on API 25 because the Window Manager can throw a BadTokenException when addView is called.

This change fixes it by configuring the toast manually and calling the window manager directly. This is based on https://github.com/pyricau/frenchtoast/blob/master/frenchtoast/src/main/java/frenchtoast/Mixture.java#L49 .

Fixes #844 | 2018-07-20 16:11:22 | c9ebc5cf5099c093bde5d3309b2692cb0e2016d8

Fixing setup bug | 2018-06-28 04:07:09 | 505933817cf6e2eb0dad4a78d4c7c35a072b9868

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

fix missing toString | 2020-01-04 01:28:33 | 47bad9fec441ea462129ece0c4f1125f578ba1ec

Use "x minutes ago" format for dates (#1675)

Also fixed some of the ordering (leaks types by counts desc, leaks by date desc)

Fixes #1672 | 2019-12-16 23:56:38 | 9fae7ed497e1760abe74cf2c22535fbd51f16331

Gradle plugin that puts proguard mapping file in the apk as an asset (#1589)

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Add unit tests for copy obfuscation file task

* Add recipe describing how to use the plugin

* Add plugin usage instruction

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Rebased onto master

* Add missing test dependencies

* Use lambda function instead of a collection for plugin configuration

* Post code review fixups

* Rename according to code review suggestions

* Fix detekt warning

* Pass empty file if mapping doesn't exist

* Improved recipe

* Code review fixups

* Fix CopyObfuscationMappingFileTask tests

* Code review fixes

* Fix detekt issues

* Add plugin tests

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Rebased onto master

* Use lambda function instead of a collection for plugin configuration

* Post code review fixups

* Rename according to code review suggestions

* Fix detekt warning

* Pass empty file if mapping doesn't exist

* Improved recipe

* Code review fixups

* Fix CopyObfuscationMappingFileTask tests

* Code review fixes

* Fix detekt issues

* Add plugin tests

* Rebased onto master

* Add one more test for plugin

* Try fixing CI tests by reading $ANDROID_HOME value

* Try fixing CI tests by hardcoding android sdk path

* Debugging CI failing test

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Post review fixes

* Debugging failing test on CI

* Try fixing CI tests by hardcoding android sdk path

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debug failing test on CI

* Debug failing test on CI

* Debug failing test on CI

* Debug failing test on CI

* Debug failing test on CI

* Debug failing test on CI

* Use trusty dist in travis config

* Debug failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debug failing CI test

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Prevent GradleRunner from running builds in a separate process

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* sni: modernize travis script. Solve emulator issue.
The build now uses build tools 28 which requires little adjustments
from the original recipe. In the future we can just use the original recipe
Original recipe: https://docs.travis-ci.com/user/languages/android/ | 2019-12-10 06:48:02 | 25a10fcd9f405235de63bd791ea4ae4eb5453924

Fix emulators  (#1667)

* Revert "Fix travis (#1665)"

This reverts commit 00b9bd32d535022800153f34916d4c4667d2a5cd.

* Fix emulators

A recent emulator update breaks a few CI projects.  This PR applies
a fix suggested by Google.

https://issuetracker.google.com/issues/145622251#comment33 | 2019-12-10 05:43:06 | b678e1508e9ef3618ce2c44d44ff733f350d4185

Fix travis (#1665)

According to [this tweet](https://twitter.com/colinwhi/status/1204102384458194944) from @colinrtwhite, Travis is failing due to a bug in the most recent version of the emulator. Pinning the emulator to an older version works around it. This commit steals the fix from https://github.com/coil-kt/coil/pull/195 . | 2019-12-09 19:54:40 | 00b9bd32d535022800153f34916d4c4667d2a5cd

Add ability to customize class used to detect tests (#1654)

Developers should not ship JUnit in their app, even in debug. However, some debug libraries unfortunately ship with JUnit as a dependency (e.g. see https://github.com/square/okhttp/issues/4667).

Developers can change the default to target a different class (e.g assertj) to help LeakCanary detect unit tests, by overriding a public string:

```
  <string name="leak_canary_test_class_name">org.assertj.core.api.Assertions</string>
```

Fixes #1649 | 2019-12-03 02:35:07 | dbbb969d59b066c3f9197ebc3863cc4f54dae5d2

fix changelog | 2019-11-25 19:32:41 | 50ae3ba7558e5a3f83fc11b4d17a281f072ff078

Fix bug in handling JNI roots (#1636)

* When adding support for native reference leaks (879ab7c) there was a missing bracket in an if/else branch that led to all native gc roots being ignored.

Fixes #1634 | 2019-11-25 19:00:23 | aff338544b5eebbb0b3c792c628cca11fa888373

fix typos | 2019-11-19 03:58:07 | 25b0df0da4f6e93dedcd90342c9cd1d0eab080ed

Merge pull request #1596 from fernandospr/patch-1

Update blog-articles.md | 2019-10-04 16:35:24 | e65236dae7c5827b7c9f64c19c8b1a16ea19e5a7

Merge pull request #1598 from PaulWoitaschek/patch-1

Fixed the german string placeholder for sharing the heap dump | 2019-10-03 16:16:23 | 029f28eefd7aa966520ac3649fd2688732c02867

Fix crash when pressing home from root screen (#1578)

This bug only happens on older Android devices.

Fixes #1555 | 2019-09-11 01:51:06 | 274f58f96e8de7dcd3000c06ba3e2b50e427747d

Merge pull request #1559 from bric3/fix-primitive-array-dump-skip

Fixes the primitive array dump record skipping | 2019-09-09 22:16:57 | c0fd4d812cb8d6c5723231e501c121da2af86f06

Parsing and applying proguard mapping during heap analysis (#1542)

* Parsing and applying proguard mapping during heap analysis

* Parsing and applying proguard mapping during heap analysis

* Rebased onto master

* Post review changes and updated shark-cli to support mapping files

* Post review fixes

* Moving proguard mapping reader out of the analyzer and formatting fixes | 2019-08-30 16:54:20 | 66182a52069d9be59d0af6220aa9afd74218aa9b

fix images | 2019-08-27 20:02:50 | 8f5030e9faa8690217e1bd436274a3de5b9d3fb3

fix image links in docs | 2019-08-27 19:59:20 | edca56a947278508350bfa5dd33d3fa10699001f

Merge pull request #1549 from Armaxis/patch-1

Added section about using Detekt to Contributing | 2019-08-24 22:16:26 | c923d14909888860a99d5899af17f5b52c9b000f

Revert "Replaced accessor with a call to setter to fix the build issue"

This reverts commit 82db0398 | 2019-08-17 02:21:08 | c570cb9b0fd7bd7fcc88c4d3b529df8837e98fdc

Replaced accessor with a call to setter to fix the build issue | 2019-08-16 04:32:25 | 82db039843303044f91d36ba7c43595ab59bacd5

fix typo | 2019-08-02 15:31:17 | a2452f61e78e689efb59adaf71384d74447578b0

Add / fix android inspectors (#1491)

* Added MortarScope and ViewRootImpl inspectors
* Fixed the ContextWrapper inspector

Fixes #1490
Fixes #1389 | 2019-07-25 22:50:48 | 915f8359690a016a09e66608a041454b9c8c52cb

Documenting public APIs (#1476)

Also fixed naming and other things that weren't right.

Fixes #1474 | 2019-07-19 06:57:25 | 41c69a5d424b4236114c5ce1b077afdad38e57a5

Adding CLI for LeakCanary (#1456)

Example usage:
```
./gradlew leakcanary-cli:run --args='analyze-process com.example.leakcanary'

./gradlew leakcanary-cli:run --args='dump-process com.example.leakcanary'

./gradlew leakcanary-cli:run --args='analyze-file /path/to/heapdump.hprof'
```

Also fixed a bug in ShortestPathFinder which did not ignore null references in object arrays | 2019-07-11 19:11:30 | eded1c96e84f37393857ba4de2580aec784b2391

Behavior change & bugfixes for retained count notification (#1433)

* Bugfix: when tapping the "dump heap" notification, if the GC found no retained instance we didn't use a distinct notification id to communicate that, and then soon after we'd dismiss the notification that let's the user know there is no retained instances on tap.
* Bugfix: we weren't running the GC when checking for retained instances and the count was under the threshold
* Change: we now update the notification and keep it around for 30 seconds when the count goes to 0
* Change: the "no retained instance" notification that shows on tap is identical and also auto dismisses after 30 seconds.
* Change: we're checking for retained references (and running the GC) every 2 seconds instead of 5.

Fixes #1427 | 2019-07-03 20:55:47 | 968083a915343d881bd63e40587c070fde543732

Update how to fix a leak | 2019-06-25 05:46:56 | 177e7fd12933d99eca7a526851c53e598a03bf90

Text rendering tests (#1378)

* Added test coverage for text rendering
* Fixed bug: labels were not rendered on the last node (leaking instance)
* Matched exclusions are now rendered on their own line

Fixes #1375
Fixes #1350 | 2019-06-04 09:32:11 | 1926cb1db73f9583e11c557dbf2e5d46e3896a6e

Thread name based exclusions (#1353)

* Readded support for exclusions of local variable based on thread names
* Renamed ThreadExclusion to JavaLocalExclusion
* Fixed bug: KeyedWeakReference was not always ignored because its superclass is has a weakly reachable exclusion.
* Fixed bug: all root nodes had the same visit order as the first non root enqueued item, making it possible for a non root node to be dequeued before we're done with all roots.
* Redded gc root sorting
* Added tests to cover all uncovered bugs
* Added support for parsing StackFrameRecord

Fixes #1339 | 2019-05-20 13:17:18 | 6c2ee609efda323e88a4964d31fc5a5f0532f776

Reachability => LeakStatus (#1340)

* Combined leaking information from inspectors to solving conflicts while keeping all reasons
* Made reason from view leak inspector more obvious, and added label data about internals
* Moved reachability into LeakTraceElement
* Reachability renamed to LeakNodeStatus and leaking / not leaking
* ReachabilityInspector and Labeler are now functions with type aliases

Related to #1336: should fix the crash, though it's still unclear why AppCompatButton was a gc root there. | 2019-05-07 14:56:59 | 01210bbbfaecb3bcb6057c62b2195366d3bfa4f9

Revamp notifications (#1335)

* New notification that shows the count of retained instances. Tapping it triggers a heap dump. Fixes #1325
* Notifications are now split into two channels: default for results, and low for everything else.
* New config options: LeakCanary.config.dumpHeapWhenDebugging (default false) and LeakCanary.config.retainedVisibleThreshold (default 5)
* Replaced notification int constants and timestamps with resource ids.
* Don't show background notifications in instant apps (#1197) | 2019-05-05 16:38:26 | b14d9bc9c0a87119137bc0998bdec9314186dfcf

Highlighting new leaks (#1334)

New leaks are leaks that have a leak group that doesn't exist in any prior analysis.

* The notification now reports the count of leaks, with a split of new, known, and won't fix.
* The analysis success screen shows new leaks
* Moved description prefixes to be computed rather than inserted in the DB

Fixes #1328 | 2019-05-05 09:37:38 | f9a0518d4ddd69b782b6302caa3e3039787038e4

LeakSentry can be disabled (#1332)

LeakCanary has an enabled config option. Default is on in debug builds off in release builds.

Fixes #1327 | 2019-05-04 17:52:47 | f74f60901f34c751e8b8798d626678aa6233c893

Revert "fix trailing spaces per checkstyle"

This reverts commit ff17f879ec92ec326f8b1c6b7b8d77a5266d6622. | 2019-05-04 08:04:21 | 03136ca7dc1680299d710f79ca885412a1564144

Add test coverage for heap analysis (#1329)

* Fixed bug when reachability inspectors conflicts (reachable should win and erase unreachable)
* Added back support for leaking instances being empty objects, strings, primitive arrays or any object that we otherwise don't follow to find shortest paths. | 2019-05-04 07:51:02 | 59558e655d537c7654c411eebfd840773a8b77c9

Introducing exclusion priority (#1317)

* Add segmented FIFO queue

Unified several queues into one segmented FIFO queue. This will enable us to add several levels of priority.

* Introducing exclusion priority

* "excludedLeak" is now known as "won't fix leak", which matches its reality better. It's a leak that is known and real yet we're not fixing.
* Exclusion.alwaysExclude is replaced with Exclusion.status, with 3 possible values: NEVER_REACHABLE, WONT_FIX_LEAK, WEAKLY_REACHABLE.
* The shortest path finder will now follow weak references after all other paths have been exhausted.
* Removed class exclusion, was confusing, replaced with less lazy approach of listing fields to exclude
* VIEWLOCATIONHOLDER_ROOT should not have been always excluded, fixed.

Fixes #1173 ... well kinda. Instead of "non leaking retained instances", LeakCanary will report weakly reachable traces. Not sure if that'll help but it's a foundation we can build on. | 2019-04-30 17:44:15 | b0eedc553995e354e2382b3378bf0348801cd3c5

AllFieldsLabeler & cleanups (#1316)

* Add new optional labeler that prints all fields (useful for debugging)
* Move deprecated AnalysisResult to perflib
* Made DefaultAnalysisResultListener an object | 2019-04-30 07:08:29 | b9ee5356db265412db39c4c341880f305fbf2c76

fix format | 2019-04-22 06:25:09 | 4a2b158913e5a9eb0d5c6fdfbf949a80fc1b2c6b

Rename default to perflib and experimental to default (#1282)

* Remove experimental from module names

* Remove experimental prefix, add perflib prefix:

* update docs | 2019-04-19 06:01:39 | 425a9f24deb72691b02cdc85f80d177c05afebc5

fix list | 2019-04-18 21:55:43 | 8e3f9d26e8d3555bf934b99ac062aabc3aba528f

fix broken master | 2019-04-10 15:00:30 | f067ae53e050c5f52f47237440a6ac7eee3ca94c

fix broken build due to typo | 2019-04-10 05:44:19 | 7d4ddb4ffe3c9b0f30a84848675452dded0d4115

Leaking information aligned below simple class name. (#1258)

Also fixed issue where extraString + exclusionString were showing after the squiggly line.

Before: 
``` 
┬
├─ java.lang.Thread
│                 Leaking: NO (it's a GC root)
│                 ↓ thread Thread.<Java Local>
│                                ~~~~~~~~~~~~~ (named 'Thread-4')
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                 Leaking: UNKNOWN
│                 ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                     ~~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) 
```
After: 
``` 
┬
├─ java.lang.Thread
│            Leaking: NO (it's a GC root)
│            ↓ thread Thread.<Java Local> (named 'Thread-4')
│                            ~~~~~~~~~~~~
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                         Leaking: UNKNOWN
│                         ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                              ~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) ``` | 2019-04-05 20:11:47 | a938855585c7cf2522ffbd143d4bb66a234eea66

Add share to Stack Overflow button when viewing a leak (#1252)

* Add share to Stack Overflow button when viewing a leak

* Add question tag, lengthen toast and fix build failure. | 2019-04-04 20:49:50 | 8724d2aaffc07904517a3b823867802ca43233ae

Check if serviceInfo.processName is null. When LeakCanary runs on a seperate process and that process for some reason does not have a assigned processName, then we will crash on a NullPointerException. Also a debug log explaining this. (#1225) | 2019-04-01 19:20:40 | 3efc43608ed71dc20b0ad1e0e80e33d15249666f

fix master broken | 2019-04-01 19:07:27 | fe42130029174681a708b7d8622412efbaf81e73

fix trailing spaces per checkstyle | 2019-03-29 22:34:58 | ff17f879ec92ec326f8b1c6b7b8d77a5266d6622

Fix GC Root bugs that missed leaks (#1168)

In Perflib, Snapshot.getGcRoots() only returns the GC roots from the first heap. Based on empirical evidence, it seems like Android has 4 heaps, and the GC Roots used to only be in the first heap, but more recent versions of Android have GC Roots in other heaps as well.

This means LeakCanary would sometimes show "No Leak Found" when there actually was a leak.

Fixes #1163 | 2019-01-10 23:32:27 | 64b6e5a41796ae1587c50c8cc860cea25f28f382

fix typo | 2018-10-17 00:43:01 | 044b1e4827bc71ec008dc3f7e43c78f58885f1e1

Fix LeakCanary toasting (#1116)

- Prior attempts to get it to work with the application context turned out to be buggy.
- This makes LeakCanary use whatever the current resumed activity is, if any.
- If there is no resumed activity, then the toast isn't displayed.

This supersedes #1080 | 2018-10-16 13:23:14 | 0e39e2eea79bc05bf7147a4074dd7163f7c401ff

fix the wrong word (#1111) | 2018-10-16 01:25:28 | 636b9b6c2b39c0c887c9ed78e904239db9bc131e

Merge pull request #1104 from IlyaGulya/bug/travis-ci-cache-fix

Fix travis caching and improve build time. | 2018-09-22 21:25:59 | 344728b906daf6d010f66bdf4ccc29ad8fedede5

Error prone 2.3.1 + suggested fix and specify version

See http://errorprone.info/bugpattern/StringSplitter | 2018-08-22 07:37:33 | a6b6960d73a1da9661f4e85254570bf5f867f954

Merge pull request #1089 from hzsweers/z/fixAnother

Quick followup to #1088 | 2018-08-22 03:15:15 | be973f5f5da6a3516aedab98e639690697617747

Merge pull request #1087 from Goddchen/patch-2

Updated german translation | 2018-08-20 13:52:47 | b43c279b3e1623c193e1dc81955527f70e93f822

Merge pull request #1063 from javmarina/patch-1

Fixed wrong versions in AndroidExcludedRefs | 2018-07-25 18:31:55 | 3b4ebe3e2571377f93e9a6976e021324502a0f78

Fixed wrong versions in AndroidExcludedRefs

Commit https://android.googlesource.com/platform/frameworks/base/+/27db46850b708070452c0ce49daf5f79503fbde6 introduced this issue. This commit was first included in Jelly Bean 4.3 (JELLY_BEAN_MR2), not Jelly Bean 4.1 (JELLY_BEAN)
Commit https://android.googlesource.com/platform/frameworks/base/+/5200e1cb07190a1f6874d72a4561064cad3ee3e0 fixes this issue and was first included in Oreo 8.0 (O). Nougat still has this memory leak. | 2018-07-24 18:24:59 | e4778b25f2c6e65ebc485d255e38586c7d45ec97

Merge pull request #1057 from square/py/ui_bug

Fix drawing of start line | 2018-07-20 22:21:19 | af96577a7d19e4df9f63d95fd9c3bfd2adcddb5d

Avoid Toast crashes

Showing a toast can crash on API 25 because the Window Manager can throw a BadTokenException when addView is called.

This change fixes it by configuring the toast manually and calling the window manager directly. This is based on https://github.com/pyricau/frenchtoast/blob/master/frenchtoast/src/main/java/frenchtoast/Mixture.java#L49 .

Fixes #844 | 2018-07-20 16:11:22 | c9ebc5cf5099c093bde5d3309b2692cb0e2016d8

Fixing setup bug | 2018-06-28 04:07:09 | 505933817cf6e2eb0dad4a78d4c7c35a072b9868

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

Thread name based exclusions

* Readded support for exclusions of local variable based on thread names
* Renamed ThreadExclusion to JavaLocalExclusion
* Fixed bug: KeyedWeakReference was not always ignored because its superclass is has a weakly reachable exclusion.
* Fixed bug: all root nodes had the same visit order as the first non root enqueued item, making it possible for a non root node to be dequeued before we're done with all roots.
* Redded gc root sorting
* Added tests to cover all uncovered bugs
* Added support for parsing StackFrameRecord

Fixes #1339 | 2019-05-20 13:11:54 | 501b48ecccd18417775c735a2a7565802299b6f7

Reachability => LeakStatus (#1340)

* Combined leaking information from inspectors to solving conflicts while keeping all reasons
* Made reason from view leak inspector more obvious, and added label data about internals
* Moved reachability into LeakTraceElement
* Reachability renamed to LeakNodeStatus and leaking / not leaking
* ReachabilityInspector and Labeler are now functions with type aliases

Related to #1336: should fix the crash, though it's still unclear why AppCompatButton was a gc root there. | 2019-05-07 14:56:59 | 01210bbbfaecb3bcb6057c62b2195366d3bfa4f9

Revamp notifications (#1335)

* New notification that shows the count of retained instances. Tapping it triggers a heap dump. Fixes #1325
* Notifications are now split into two channels: default for results, and low for everything else.
* New config options: LeakCanary.config.dumpHeapWhenDebugging (default false) and LeakCanary.config.retainedVisibleThreshold (default 5)
* Replaced notification int constants and timestamps with resource ids.
* Don't show background notifications in instant apps (#1197) | 2019-05-05 16:38:26 | b14d9bc9c0a87119137bc0998bdec9314186dfcf

Highlighting new leaks (#1334)

New leaks are leaks that have a leak group that doesn't exist in any prior analysis.

* The notification now reports the count of leaks, with a split of new, known, and won't fix.
* The analysis success screen shows new leaks
* Moved description prefixes to be computed rather than inserted in the DB

Fixes #1328 | 2019-05-05 09:37:38 | f9a0518d4ddd69b782b6302caa3e3039787038e4

LeakSentry can be disabled (#1332)

LeakCanary has an enabled config option. Default is on in debug builds off in release builds.

Fixes #1327 | 2019-05-04 17:52:47 | f74f60901f34c751e8b8798d626678aa6233c893

Revert "fix trailing spaces per checkstyle"

This reverts commit ff17f879ec92ec326f8b1c6b7b8d77a5266d6622. | 2019-05-04 08:04:21 | 03136ca7dc1680299d710f79ca885412a1564144

Add test coverage for heap analysis (#1329)

* Fixed bug when reachability inspectors conflicts (reachable should win and erase unreachable)
* Added back support for leaking instances being empty objects, strings, primitive arrays or any object that we otherwise don't follow to find shortest paths. | 2019-05-04 07:51:02 | 59558e655d537c7654c411eebfd840773a8b77c9

Introducing exclusion priority (#1317)

* Add segmented FIFO queue

Unified several queues into one segmented FIFO queue. This will enable us to add several levels of priority.

* Introducing exclusion priority

* "excludedLeak" is now known as "won't fix leak", which matches its reality better. It's a leak that is known and real yet we're not fixing.
* Exclusion.alwaysExclude is replaced with Exclusion.status, with 3 possible values: NEVER_REACHABLE, WONT_FIX_LEAK, WEAKLY_REACHABLE.
* The shortest path finder will now follow weak references after all other paths have been exhausted.
* Removed class exclusion, was confusing, replaced with less lazy approach of listing fields to exclude
* VIEWLOCATIONHOLDER_ROOT should not have been always excluded, fixed.

Fixes #1173 ... well kinda. Instead of "non leaking retained instances", LeakCanary will report weakly reachable traces. Not sure if that'll help but it's a foundation we can build on. | 2019-04-30 17:44:15 | b0eedc553995e354e2382b3378bf0348801cd3c5

AllFieldsLabeler & cleanups (#1316)

* Add new optional labeler that prints all fields (useful for debugging)
* Move deprecated AnalysisResult to perflib
* Made DefaultAnalysisResultListener an object | 2019-04-30 07:08:29 | b9ee5356db265412db39c4c341880f305fbf2c76

fix format | 2019-04-22 06:25:09 | 4a2b158913e5a9eb0d5c6fdfbf949a80fc1b2c6b

Rename default to perflib and experimental to default (#1282)

* Remove experimental from module names

* Remove experimental prefix, add perflib prefix:

* update docs | 2019-04-19 06:01:39 | 425a9f24deb72691b02cdc85f80d177c05afebc5

fix list | 2019-04-18 21:55:43 | 8e3f9d26e8d3555bf934b99ac062aabc3aba528f

fix broken master | 2019-04-10 15:00:30 | f067ae53e050c5f52f47237440a6ac7eee3ca94c

fix broken build due to typo | 2019-04-10 05:44:19 | 7d4ddb4ffe3c9b0f30a84848675452dded0d4115

Leaking information aligned below simple class name. (#1258)

Also fixed issue where extraString + exclusionString were showing after the squiggly line.

Before: 
``` 
┬
├─ java.lang.Thread
│                 Leaking: NO (it's a GC root)
│                 ↓ thread Thread.<Java Local>
│                                ~~~~~~~~~~~~~ (named 'Thread-4')
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                 Leaking: UNKNOWN
│                 ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                     ~~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) 
```
After: 
``` 
┬
├─ java.lang.Thread
│            Leaking: NO (it's a GC root)
│            ↓ thread Thread.<Java Local> (named 'Thread-4')
│                            ~~~~~~~~~~~~
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                         Leaking: UNKNOWN
│                         ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                              ~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) ``` | 2019-04-05 20:11:47 | a938855585c7cf2522ffbd143d4bb66a234eea66

Add share to Stack Overflow button when viewing a leak (#1252)

* Add share to Stack Overflow button when viewing a leak

* Add question tag, lengthen toast and fix build failure. | 2019-04-04 20:49:50 | 8724d2aaffc07904517a3b823867802ca43233ae

Check if serviceInfo.processName is null. When LeakCanary runs on a seperate process and that process for some reason does not have a assigned processName, then we will crash on a NullPointerException. Also a debug log explaining this. (#1225) | 2019-04-01 19:20:40 | 3efc43608ed71dc20b0ad1e0e80e33d15249666f

fix master broken | 2019-04-01 19:07:27 | fe42130029174681a708b7d8622412efbaf81e73

fix trailing spaces per checkstyle | 2019-03-29 22:34:58 | ff17f879ec92ec326f8b1c6b7b8d77a5266d6622

Fix GC Root bugs that missed leaks (#1168)

In Perflib, Snapshot.getGcRoots() only returns the GC roots from the first heap. Based on empirical evidence, it seems like Android has 4 heaps, and the GC Roots used to only be in the first heap, but more recent versions of Android have GC Roots in other heaps as well.

This means LeakCanary would sometimes show "No Leak Found" when there actually was a leak.

Fixes #1163 | 2019-01-10 23:32:27 | 64b6e5a41796ae1587c50c8cc860cea25f28f382

fix typo | 2018-10-17 00:43:01 | 044b1e4827bc71ec008dc3f7e43c78f58885f1e1

Fix LeakCanary toasting (#1116)

- Prior attempts to get it to work with the application context turned out to be buggy.
- This makes LeakCanary use whatever the current resumed activity is, if any.
- If there is no resumed activity, then the toast isn't displayed.

This supersedes #1080 | 2018-10-16 13:23:14 | 0e39e2eea79bc05bf7147a4074dd7163f7c401ff

fix the wrong word (#1111) | 2018-10-16 01:25:28 | 636b9b6c2b39c0c887c9ed78e904239db9bc131e

Merge pull request #1104 from IlyaGulya/bug/travis-ci-cache-fix

Fix travis caching and improve build time. | 2018-09-22 21:25:59 | 344728b906daf6d010f66bdf4ccc29ad8fedede5

Error prone 2.3.1 + suggested fix and specify version

See http://errorprone.info/bugpattern/StringSplitter | 2018-08-22 07:37:33 | a6b6960d73a1da9661f4e85254570bf5f867f954

Merge pull request #1089 from hzsweers/z/fixAnother

Quick followup to #1088 | 2018-08-22 03:15:15 | be973f5f5da6a3516aedab98e639690697617747

Merge pull request #1087 from Goddchen/patch-2

Updated german translation | 2018-08-20 13:52:47 | b43c279b3e1623c193e1dc81955527f70e93f822

Merge pull request #1063 from javmarina/patch-1

Fixed wrong versions in AndroidExcludedRefs | 2018-07-25 18:31:55 | 3b4ebe3e2571377f93e9a6976e021324502a0f78

Fixed wrong versions in AndroidExcludedRefs

Commit https://android.googlesource.com/platform/frameworks/base/+/27db46850b708070452c0ce49daf5f79503fbde6 introduced this issue. This commit was first included in Jelly Bean 4.3 (JELLY_BEAN_MR2), not Jelly Bean 4.1 (JELLY_BEAN)
Commit https://android.googlesource.com/platform/frameworks/base/+/5200e1cb07190a1f6874d72a4561064cad3ee3e0 fixes this issue and was first included in Oreo 8.0 (O). Nougat still has this memory leak. | 2018-07-24 18:24:59 | e4778b25f2c6e65ebc485d255e38586c7d45ec97

Merge pull request #1057 from square/py/ui_bug

Fix drawing of start line | 2018-07-20 22:21:19 | af96577a7d19e4df9f63d95fd9c3bfd2adcddb5d

Avoid Toast crashes

Showing a toast can crash on API 25 because the Window Manager can throw a BadTokenException when addView is called.

This change fixes it by configuring the toast manually and calling the window manager directly. This is based on https://github.com/pyricau/frenchtoast/blob/master/frenchtoast/src/main/java/frenchtoast/Mixture.java#L49 .

Fixes #844 | 2018-07-20 16:11:22 | c9ebc5cf5099c093bde5d3309b2692cb0e2016d8

Fixing setup bug | 2018-06-28 04:07:09 | 505933817cf6e2eb0dad4a78d4c7c35a072b9868

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

fix typo | 2019-08-02 15:31:17 | a2452f61e78e689efb59adaf71384d74447578b0

Add / fix android inspectors (#1491)

* Added MortarScope and ViewRootImpl inspectors
* Fixed the ContextWrapper inspector

Fixes #1490
Fixes #1389 | 2019-07-25 22:50:48 | 915f8359690a016a09e66608a041454b9c8c52cb

Documenting public APIs (#1476)

Also fixed naming and other things that weren't right.

Fixes #1474 | 2019-07-19 06:57:25 | 41c69a5d424b4236114c5ce1b077afdad38e57a5

Adding CLI for LeakCanary (#1456)

Example usage:
```
./gradlew leakcanary-cli:run --args='analyze-process com.example.leakcanary'

./gradlew leakcanary-cli:run --args='dump-process com.example.leakcanary'

./gradlew leakcanary-cli:run --args='analyze-file /path/to/heapdump.hprof'
```

Also fixed a bug in ShortestPathFinder which did not ignore null references in object arrays | 2019-07-11 19:11:30 | eded1c96e84f37393857ba4de2580aec784b2391

Behavior change & bugfixes for retained count notification (#1433)

* Bugfix: when tapping the "dump heap" notification, if the GC found no retained instance we didn't use a distinct notification id to communicate that, and then soon after we'd dismiss the notification that let's the user know there is no retained instances on tap.
* Bugfix: we weren't running the GC when checking for retained instances and the count was under the threshold
* Change: we now update the notification and keep it around for 30 seconds when the count goes to 0
* Change: the "no retained instance" notification that shows on tap is identical and also auto dismisses after 30 seconds.
* Change: we're checking for retained references (and running the GC) every 2 seconds instead of 5.

Fixes #1427 | 2019-07-03 20:55:47 | 968083a915343d881bd63e40587c070fde543732

Update how to fix a leak | 2019-06-25 05:46:56 | 177e7fd12933d99eca7a526851c53e598a03bf90

Text rendering tests (#1378)

* Added test coverage for text rendering
* Fixed bug: labels were not rendered on the last node (leaking instance)
* Matched exclusions are now rendered on their own line

Fixes #1375
Fixes #1350 | 2019-06-04 09:32:11 | 1926cb1db73f9583e11c557dbf2e5d46e3896a6e

Thread name based exclusions (#1353)

* Readded support for exclusions of local variable based on thread names
* Renamed ThreadExclusion to JavaLocalExclusion
* Fixed bug: KeyedWeakReference was not always ignored because its superclass is has a weakly reachable exclusion.
* Fixed bug: all root nodes had the same visit order as the first non root enqueued item, making it possible for a non root node to be dequeued before we're done with all roots.
* Redded gc root sorting
* Added tests to cover all uncovered bugs
* Added support for parsing StackFrameRecord

Fixes #1339 | 2019-05-20 13:17:18 | 6c2ee609efda323e88a4964d31fc5a5f0532f776

Reachability => LeakStatus (#1340)

* Combined leaking information from inspectors to solving conflicts while keeping all reasons
* Made reason from view leak inspector more obvious, and added label data about internals
* Moved reachability into LeakTraceElement
* Reachability renamed to LeakNodeStatus and leaking / not leaking
* ReachabilityInspector and Labeler are now functions with type aliases

Related to #1336: should fix the crash, though it's still unclear why AppCompatButton was a gc root there. | 2019-05-07 14:56:59 | 01210bbbfaecb3bcb6057c62b2195366d3bfa4f9

Revamp notifications (#1335)

* New notification that shows the count of retained instances. Tapping it triggers a heap dump. Fixes #1325
* Notifications are now split into two channels: default for results, and low for everything else.
* New config options: LeakCanary.config.dumpHeapWhenDebugging (default false) and LeakCanary.config.retainedVisibleThreshold (default 5)
* Replaced notification int constants and timestamps with resource ids.
* Don't show background notifications in instant apps (#1197) | 2019-05-05 16:38:26 | b14d9bc9c0a87119137bc0998bdec9314186dfcf

Highlighting new leaks (#1334)

New leaks are leaks that have a leak group that doesn't exist in any prior analysis.

* The notification now reports the count of leaks, with a split of new, known, and won't fix.
* The analysis success screen shows new leaks
* Moved description prefixes to be computed rather than inserted in the DB

Fixes #1328 | 2019-05-05 09:37:38 | f9a0518d4ddd69b782b6302caa3e3039787038e4

LeakSentry can be disabled (#1332)

LeakCanary has an enabled config option. Default is on in debug builds off in release builds.

Fixes #1327 | 2019-05-04 17:52:47 | f74f60901f34c751e8b8798d626678aa6233c893

Revert "fix trailing spaces per checkstyle"

This reverts commit ff17f879ec92ec326f8b1c6b7b8d77a5266d6622. | 2019-05-04 08:04:21 | 03136ca7dc1680299d710f79ca885412a1564144

Add test coverage for heap analysis (#1329)

* Fixed bug when reachability inspectors conflicts (reachable should win and erase unreachable)
* Added back support for leaking instances being empty objects, strings, primitive arrays or any object that we otherwise don't follow to find shortest paths. | 2019-05-04 07:51:02 | 59558e655d537c7654c411eebfd840773a8b77c9

Introducing exclusion priority (#1317)

* Add segmented FIFO queue

Unified several queues into one segmented FIFO queue. This will enable us to add several levels of priority.

* Introducing exclusion priority

* "excludedLeak" is now known as "won't fix leak", which matches its reality better. It's a leak that is known and real yet we're not fixing.
* Exclusion.alwaysExclude is replaced with Exclusion.status, with 3 possible values: NEVER_REACHABLE, WONT_FIX_LEAK, WEAKLY_REACHABLE.
* The shortest path finder will now follow weak references after all other paths have been exhausted.
* Removed class exclusion, was confusing, replaced with less lazy approach of listing fields to exclude
* VIEWLOCATIONHOLDER_ROOT should not have been always excluded, fixed.

Fixes #1173 ... well kinda. Instead of "non leaking retained instances", LeakCanary will report weakly reachable traces. Not sure if that'll help but it's a foundation we can build on. | 2019-04-30 17:44:15 | b0eedc553995e354e2382b3378bf0348801cd3c5

AllFieldsLabeler & cleanups (#1316)

* Add new optional labeler that prints all fields (useful for debugging)
* Move deprecated AnalysisResult to perflib
* Made DefaultAnalysisResultListener an object | 2019-04-30 07:08:29 | b9ee5356db265412db39c4c341880f305fbf2c76

fix format | 2019-04-22 06:25:09 | 4a2b158913e5a9eb0d5c6fdfbf949a80fc1b2c6b

Rename default to perflib and experimental to default (#1282)

* Remove experimental from module names

* Remove experimental prefix, add perflib prefix:

* update docs | 2019-04-19 06:01:39 | 425a9f24deb72691b02cdc85f80d177c05afebc5

fix list | 2019-04-18 21:55:43 | 8e3f9d26e8d3555bf934b99ac062aabc3aba528f

fix broken master | 2019-04-10 15:00:30 | f067ae53e050c5f52f47237440a6ac7eee3ca94c

fix broken build due to typo | 2019-04-10 05:44:19 | 7d4ddb4ffe3c9b0f30a84848675452dded0d4115

Leaking information aligned below simple class name. (#1258)

Also fixed issue where extraString + exclusionString were showing after the squiggly line.

Before: 
``` 
┬
├─ java.lang.Thread
│                 Leaking: NO (it's a GC root)
│                 ↓ thread Thread.<Java Local>
│                                ~~~~~~~~~~~~~ (named 'Thread-4')
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                 Leaking: UNKNOWN
│                 ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                     ~~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) 
```
After: 
``` 
┬
├─ java.lang.Thread
│            Leaking: NO (it's a GC root)
│            ↓ thread Thread.<Java Local> (named 'Thread-4')
│                            ~~~~~~~~~~~~
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                         Leaking: UNKNOWN
│                         ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                              ~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) ``` | 2019-04-05 20:11:47 | a938855585c7cf2522ffbd143d4bb66a234eea66

Add share to Stack Overflow button when viewing a leak (#1252)

* Add share to Stack Overflow button when viewing a leak

* Add question tag, lengthen toast and fix build failure. | 2019-04-04 20:49:50 | 8724d2aaffc07904517a3b823867802ca43233ae

Check if serviceInfo.processName is null. When LeakCanary runs on a seperate process and that process for some reason does not have a assigned processName, then we will crash on a NullPointerException. Also a debug log explaining this. (#1225) | 2019-04-01 19:20:40 | 3efc43608ed71dc20b0ad1e0e80e33d15249666f

fix master broken | 2019-04-01 19:07:27 | fe42130029174681a708b7d8622412efbaf81e73

fix trailing spaces per checkstyle | 2019-03-29 22:34:58 | ff17f879ec92ec326f8b1c6b7b8d77a5266d6622

Fix GC Root bugs that missed leaks (#1168)

In Perflib, Snapshot.getGcRoots() only returns the GC roots from the first heap. Based on empirical evidence, it seems like Android has 4 heaps, and the GC Roots used to only be in the first heap, but more recent versions of Android have GC Roots in other heaps as well.

This means LeakCanary would sometimes show "No Leak Found" when there actually was a leak.

Fixes #1163 | 2019-01-10 23:32:27 | 64b6e5a41796ae1587c50c8cc860cea25f28f382

fix typo | 2018-10-17 00:43:01 | 044b1e4827bc71ec008dc3f7e43c78f58885f1e1

Fix LeakCanary toasting (#1116)

- Prior attempts to get it to work with the application context turned out to be buggy.
- This makes LeakCanary use whatever the current resumed activity is, if any.
- If there is no resumed activity, then the toast isn't displayed.

This supersedes #1080 | 2018-10-16 13:23:14 | 0e39e2eea79bc05bf7147a4074dd7163f7c401ff

fix the wrong word (#1111) | 2018-10-16 01:25:28 | 636b9b6c2b39c0c887c9ed78e904239db9bc131e

Merge pull request #1104 from IlyaGulya/bug/travis-ci-cache-fix

Fix travis caching and improve build time. | 2018-09-22 21:25:59 | 344728b906daf6d010f66bdf4ccc29ad8fedede5

Error prone 2.3.1 + suggested fix and specify version

See http://errorprone.info/bugpattern/StringSplitter | 2018-08-22 07:37:33 | a6b6960d73a1da9661f4e85254570bf5f867f954

Merge pull request #1089 from hzsweers/z/fixAnother

Quick followup to #1088 | 2018-08-22 03:15:15 | be973f5f5da6a3516aedab98e639690697617747

Merge pull request #1087 from Goddchen/patch-2

Updated german translation | 2018-08-20 13:52:47 | b43c279b3e1623c193e1dc81955527f70e93f822

Merge pull request #1063 from javmarina/patch-1

Fixed wrong versions in AndroidExcludedRefs | 2018-07-25 18:31:55 | 3b4ebe3e2571377f93e9a6976e021324502a0f78

Fixed wrong versions in AndroidExcludedRefs

Commit https://android.googlesource.com/platform/frameworks/base/+/27db46850b708070452c0ce49daf5f79503fbde6 introduced this issue. This commit was first included in Jelly Bean 4.3 (JELLY_BEAN_MR2), not Jelly Bean 4.1 (JELLY_BEAN)
Commit https://android.googlesource.com/platform/frameworks/base/+/5200e1cb07190a1f6874d72a4561064cad3ee3e0 fixes this issue and was first included in Oreo 8.0 (O). Nougat still has this memory leak. | 2018-07-24 18:24:59 | e4778b25f2c6e65ebc485d255e38586c7d45ec97

Merge pull request #1057 from square/py/ui_bug

Fix drawing of start line | 2018-07-20 22:21:19 | af96577a7d19e4df9f63d95fd9c3bfd2adcddb5d

Avoid Toast crashes

Showing a toast can crash on API 25 because the Window Manager can throw a BadTokenException when addView is called.

This change fixes it by configuring the toast manually and calling the window manager directly. This is based on https://github.com/pyricau/frenchtoast/blob/master/frenchtoast/src/main/java/frenchtoast/Mixture.java#L49 .

Fixes #844 | 2018-07-20 16:11:22 | c9ebc5cf5099c093bde5d3309b2692cb0e2016d8

Fixing setup bug | 2018-06-28 04:07:09 | 505933817cf6e2eb0dad4a78d4c7c35a072b9868

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

Text rendering tests (#1378)

* Added test coverage for text rendering
* Fixed bug: labels were not rendered on the last node (leaking instance)
* Matched exclusions are now rendered on their own line

Fixes #1375
Fixes #1350 | 2019-06-04 09:32:11 | 1926cb1db73f9583e11c557dbf2e5d46e3896a6e

Thread name based exclusions (#1353)

* Readded support for exclusions of local variable based on thread names
* Renamed ThreadExclusion to JavaLocalExclusion
* Fixed bug: KeyedWeakReference was not always ignored because its superclass is has a weakly reachable exclusion.
* Fixed bug: all root nodes had the same visit order as the first non root enqueued item, making it possible for a non root node to be dequeued before we're done with all roots.
* Redded gc root sorting
* Added tests to cover all uncovered bugs
* Added support for parsing StackFrameRecord

Fixes #1339 | 2019-05-20 13:17:18 | 6c2ee609efda323e88a4964d31fc5a5f0532f776

Reachability => LeakStatus (#1340)

* Combined leaking information from inspectors to solving conflicts while keeping all reasons
* Made reason from view leak inspector more obvious, and added label data about internals
* Moved reachability into LeakTraceElement
* Reachability renamed to LeakNodeStatus and leaking / not leaking
* ReachabilityInspector and Labeler are now functions with type aliases

Related to #1336: should fix the crash, though it's still unclear why AppCompatButton was a gc root there. | 2019-05-07 14:56:59 | 01210bbbfaecb3bcb6057c62b2195366d3bfa4f9

Revamp notifications (#1335)

* New notification that shows the count of retained instances. Tapping it triggers a heap dump. Fixes #1325
* Notifications are now split into two channels: default for results, and low for everything else.
* New config options: LeakCanary.config.dumpHeapWhenDebugging (default false) and LeakCanary.config.retainedVisibleThreshold (default 5)
* Replaced notification int constants and timestamps with resource ids.
* Don't show background notifications in instant apps (#1197) | 2019-05-05 16:38:26 | b14d9bc9c0a87119137bc0998bdec9314186dfcf

Highlighting new leaks (#1334)

New leaks are leaks that have a leak group that doesn't exist in any prior analysis.

* The notification now reports the count of leaks, with a split of new, known, and won't fix.
* The analysis success screen shows new leaks
* Moved description prefixes to be computed rather than inserted in the DB

Fixes #1328 | 2019-05-05 09:37:38 | f9a0518d4ddd69b782b6302caa3e3039787038e4

LeakSentry can be disabled (#1332)

LeakCanary has an enabled config option. Default is on in debug builds off in release builds.

Fixes #1327 | 2019-05-04 17:52:47 | f74f60901f34c751e8b8798d626678aa6233c893

Revert "fix trailing spaces per checkstyle"

This reverts commit ff17f879ec92ec326f8b1c6b7b8d77a5266d6622. | 2019-05-04 08:04:21 | 03136ca7dc1680299d710f79ca885412a1564144

Add test coverage for heap analysis (#1329)

* Fixed bug when reachability inspectors conflicts (reachable should win and erase unreachable)
* Added back support for leaking instances being empty objects, strings, primitive arrays or any object that we otherwise don't follow to find shortest paths. | 2019-05-04 07:51:02 | 59558e655d537c7654c411eebfd840773a8b77c9

Introducing exclusion priority (#1317)

* Add segmented FIFO queue

Unified several queues into one segmented FIFO queue. This will enable us to add several levels of priority.

* Introducing exclusion priority

* "excludedLeak" is now known as "won't fix leak", which matches its reality better. It's a leak that is known and real yet we're not fixing.
* Exclusion.alwaysExclude is replaced with Exclusion.status, with 3 possible values: NEVER_REACHABLE, WONT_FIX_LEAK, WEAKLY_REACHABLE.
* The shortest path finder will now follow weak references after all other paths have been exhausted.
* Removed class exclusion, was confusing, replaced with less lazy approach of listing fields to exclude
* VIEWLOCATIONHOLDER_ROOT should not have been always excluded, fixed.

Fixes #1173 ... well kinda. Instead of "non leaking retained instances", LeakCanary will report weakly reachable traces. Not sure if that'll help but it's a foundation we can build on. | 2019-04-30 17:44:15 | b0eedc553995e354e2382b3378bf0348801cd3c5

AllFieldsLabeler & cleanups (#1316)

* Add new optional labeler that prints all fields (useful for debugging)
* Move deprecated AnalysisResult to perflib
* Made DefaultAnalysisResultListener an object | 2019-04-30 07:08:29 | b9ee5356db265412db39c4c341880f305fbf2c76

fix format | 2019-04-22 06:25:09 | 4a2b158913e5a9eb0d5c6fdfbf949a80fc1b2c6b

Rename default to perflib and experimental to default (#1282)

* Remove experimental from module names

* Remove experimental prefix, add perflib prefix:

* update docs | 2019-04-19 06:01:39 | 425a9f24deb72691b02cdc85f80d177c05afebc5

fix list | 2019-04-18 21:55:43 | 8e3f9d26e8d3555bf934b99ac062aabc3aba528f

fix broken master | 2019-04-10 15:00:30 | f067ae53e050c5f52f47237440a6ac7eee3ca94c

fix broken build due to typo | 2019-04-10 05:44:19 | 7d4ddb4ffe3c9b0f30a84848675452dded0d4115

Leaking information aligned below simple class name. (#1258)

Also fixed issue where extraString + exclusionString were showing after the squiggly line.

Before: 
``` 
┬
├─ java.lang.Thread
│                 Leaking: NO (it's a GC root)
│                 ↓ thread Thread.<Java Local>
│                                ~~~~~~~~~~~~~ (named 'Thread-4')
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                 Leaking: UNKNOWN
│                 ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                     ~~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) 
```
After: 
``` 
┬
├─ java.lang.Thread
│            Leaking: NO (it's a GC root)
│            ↓ thread Thread.<Java Local> (named 'Thread-4')
│                            ~~~~~~~~~~~~
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                         Leaking: UNKNOWN
│                         ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                              ~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) ``` | 2019-04-05 20:11:47 | a938855585c7cf2522ffbd143d4bb66a234eea66

Add share to Stack Overflow button when viewing a leak (#1252)

* Add share to Stack Overflow button when viewing a leak

* Add question tag, lengthen toast and fix build failure. | 2019-04-04 20:49:50 | 8724d2aaffc07904517a3b823867802ca43233ae

Check if serviceInfo.processName is null. When LeakCanary runs on a seperate process and that process for some reason does not have a assigned processName, then we will crash on a NullPointerException. Also a debug log explaining this. (#1225) | 2019-04-01 19:20:40 | 3efc43608ed71dc20b0ad1e0e80e33d15249666f

fix master broken | 2019-04-01 19:07:27 | fe42130029174681a708b7d8622412efbaf81e73

fix trailing spaces per checkstyle | 2019-03-29 22:34:58 | ff17f879ec92ec326f8b1c6b7b8d77a5266d6622

Fix GC Root bugs that missed leaks (#1168)

In Perflib, Snapshot.getGcRoots() only returns the GC roots from the first heap. Based on empirical evidence, it seems like Android has 4 heaps, and the GC Roots used to only be in the first heap, but more recent versions of Android have GC Roots in other heaps as well.

This means LeakCanary would sometimes show "No Leak Found" when there actually was a leak.

Fixes #1163 | 2019-01-10 23:32:27 | 64b6e5a41796ae1587c50c8cc860cea25f28f382

fix typo | 2018-10-17 00:43:01 | 044b1e4827bc71ec008dc3f7e43c78f58885f1e1

Fix LeakCanary toasting (#1116)

- Prior attempts to get it to work with the application context turned out to be buggy.
- This makes LeakCanary use whatever the current resumed activity is, if any.
- If there is no resumed activity, then the toast isn't displayed.

This supersedes #1080 | 2018-10-16 13:23:14 | 0e39e2eea79bc05bf7147a4074dd7163f7c401ff

fix the wrong word (#1111) | 2018-10-16 01:25:28 | 636b9b6c2b39c0c887c9ed78e904239db9bc131e

Merge pull request #1104 from IlyaGulya/bug/travis-ci-cache-fix

Fix travis caching and improve build time. | 2018-09-22 21:25:59 | 344728b906daf6d010f66bdf4ccc29ad8fedede5

Error prone 2.3.1 + suggested fix and specify version

See http://errorprone.info/bugpattern/StringSplitter | 2018-08-22 07:37:33 | a6b6960d73a1da9661f4e85254570bf5f867f954

Merge pull request #1089 from hzsweers/z/fixAnother

Quick followup to #1088 | 2018-08-22 03:15:15 | be973f5f5da6a3516aedab98e639690697617747

Merge pull request #1087 from Goddchen/patch-2

Updated german translation | 2018-08-20 13:52:47 | b43c279b3e1623c193e1dc81955527f70e93f822

Merge pull request #1063 from javmarina/patch-1

Fixed wrong versions in AndroidExcludedRefs | 2018-07-25 18:31:55 | 3b4ebe3e2571377f93e9a6976e021324502a0f78

Fixed wrong versions in AndroidExcludedRefs

Commit https://android.googlesource.com/platform/frameworks/base/+/27db46850b708070452c0ce49daf5f79503fbde6 introduced this issue. This commit was first included in Jelly Bean 4.3 (JELLY_BEAN_MR2), not Jelly Bean 4.1 (JELLY_BEAN)
Commit https://android.googlesource.com/platform/frameworks/base/+/5200e1cb07190a1f6874d72a4561064cad3ee3e0 fixes this issue and was first included in Oreo 8.0 (O). Nougat still has this memory leak. | 2018-07-24 18:24:59 | e4778b25f2c6e65ebc485d255e38586c7d45ec97

Merge pull request #1057 from square/py/ui_bug

Fix drawing of start line | 2018-07-20 22:21:19 | af96577a7d19e4df9f63d95fd9c3bfd2adcddb5d

Avoid Toast crashes

Showing a toast can crash on API 25 because the Window Manager can throw a BadTokenException when addView is called.

This change fixes it by configuring the toast manually and calling the window manager directly. This is based on https://github.com/pyricau/frenchtoast/blob/master/frenchtoast/src/main/java/frenchtoast/Mixture.java#L49 .

Fixes #844 | 2018-07-20 16:11:22 | c9ebc5cf5099c093bde5d3309b2692cb0e2016d8

Fixing setup bug | 2018-06-28 04:07:09 | 505933817cf6e2eb0dad4a78d4c7c35a072b9868

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

Leaking information aligned below simple class name. (#1258)

Also fixed issue where extraString + exclusionString were showing after the squiggly line.

Before: 
``` 
┬
├─ java.lang.Thread
│                 Leaking: NO (it's a GC root)
│                 ↓ thread Thread.<Java Local>
│                                ~~~~~~~~~~~~~ (named 'Thread-4')
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                 Leaking: UNKNOWN
│                 ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                     ~~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) 
```
After: 
``` 
┬
├─ java.lang.Thread
│            Leaking: NO (it's a GC root)
│            ↓ thread Thread.<Java Local> (named 'Thread-4')
│                            ~~~~~~~~~~~~
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                         Leaking: UNKNOWN
│                         ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                              ~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) ``` | 2019-04-05 20:11:47 | a938855585c7cf2522ffbd143d4bb66a234eea66

Add share to Stack Overflow button when viewing a leak (#1252)

* Add share to Stack Overflow button when viewing a leak

* Add question tag, lengthen toast and fix build failure. | 2019-04-04 20:49:50 | 8724d2aaffc07904517a3b823867802ca43233ae

Check if serviceInfo.processName is null. When LeakCanary runs on a seperate process and that process for some reason does not have a assigned processName, then we will crash on a NullPointerException. Also a debug log explaining this. (#1225) | 2019-04-01 19:20:40 | 3efc43608ed71dc20b0ad1e0e80e33d15249666f

fix master broken | 2019-04-01 19:07:27 | fe42130029174681a708b7d8622412efbaf81e73

Fix GC Root bugs that missed leaks (#1168)

In Perflib, Snapshot.getGcRoots() only returns the GC roots from the first heap. Based on empirical evidence, it seems like Android has 4 heaps, and the GC Roots used to only be in the first heap, but more recent versions of Android have GC Roots in other heaps as well.

This means LeakCanary would sometimes show "No Leak Found" when there actually was a leak.

Fixes #1163 | 2019-01-10 23:32:27 | 64b6e5a41796ae1587c50c8cc860cea25f28f382

fix typo | 2018-10-17 00:43:01 | 044b1e4827bc71ec008dc3f7e43c78f58885f1e1

Fix LeakCanary toasting (#1116)

- Prior attempts to get it to work with the application context turned out to be buggy.
- This makes LeakCanary use whatever the current resumed activity is, if any.
- If there is no resumed activity, then the toast isn't displayed.

This supersedes #1080 | 2018-10-16 13:23:14 | 0e39e2eea79bc05bf7147a4074dd7163f7c401ff

fix the wrong word (#1111) | 2018-10-16 01:25:28 | 636b9b6c2b39c0c887c9ed78e904239db9bc131e

Merge pull request #1104 from IlyaGulya/bug/travis-ci-cache-fix

Fix travis caching and improve build time. | 2018-09-22 21:25:59 | 344728b906daf6d010f66bdf4ccc29ad8fedede5

Error prone 2.3.1 + suggested fix and specify version

See http://errorprone.info/bugpattern/StringSplitter | 2018-08-22 07:37:33 | a6b6960d73a1da9661f4e85254570bf5f867f954

Merge pull request #1089 from hzsweers/z/fixAnother

Quick followup to #1088 | 2018-08-22 03:15:15 | be973f5f5da6a3516aedab98e639690697617747

Merge pull request #1087 from Goddchen/patch-2

Updated german translation | 2018-08-20 13:52:47 | b43c279b3e1623c193e1dc81955527f70e93f822

Merge pull request #1063 from javmarina/patch-1

Fixed wrong versions in AndroidExcludedRefs | 2018-07-25 18:31:55 | 3b4ebe3e2571377f93e9a6976e021324502a0f78

Fixed wrong versions in AndroidExcludedRefs

Commit https://android.googlesource.com/platform/frameworks/base/+/27db46850b708070452c0ce49daf5f79503fbde6 introduced this issue. This commit was first included in Jelly Bean 4.3 (JELLY_BEAN_MR2), not Jelly Bean 4.1 (JELLY_BEAN)
Commit https://android.googlesource.com/platform/frameworks/base/+/5200e1cb07190a1f6874d72a4561064cad3ee3e0 fixes this issue and was first included in Oreo 8.0 (O). Nougat still has this memory leak. | 2018-07-24 18:24:59 | e4778b25f2c6e65ebc485d255e38586c7d45ec97

Merge pull request #1057 from square/py/ui_bug

Fix drawing of start line | 2018-07-20 22:21:19 | af96577a7d19e4df9f63d95fd9c3bfd2adcddb5d

Avoid Toast crashes

Showing a toast can crash on API 25 because the Window Manager can throw a BadTokenException when addView is called.

This change fixes it by configuring the toast manually and calling the window manager directly. This is based on https://github.com/pyricau/frenchtoast/blob/master/frenchtoast/src/main/java/frenchtoast/Mixture.java#L49 .

Fixes #844 | 2018-07-20 16:11:22 | c9ebc5cf5099c093bde5d3309b2692cb0e2016d8

Fixing setup bug | 2018-06-28 04:07:09 | 505933817cf6e2eb0dad4a78d4c7c35a072b9868

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

Merge pull request #1559 from bric3/fix-primitive-array-dump-skip

Fixes the primitive array dump record skipping | 2019-09-09 22:16:57 | c0fd4d812cb8d6c5723231e501c121da2af86f06

Parsing and applying proguard mapping during heap analysis (#1542)

* Parsing and applying proguard mapping during heap analysis

* Parsing and applying proguard mapping during heap analysis

* Rebased onto master

* Post review changes and updated shark-cli to support mapping files

* Post review fixes

* Moving proguard mapping reader out of the analyzer and formatting fixes | 2019-08-30 16:54:20 | 66182a52069d9be59d0af6220aa9afd74218aa9b

fix images | 2019-08-27 20:02:50 | 8f5030e9faa8690217e1bd436274a3de5b9d3fb3

fix image links in docs | 2019-08-27 19:59:20 | edca56a947278508350bfa5dd33d3fa10699001f

Merge pull request #1549 from Armaxis/patch-1

Added section about using Detekt to Contributing | 2019-08-24 22:16:26 | c923d14909888860a99d5899af17f5b52c9b000f

Revert "Replaced accessor with a call to setter to fix the build issue"

This reverts commit 82db0398 | 2019-08-17 02:21:08 | c570cb9b0fd7bd7fcc88c4d3b529df8837e98fdc

Replaced accessor with a call to setter to fix the build issue | 2019-08-16 04:32:25 | 82db039843303044f91d36ba7c43595ab59bacd5

fix typo | 2019-08-02 15:31:17 | a2452f61e78e689efb59adaf71384d74447578b0

Add / fix android inspectors (#1491)

* Added MortarScope and ViewRootImpl inspectors
* Fixed the ContextWrapper inspector

Fixes #1490
Fixes #1389 | 2019-07-25 22:50:48 | 915f8359690a016a09e66608a041454b9c8c52cb

Documenting public APIs (#1476)

Also fixed naming and other things that weren't right.

Fixes #1474 | 2019-07-19 06:57:25 | 41c69a5d424b4236114c5ce1b077afdad38e57a5

Adding CLI for LeakCanary (#1456)

Example usage:
```
./gradlew leakcanary-cli:run --args='analyze-process com.example.leakcanary'

./gradlew leakcanary-cli:run --args='dump-process com.example.leakcanary'

./gradlew leakcanary-cli:run --args='analyze-file /path/to/heapdump.hprof'
```

Also fixed a bug in ShortestPathFinder which did not ignore null references in object arrays | 2019-07-11 19:11:30 | eded1c96e84f37393857ba4de2580aec784b2391

Behavior change & bugfixes for retained count notification (#1433)

* Bugfix: when tapping the "dump heap" notification, if the GC found no retained instance we didn't use a distinct notification id to communicate that, and then soon after we'd dismiss the notification that let's the user know there is no retained instances on tap.
* Bugfix: we weren't running the GC when checking for retained instances and the count was under the threshold
* Change: we now update the notification and keep it around for 30 seconds when the count goes to 0
* Change: the "no retained instance" notification that shows on tap is identical and also auto dismisses after 30 seconds.
* Change: we're checking for retained references (and running the GC) every 2 seconds instead of 5.

Fixes #1427 | 2019-07-03 20:55:47 | 968083a915343d881bd63e40587c070fde543732

Update how to fix a leak | 2019-06-25 05:46:56 | 177e7fd12933d99eca7a526851c53e598a03bf90

Text rendering tests (#1378)

* Added test coverage for text rendering
* Fixed bug: labels were not rendered on the last node (leaking instance)
* Matched exclusions are now rendered on their own line

Fixes #1375
Fixes #1350 | 2019-06-04 09:32:11 | 1926cb1db73f9583e11c557dbf2e5d46e3896a6e

Thread name based exclusions (#1353)

* Readded support for exclusions of local variable based on thread names
* Renamed ThreadExclusion to JavaLocalExclusion
* Fixed bug: KeyedWeakReference was not always ignored because its superclass is has a weakly reachable exclusion.
* Fixed bug: all root nodes had the same visit order as the first non root enqueued item, making it possible for a non root node to be dequeued before we're done with all roots.
* Redded gc root sorting
* Added tests to cover all uncovered bugs
* Added support for parsing StackFrameRecord

Fixes #1339 | 2019-05-20 13:17:18 | 6c2ee609efda323e88a4964d31fc5a5f0532f776

Reachability => LeakStatus (#1340)

* Combined leaking information from inspectors to solving conflicts while keeping all reasons
* Made reason from view leak inspector more obvious, and added label data about internals
* Moved reachability into LeakTraceElement
* Reachability renamed to LeakNodeStatus and leaking / not leaking
* ReachabilityInspector and Labeler are now functions with type aliases

Related to #1336: should fix the crash, though it's still unclear why AppCompatButton was a gc root there. | 2019-05-07 14:56:59 | 01210bbbfaecb3bcb6057c62b2195366d3bfa4f9

Revamp notifications (#1335)

* New notification that shows the count of retained instances. Tapping it triggers a heap dump. Fixes #1325
* Notifications are now split into two channels: default for results, and low for everything else.
* New config options: LeakCanary.config.dumpHeapWhenDebugging (default false) and LeakCanary.config.retainedVisibleThreshold (default 5)
* Replaced notification int constants and timestamps with resource ids.
* Don't show background notifications in instant apps (#1197) | 2019-05-05 16:38:26 | b14d9bc9c0a87119137bc0998bdec9314186dfcf

Highlighting new leaks (#1334)

New leaks are leaks that have a leak group that doesn't exist in any prior analysis.

* The notification now reports the count of leaks, with a split of new, known, and won't fix.
* The analysis success screen shows new leaks
* Moved description prefixes to be computed rather than inserted in the DB

Fixes #1328 | 2019-05-05 09:37:38 | f9a0518d4ddd69b782b6302caa3e3039787038e4

LeakSentry can be disabled (#1332)

LeakCanary has an enabled config option. Default is on in debug builds off in release builds.

Fixes #1327 | 2019-05-04 17:52:47 | f74f60901f34c751e8b8798d626678aa6233c893

Revert "fix trailing spaces per checkstyle"

This reverts commit ff17f879ec92ec326f8b1c6b7b8d77a5266d6622. | 2019-05-04 08:04:21 | 03136ca7dc1680299d710f79ca885412a1564144

Add test coverage for heap analysis (#1329)

* Fixed bug when reachability inspectors conflicts (reachable should win and erase unreachable)
* Added back support for leaking instances being empty objects, strings, primitive arrays or any object that we otherwise don't follow to find shortest paths. | 2019-05-04 07:51:02 | 59558e655d537c7654c411eebfd840773a8b77c9

Introducing exclusion priority (#1317)

* Add segmented FIFO queue

Unified several queues into one segmented FIFO queue. This will enable us to add several levels of priority.

* Introducing exclusion priority

* "excludedLeak" is now known as "won't fix leak", which matches its reality better. It's a leak that is known and real yet we're not fixing.
* Exclusion.alwaysExclude is replaced with Exclusion.status, with 3 possible values: NEVER_REACHABLE, WONT_FIX_LEAK, WEAKLY_REACHABLE.
* The shortest path finder will now follow weak references after all other paths have been exhausted.
* Removed class exclusion, was confusing, replaced with less lazy approach of listing fields to exclude
* VIEWLOCATIONHOLDER_ROOT should not have been always excluded, fixed.

Fixes #1173 ... well kinda. Instead of "non leaking retained instances", LeakCanary will report weakly reachable traces. Not sure if that'll help but it's a foundation we can build on. | 2019-04-30 17:44:15 | b0eedc553995e354e2382b3378bf0348801cd3c5

AllFieldsLabeler & cleanups (#1316)

* Add new optional labeler that prints all fields (useful for debugging)
* Move deprecated AnalysisResult to perflib
* Made DefaultAnalysisResultListener an object | 2019-04-30 07:08:29 | b9ee5356db265412db39c4c341880f305fbf2c76

fix format | 2019-04-22 06:25:09 | 4a2b158913e5a9eb0d5c6fdfbf949a80fc1b2c6b

Rename default to perflib and experimental to default (#1282)

* Remove experimental from module names

* Remove experimental prefix, add perflib prefix:

* update docs | 2019-04-19 06:01:39 | 425a9f24deb72691b02cdc85f80d177c05afebc5

fix list | 2019-04-18 21:55:43 | 8e3f9d26e8d3555bf934b99ac062aabc3aba528f

fix broken master | 2019-04-10 15:00:30 | f067ae53e050c5f52f47237440a6ac7eee3ca94c

fix broken build due to typo | 2019-04-10 05:44:19 | 7d4ddb4ffe3c9b0f30a84848675452dded0d4115

Leaking information aligned below simple class name. (#1258)

Also fixed issue where extraString + exclusionString were showing after the squiggly line.

Before: 
``` 
┬
├─ java.lang.Thread
│                 Leaking: NO (it's a GC root)
│                 ↓ thread Thread.<Java Local>
│                                ~~~~~~~~~~~~~ (named 'Thread-4')
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                 Leaking: UNKNOWN
│                 ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                     ~~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) 
```
After: 
``` 
┬
├─ java.lang.Thread
│            Leaking: NO (it's a GC root)
│            ↓ thread Thread.<Java Local> (named 'Thread-4')
│                            ~~~~~~~~~~~~
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                         Leaking: UNKNOWN
│                         ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                              ~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) ``` | 2019-04-05 20:11:47 | a938855585c7cf2522ffbd143d4bb66a234eea66

Add share to Stack Overflow button when viewing a leak (#1252)

* Add share to Stack Overflow button when viewing a leak

* Add question tag, lengthen toast and fix build failure. | 2019-04-04 20:49:50 | 8724d2aaffc07904517a3b823867802ca43233ae

Check if serviceInfo.processName is null. When LeakCanary runs on a seperate process and that process for some reason does not have a assigned processName, then we will crash on a NullPointerException. Also a debug log explaining this. (#1225) | 2019-04-01 19:20:40 | 3efc43608ed71dc20b0ad1e0e80e33d15249666f

fix master broken | 2019-04-01 19:07:27 | fe42130029174681a708b7d8622412efbaf81e73

fix trailing spaces per checkstyle | 2019-03-29 22:34:58 | ff17f879ec92ec326f8b1c6b7b8d77a5266d6622

Fix GC Root bugs that missed leaks (#1168)

In Perflib, Snapshot.getGcRoots() only returns the GC roots from the first heap. Based on empirical evidence, it seems like Android has 4 heaps, and the GC Roots used to only be in the first heap, but more recent versions of Android have GC Roots in other heaps as well.

This means LeakCanary would sometimes show "No Leak Found" when there actually was a leak.

Fixes #1163 | 2019-01-10 23:32:27 | 64b6e5a41796ae1587c50c8cc860cea25f28f382

fix typo | 2018-10-17 00:43:01 | 044b1e4827bc71ec008dc3f7e43c78f58885f1e1

Fix LeakCanary toasting (#1116)

- Prior attempts to get it to work with the application context turned out to be buggy.
- This makes LeakCanary use whatever the current resumed activity is, if any.
- If there is no resumed activity, then the toast isn't displayed.

This supersedes #1080 | 2018-10-16 13:23:14 | 0e39e2eea79bc05bf7147a4074dd7163f7c401ff

fix the wrong word (#1111) | 2018-10-16 01:25:28 | 636b9b6c2b39c0c887c9ed78e904239db9bc131e

Merge pull request #1104 from IlyaGulya/bug/travis-ci-cache-fix

Fix travis caching and improve build time. | 2018-09-22 21:25:59 | 344728b906daf6d010f66bdf4ccc29ad8fedede5

Error prone 2.3.1 + suggested fix and specify version

See http://errorprone.info/bugpattern/StringSplitter | 2018-08-22 07:37:33 | a6b6960d73a1da9661f4e85254570bf5f867f954

Merge pull request #1089 from hzsweers/z/fixAnother

Quick followup to #1088 | 2018-08-22 03:15:15 | be973f5f5da6a3516aedab98e639690697617747

Merge pull request #1087 from Goddchen/patch-2

Updated german translation | 2018-08-20 13:52:47 | b43c279b3e1623c193e1dc81955527f70e93f822

Merge pull request #1063 from javmarina/patch-1

Fixed wrong versions in AndroidExcludedRefs | 2018-07-25 18:31:55 | 3b4ebe3e2571377f93e9a6976e021324502a0f78

Fixed wrong versions in AndroidExcludedRefs

Commit https://android.googlesource.com/platform/frameworks/base/+/27db46850b708070452c0ce49daf5f79503fbde6 introduced this issue. This commit was first included in Jelly Bean 4.3 (JELLY_BEAN_MR2), not Jelly Bean 4.1 (JELLY_BEAN)
Commit https://android.googlesource.com/platform/frameworks/base/+/5200e1cb07190a1f6874d72a4561064cad3ee3e0 fixes this issue and was first included in Oreo 8.0 (O). Nougat still has this memory leak. | 2018-07-24 18:24:59 | e4778b25f2c6e65ebc485d255e38586c7d45ec97

Merge pull request #1057 from square/py/ui_bug

Fix drawing of start line | 2018-07-20 22:21:19 | af96577a7d19e4df9f63d95fd9c3bfd2adcddb5d

Avoid Toast crashes

Showing a toast can crash on API 25 because the Window Manager can throw a BadTokenException when addView is called.

This change fixes it by configuring the toast manually and calling the window manager directly. This is based on https://github.com/pyricau/frenchtoast/blob/master/frenchtoast/src/main/java/frenchtoast/Mixture.java#L49 .

Fixes #844 | 2018-07-20 16:11:22 | c9ebc5cf5099c093bde5d3309b2692cb0e2016d8

Fixing setup bug | 2018-06-28 04:07:09 | 505933817cf6e2eb0dad4a78d4c7c35a072b9868

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

Avoid Toast crashes

Showing a toast can crash on API 25 because the Window Manager can throw a BadTokenException when addView is called.

This change fixes it by configuring the toast manually and calling the window manager directly. This is based on https://github.com/pyricau/frenchtoast/blob/master/frenchtoast/src/main/java/frenchtoast/Mixture.java#L49 .

Fixes #844 | 2018-07-20 16:11:22 | c9ebc5cf5099c093bde5d3309b2692cb0e2016d8

Fixing setup bug | 2018-06-28 04:07:09 | 505933817cf6e2eb0dad4a78d4c7c35a072b9868

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

Merge pull request #1559 from bric3/fix-primitive-array-dump-skip

Fixes the primitive array dump record skipping | 2019-09-09 22:16:57 | c0fd4d812cb8d6c5723231e501c121da2af86f06

Parsing and applying proguard mapping during heap analysis (#1542)

* Parsing and applying proguard mapping during heap analysis

* Parsing and applying proguard mapping during heap analysis

* Rebased onto master

* Post review changes and updated shark-cli to support mapping files

* Post review fixes

* Moving proguard mapping reader out of the analyzer and formatting fixes | 2019-08-30 16:54:20 | 66182a52069d9be59d0af6220aa9afd74218aa9b

fix images | 2019-08-27 20:02:50 | 8f5030e9faa8690217e1bd436274a3de5b9d3fb3

fix image links in docs | 2019-08-27 19:59:20 | edca56a947278508350bfa5dd33d3fa10699001f

Merge pull request #1549 from Armaxis/patch-1

Added section about using Detekt to Contributing | 2019-08-24 22:16:26 | c923d14909888860a99d5899af17f5b52c9b000f

Revert "Replaced accessor with a call to setter to fix the build issue"

This reverts commit 82db0398 | 2019-08-17 02:21:08 | c570cb9b0fd7bd7fcc88c4d3b529df8837e98fdc

Replaced accessor with a call to setter to fix the build issue | 2019-08-16 04:32:25 | 82db039843303044f91d36ba7c43595ab59bacd5

fix typo | 2019-08-02 15:31:17 | a2452f61e78e689efb59adaf71384d74447578b0

Add / fix android inspectors (#1491)

* Added MortarScope and ViewRootImpl inspectors
* Fixed the ContextWrapper inspector

Fixes #1490
Fixes #1389 | 2019-07-25 22:50:48 | 915f8359690a016a09e66608a041454b9c8c52cb

Documenting public APIs (#1476)

Also fixed naming and other things that weren't right.

Fixes #1474 | 2019-07-19 06:57:25 | 41c69a5d424b4236114c5ce1b077afdad38e57a5

Adding CLI for LeakCanary (#1456)

Example usage:
```
./gradlew leakcanary-cli:run --args='analyze-process com.example.leakcanary'

./gradlew leakcanary-cli:run --args='dump-process com.example.leakcanary'

./gradlew leakcanary-cli:run --args='analyze-file /path/to/heapdump.hprof'
```

Also fixed a bug in ShortestPathFinder which did not ignore null references in object arrays | 2019-07-11 19:11:30 | eded1c96e84f37393857ba4de2580aec784b2391

Behavior change & bugfixes for retained count notification (#1433)

* Bugfix: when tapping the "dump heap" notification, if the GC found no retained instance we didn't use a distinct notification id to communicate that, and then soon after we'd dismiss the notification that let's the user know there is no retained instances on tap.
* Bugfix: we weren't running the GC when checking for retained instances and the count was under the threshold
* Change: we now update the notification and keep it around for 30 seconds when the count goes to 0
* Change: the "no retained instance" notification that shows on tap is identical and also auto dismisses after 30 seconds.
* Change: we're checking for retained references (and running the GC) every 2 seconds instead of 5.

Fixes #1427 | 2019-07-03 20:55:47 | 968083a915343d881bd63e40587c070fde543732

Update how to fix a leak | 2019-06-25 05:46:56 | 177e7fd12933d99eca7a526851c53e598a03bf90

Text rendering tests (#1378)

* Added test coverage for text rendering
* Fixed bug: labels were not rendered on the last node (leaking instance)
* Matched exclusions are now rendered on their own line

Fixes #1375
Fixes #1350 | 2019-06-04 09:32:11 | 1926cb1db73f9583e11c557dbf2e5d46e3896a6e

Thread name based exclusions (#1353)

* Readded support for exclusions of local variable based on thread names
* Renamed ThreadExclusion to JavaLocalExclusion
* Fixed bug: KeyedWeakReference was not always ignored because its superclass is has a weakly reachable exclusion.
* Fixed bug: all root nodes had the same visit order as the first non root enqueued item, making it possible for a non root node to be dequeued before we're done with all roots.
* Redded gc root sorting
* Added tests to cover all uncovered bugs
* Added support for parsing StackFrameRecord

Fixes #1339 | 2019-05-20 13:17:18 | 6c2ee609efda323e88a4964d31fc5a5f0532f776

Reachability => LeakStatus (#1340)

* Combined leaking information from inspectors to solving conflicts while keeping all reasons
* Made reason from view leak inspector more obvious, and added label data about internals
* Moved reachability into LeakTraceElement
* Reachability renamed to LeakNodeStatus and leaking / not leaking
* ReachabilityInspector and Labeler are now functions with type aliases

Related to #1336: should fix the crash, though it's still unclear why AppCompatButton was a gc root there. | 2019-05-07 14:56:59 | 01210bbbfaecb3bcb6057c62b2195366d3bfa4f9

Revamp notifications (#1335)

* New notification that shows the count of retained instances. Tapping it triggers a heap dump. Fixes #1325
* Notifications are now split into two channels: default for results, and low for everything else.
* New config options: LeakCanary.config.dumpHeapWhenDebugging (default false) and LeakCanary.config.retainedVisibleThreshold (default 5)
* Replaced notification int constants and timestamps with resource ids.
* Don't show background notifications in instant apps (#1197) | 2019-05-05 16:38:26 | b14d9bc9c0a87119137bc0998bdec9314186dfcf

Highlighting new leaks (#1334)

New leaks are leaks that have a leak group that doesn't exist in any prior analysis.

* The notification now reports the count of leaks, with a split of new, known, and won't fix.
* The analysis success screen shows new leaks
* Moved description prefixes to be computed rather than inserted in the DB

Fixes #1328 | 2019-05-05 09:37:38 | f9a0518d4ddd69b782b6302caa3e3039787038e4

LeakSentry can be disabled (#1332)

LeakCanary has an enabled config option. Default is on in debug builds off in release builds.

Fixes #1327 | 2019-05-04 17:52:47 | f74f60901f34c751e8b8798d626678aa6233c893

Revert "fix trailing spaces per checkstyle"

This reverts commit ff17f879ec92ec326f8b1c6b7b8d77a5266d6622. | 2019-05-04 08:04:21 | 03136ca7dc1680299d710f79ca885412a1564144

Add test coverage for heap analysis (#1329)

* Fixed bug when reachability inspectors conflicts (reachable should win and erase unreachable)
* Added back support for leaking instances being empty objects, strings, primitive arrays or any object that we otherwise don't follow to find shortest paths. | 2019-05-04 07:51:02 | 59558e655d537c7654c411eebfd840773a8b77c9

Introducing exclusion priority (#1317)

* Add segmented FIFO queue

Unified several queues into one segmented FIFO queue. This will enable us to add several levels of priority.

* Introducing exclusion priority

* "excludedLeak" is now known as "won't fix leak", which matches its reality better. It's a leak that is known and real yet we're not fixing.
* Exclusion.alwaysExclude is replaced with Exclusion.status, with 3 possible values: NEVER_REACHABLE, WONT_FIX_LEAK, WEAKLY_REACHABLE.
* The shortest path finder will now follow weak references after all other paths have been exhausted.
* Removed class exclusion, was confusing, replaced with less lazy approach of listing fields to exclude
* VIEWLOCATIONHOLDER_ROOT should not have been always excluded, fixed.

Fixes #1173 ... well kinda. Instead of "non leaking retained instances", LeakCanary will report weakly reachable traces. Not sure if that'll help but it's a foundation we can build on. | 2019-04-30 17:44:15 | b0eedc553995e354e2382b3378bf0348801cd3c5

AllFieldsLabeler & cleanups (#1316)

* Add new optional labeler that prints all fields (useful for debugging)
* Move deprecated AnalysisResult to perflib
* Made DefaultAnalysisResultListener an object | 2019-04-30 07:08:29 | b9ee5356db265412db39c4c341880f305fbf2c76

fix format | 2019-04-22 06:25:09 | 4a2b158913e5a9eb0d5c6fdfbf949a80fc1b2c6b

Rename default to perflib and experimental to default (#1282)

* Remove experimental from module names

* Remove experimental prefix, add perflib prefix:

* update docs | 2019-04-19 06:01:39 | 425a9f24deb72691b02cdc85f80d177c05afebc5

fix list | 2019-04-18 21:55:43 | 8e3f9d26e8d3555bf934b99ac062aabc3aba528f

fix broken master | 2019-04-10 15:00:30 | f067ae53e050c5f52f47237440a6ac7eee3ca94c

fix broken build due to typo | 2019-04-10 05:44:19 | 7d4ddb4ffe3c9b0f30a84848675452dded0d4115

Leaking information aligned below simple class name. (#1258)

Also fixed issue where extraString + exclusionString were showing after the squiggly line.

Before: 
``` 
┬
├─ java.lang.Thread
│                 Leaking: NO (it's a GC root)
│                 ↓ thread Thread.<Java Local>
│                                ~~~~~~~~~~~~~ (named 'Thread-4')
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                 Leaking: UNKNOWN
│                 ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                     ~~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) 
```
After: 
``` 
┬
├─ java.lang.Thread
│            Leaking: NO (it's a GC root)
│            ↓ thread Thread.<Java Local> (named 'Thread-4')
│                            ~~~~~~~~~~~~
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                         Leaking: UNKNOWN
│                         ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                              ~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) ``` | 2019-04-05 20:11:47 | a938855585c7cf2522ffbd143d4bb66a234eea66

Add share to Stack Overflow button when viewing a leak (#1252)

* Add share to Stack Overflow button when viewing a leak

* Add question tag, lengthen toast and fix build failure. | 2019-04-04 20:49:50 | 8724d2aaffc07904517a3b823867802ca43233ae

Check if serviceInfo.processName is null. When LeakCanary runs on a seperate process and that process for some reason does not have a assigned processName, then we will crash on a NullPointerException. Also a debug log explaining this. (#1225) | 2019-04-01 19:20:40 | 3efc43608ed71dc20b0ad1e0e80e33d15249666f

fix master broken | 2019-04-01 19:07:27 | fe42130029174681a708b7d8622412efbaf81e73

fix trailing spaces per checkstyle | 2019-03-29 22:34:58 | ff17f879ec92ec326f8b1c6b7b8d77a5266d6622

Fix GC Root bugs that missed leaks (#1168)

In Perflib, Snapshot.getGcRoots() only returns the GC roots from the first heap. Based on empirical evidence, it seems like Android has 4 heaps, and the GC Roots used to only be in the first heap, but more recent versions of Android have GC Roots in other heaps as well.

This means LeakCanary would sometimes show "No Leak Found" when there actually was a leak.

Fixes #1163 | 2019-01-10 23:32:27 | 64b6e5a41796ae1587c50c8cc860cea25f28f382

fix typo | 2018-10-17 00:43:01 | 044b1e4827bc71ec008dc3f7e43c78f58885f1e1

Fix LeakCanary toasting (#1116)

- Prior attempts to get it to work with the application context turned out to be buggy.
- This makes LeakCanary use whatever the current resumed activity is, if any.
- If there is no resumed activity, then the toast isn't displayed.

This supersedes #1080 | 2018-10-16 13:23:14 | 0e39e2eea79bc05bf7147a4074dd7163f7c401ff

fix the wrong word (#1111) | 2018-10-16 01:25:28 | 636b9b6c2b39c0c887c9ed78e904239db9bc131e

Merge pull request #1104 from IlyaGulya/bug/travis-ci-cache-fix

Fix travis caching and improve build time. | 2018-09-22 21:25:59 | 344728b906daf6d010f66bdf4ccc29ad8fedede5

Error prone 2.3.1 + suggested fix and specify version

See http://errorprone.info/bugpattern/StringSplitter | 2018-08-22 07:37:33 | a6b6960d73a1da9661f4e85254570bf5f867f954

Merge pull request #1089 from hzsweers/z/fixAnother

Quick followup to #1088 | 2018-08-22 03:15:15 | be973f5f5da6a3516aedab98e639690697617747

Merge pull request #1087 from Goddchen/patch-2

Updated german translation | 2018-08-20 13:52:47 | b43c279b3e1623c193e1dc81955527f70e93f822

Merge pull request #1063 from javmarina/patch-1

Fixed wrong versions in AndroidExcludedRefs | 2018-07-25 18:31:55 | 3b4ebe3e2571377f93e9a6976e021324502a0f78

Fixed wrong versions in AndroidExcludedRefs

Commit https://android.googlesource.com/platform/frameworks/base/+/27db46850b708070452c0ce49daf5f79503fbde6 introduced this issue. This commit was first included in Jelly Bean 4.3 (JELLY_BEAN_MR2), not Jelly Bean 4.1 (JELLY_BEAN)
Commit https://android.googlesource.com/platform/frameworks/base/+/5200e1cb07190a1f6874d72a4561064cad3ee3e0 fixes this issue and was first included in Oreo 8.0 (O). Nougat still has this memory leak. | 2018-07-24 18:24:59 | e4778b25f2c6e65ebc485d255e38586c7d45ec97

Merge pull request #1057 from square/py/ui_bug

Fix drawing of start line | 2018-07-20 22:21:19 | af96577a7d19e4df9f63d95fd9c3bfd2adcddb5d

Avoid Toast crashes

Showing a toast can crash on API 25 because the Window Manager can throw a BadTokenException when addView is called.

This change fixes it by configuring the toast manually and calling the window manager directly. This is based on https://github.com/pyricau/frenchtoast/blob/master/frenchtoast/src/main/java/frenchtoast/Mixture.java#L49 .

Fixes #844 | 2018-07-20 16:11:22 | c9ebc5cf5099c093bde5d3309b2692cb0e2016d8

Fixing setup bug | 2018-06-28 04:07:09 | 505933817cf6e2eb0dad4a78d4c7c35a072b9868

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

fix format | 2019-04-22 06:25:09 | 4a2b158913e5a9eb0d5c6fdfbf949a80fc1b2c6b

Rename default to perflib and experimental to default (#1282)

* Remove experimental from module names

* Remove experimental prefix, add perflib prefix:

* update docs | 2019-04-19 06:01:39 | 425a9f24deb72691b02cdc85f80d177c05afebc5

fix list | 2019-04-18 21:55:43 | 8e3f9d26e8d3555bf934b99ac062aabc3aba528f

fix broken master | 2019-04-10 15:00:30 | f067ae53e050c5f52f47237440a6ac7eee3ca94c

fix broken build due to typo | 2019-04-10 05:44:19 | 7d4ddb4ffe3c9b0f30a84848675452dded0d4115

Leaking information aligned below simple class name. (#1258)

Also fixed issue where extraString + exclusionString were showing after the squiggly line.

Before: 
``` 
┬
├─ java.lang.Thread
│                 Leaking: NO (it's a GC root)
│                 ↓ thread Thread.<Java Local>
│                                ~~~~~~~~~~~~~ (named 'Thread-4')
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                 Leaking: UNKNOWN
│                 ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                     ~~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) 
```
After: 
``` 
┬
├─ java.lang.Thread
│            Leaking: NO (it's a GC root)
│            ↓ thread Thread.<Java Local> (named 'Thread-4')
│                            ~~~~~~~~~~~~
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                         Leaking: UNKNOWN
│                         ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                              ~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) ``` | 2019-04-05 20:11:47 | a938855585c7cf2522ffbd143d4bb66a234eea66

Add share to Stack Overflow button when viewing a leak (#1252)

* Add share to Stack Overflow button when viewing a leak

* Add question tag, lengthen toast and fix build failure. | 2019-04-04 20:49:50 | 8724d2aaffc07904517a3b823867802ca43233ae

Check if serviceInfo.processName is null. When LeakCanary runs on a seperate process and that process for some reason does not have a assigned processName, then we will crash on a NullPointerException. Also a debug log explaining this. (#1225) | 2019-04-01 19:20:40 | 3efc43608ed71dc20b0ad1e0e80e33d15249666f

fix master broken | 2019-04-01 19:07:27 | fe42130029174681a708b7d8622412efbaf81e73

Fix GC Root bugs that missed leaks (#1168)

In Perflib, Snapshot.getGcRoots() only returns the GC roots from the first heap. Based on empirical evidence, it seems like Android has 4 heaps, and the GC Roots used to only be in the first heap, but more recent versions of Android have GC Roots in other heaps as well.

This means LeakCanary would sometimes show "No Leak Found" when there actually was a leak.

Fixes #1163 | 2019-01-10 23:32:27 | 64b6e5a41796ae1587c50c8cc860cea25f28f382

fix typo | 2018-10-17 00:43:01 | 044b1e4827bc71ec008dc3f7e43c78f58885f1e1

Fix LeakCanary toasting (#1116)

- Prior attempts to get it to work with the application context turned out to be buggy.
- This makes LeakCanary use whatever the current resumed activity is, if any.
- If there is no resumed activity, then the toast isn't displayed.

This supersedes #1080 | 2018-10-16 13:23:14 | 0e39e2eea79bc05bf7147a4074dd7163f7c401ff

fix the wrong word (#1111) | 2018-10-16 01:25:28 | 636b9b6c2b39c0c887c9ed78e904239db9bc131e

Merge pull request #1104 from IlyaGulya/bug/travis-ci-cache-fix

Fix travis caching and improve build time. | 2018-09-22 21:25:59 | 344728b906daf6d010f66bdf4ccc29ad8fedede5

Error prone 2.3.1 + suggested fix and specify version

See http://errorprone.info/bugpattern/StringSplitter | 2018-08-22 07:37:33 | a6b6960d73a1da9661f4e85254570bf5f867f954

Merge pull request #1089 from hzsweers/z/fixAnother

Quick followup to #1088 | 2018-08-22 03:15:15 | be973f5f5da6a3516aedab98e639690697617747

Merge pull request #1087 from Goddchen/patch-2

Updated german translation | 2018-08-20 13:52:47 | b43c279b3e1623c193e1dc81955527f70e93f822

Merge pull request #1063 from javmarina/patch-1

Fixed wrong versions in AndroidExcludedRefs | 2018-07-25 18:31:55 | 3b4ebe3e2571377f93e9a6976e021324502a0f78

Fixed wrong versions in AndroidExcludedRefs

Commit https://android.googlesource.com/platform/frameworks/base/+/27db46850b708070452c0ce49daf5f79503fbde6 introduced this issue. This commit was first included in Jelly Bean 4.3 (JELLY_BEAN_MR2), not Jelly Bean 4.1 (JELLY_BEAN)
Commit https://android.googlesource.com/platform/frameworks/base/+/5200e1cb07190a1f6874d72a4561064cad3ee3e0 fixes this issue and was first included in Oreo 8.0 (O). Nougat still has this memory leak. | 2018-07-24 18:24:59 | e4778b25f2c6e65ebc485d255e38586c7d45ec97

Merge pull request #1057 from square/py/ui_bug

Fix drawing of start line | 2018-07-20 22:21:19 | af96577a7d19e4df9f63d95fd9c3bfd2adcddb5d

Avoid Toast crashes

Showing a toast can crash on API 25 because the Window Manager can throw a BadTokenException when addView is called.

This change fixes it by configuring the toast manually and calling the window manager directly. This is based on https://github.com/pyricau/frenchtoast/blob/master/frenchtoast/src/main/java/frenchtoast/Mixture.java#L49 .

Fixes #844 | 2018-07-20 16:11:22 | c9ebc5cf5099c093bde5d3309b2692cb0e2016d8

Fixing setup bug | 2018-06-28 04:07:09 | 505933817cf6e2eb0dad4a78d4c7c35a072b9868

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

Ignore unloaded classes on Android

In Android VMs, AFAIK there is only ever one instance of each class. However, classes can become unloaded and loaded again later, if there are no side effects. That's totally transparent to the runtime, however one of the side effects is that the class will be present twice in the heap dump.

Also, on Android, all loaded classes are held by a sticky class GC Root. So that's how we find which of the classes are loaded vs not when we get duplicated classes.

It's worth noting that standard JVMs behave differently, so we need a different behavior for those. The ideal fix here would be to run a mark and sweep and ignore unreachable classes, however that's time consuming (and harder to do prior to having parsed the heap dump).

Fixes #1759 | 2020-02-25 21:32:59 | 2ec2a28e031681cdd3d150c8b8439fa0eda3feb9

Doc fixes and updates (#1744)

* Fixes to properly render recipes in MkDoc

* Bumped release date
Updated release doc | 2020-02-06 18:00:48 | 57057c636b816cd73f9b344a4201aa04a3a8cca8

[bugfix]AppWatcher manualInstall function not works bugfix (#1734)

* manualInstall config not enabled by default bugfix

* Make manualInstall config enable decided by isDebuggableBuild

* Make manualInstall config copy from existing customized config

* Make manualInstall config copy from existing customized config and set enabled to true forcely

* Make manualInstall config enable decided by InternalAppWatcher.isDebuggableBuild | 2020-02-04 03:30:50 | 00604fce8f86e3b8a9fe4ea2ea0e71fc1a74eb28

Merge pull request #1729 from square/py/fix_text

Fix helper text | 2020-01-24 19:53:15 | 825ac6242cde0a4c0488547d03e12a8df91a5f31

Fixed compilation issue by extracting example application to debug/release folders | 2019-10-09 01:29:24 | b9f1bf88c4b0ac9f0a91cc54638899d9c6ecb8e1

fix missing toString | 2020-01-04 01:28:33 | 47bad9fec441ea462129ece0c4f1125f578ba1ec

Use "x minutes ago" format for dates (#1675)

Also fixed some of the ordering (leaks types by counts desc, leaks by date desc)

Fixes #1672 | 2019-12-16 23:56:38 | 9fae7ed497e1760abe74cf2c22535fbd51f16331

Gradle plugin that puts proguard mapping file in the apk as an asset (#1589)

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Add unit tests for copy obfuscation file task

* Add recipe describing how to use the plugin

* Add plugin usage instruction

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Rebased onto master

* Add missing test dependencies

* Use lambda function instead of a collection for plugin configuration

* Post code review fixups

* Rename according to code review suggestions

* Fix detekt warning

* Pass empty file if mapping doesn't exist

* Improved recipe

* Code review fixups

* Fix CopyObfuscationMappingFileTask tests

* Code review fixes

* Fix detekt issues

* Add plugin tests

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Rebased onto master

* Use lambda function instead of a collection for plugin configuration

* Post code review fixups

* Rename according to code review suggestions

* Fix detekt warning

* Pass empty file if mapping doesn't exist

* Improved recipe

* Code review fixups

* Fix CopyObfuscationMappingFileTask tests

* Code review fixes

* Fix detekt issues

* Add plugin tests

* Rebased onto master

* Add one more test for plugin

* Try fixing CI tests by reading $ANDROID_HOME value

* Try fixing CI tests by hardcoding android sdk path

* Debugging CI failing test

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Post review fixes

* Debugging failing test on CI

* Try fixing CI tests by hardcoding android sdk path

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debug failing test on CI

* Debug failing test on CI

* Debug failing test on CI

* Debug failing test on CI

* Debug failing test on CI

* Debug failing test on CI

* Use trusty dist in travis config

* Debug failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debug failing CI test

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Prevent GradleRunner from running builds in a separate process

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* sni: modernize travis script. Solve emulator issue.
The build now uses build tools 28 which requires little adjustments
from the original recipe. In the future we can just use the original recipe
Original recipe: https://docs.travis-ci.com/user/languages/android/ | 2019-12-10 06:48:02 | 25a10fcd9f405235de63bd791ea4ae4eb5453924

Fix emulators  (#1667)

* Revert "Fix travis (#1665)"

This reverts commit 00b9bd32d535022800153f34916d4c4667d2a5cd.

* Fix emulators

A recent emulator update breaks a few CI projects.  This PR applies
a fix suggested by Google.

https://issuetracker.google.com/issues/145622251#comment33 | 2019-12-10 05:43:06 | b678e1508e9ef3618ce2c44d44ff733f350d4185

Fix travis (#1665)

According to [this tweet](https://twitter.com/colinwhi/status/1204102384458194944) from @colinrtwhite, Travis is failing due to a bug in the most recent version of the emulator. Pinning the emulator to an older version works around it. This commit steals the fix from https://github.com/coil-kt/coil/pull/195 . | 2019-12-09 19:54:40 | 00b9bd32d535022800153f34916d4c4667d2a5cd

Add ability to customize class used to detect tests (#1654)

Developers should not ship JUnit in their app, even in debug. However, some debug libraries unfortunately ship with JUnit as a dependency (e.g. see https://github.com/square/okhttp/issues/4667).

Developers can change the default to target a different class (e.g assertj) to help LeakCanary detect unit tests, by overriding a public string:

```
  <string name="leak_canary_test_class_name">org.assertj.core.api.Assertions</string>
```

Fixes #1649 | 2019-12-03 02:35:07 | dbbb969d59b066c3f9197ebc3863cc4f54dae5d2

fix changelog | 2019-11-25 19:32:41 | 50ae3ba7558e5a3f83fc11b4d17a281f072ff078

Fix bug in handling JNI roots (#1636)

* When adding support for native reference leaks (879ab7c) there was a missing bracket in an if/else branch that led to all native gc roots being ignored.

Fixes #1634 | 2019-11-25 19:00:23 | aff338544b5eebbb0b3c792c628cca11fa888373

fix typos | 2019-11-19 03:58:07 | 25b0df0da4f6e93dedcd90342c9cd1d0eab080ed

Merge pull request #1596 from fernandospr/patch-1

Update blog-articles.md | 2019-10-04 16:35:24 | e65236dae7c5827b7c9f64c19c8b1a16ea19e5a7

Merge pull request #1598 from PaulWoitaschek/patch-1

Fixed the german string placeholder for sharing the heap dump | 2019-10-03 16:16:23 | 029f28eefd7aa966520ac3649fd2688732c02867

Fix crash when pressing home from root screen (#1578)

This bug only happens on older Android devices.

Fixes #1555 | 2019-09-11 01:51:06 | 274f58f96e8de7dcd3000c06ba3e2b50e427747d

Merge pull request #1559 from bric3/fix-primitive-array-dump-skip

Fixes the primitive array dump record skipping | 2019-09-09 22:16:57 | c0fd4d812cb8d6c5723231e501c121da2af86f06

Parsing and applying proguard mapping during heap analysis (#1542)

* Parsing and applying proguard mapping during heap analysis

* Parsing and applying proguard mapping during heap analysis

* Rebased onto master

* Post review changes and updated shark-cli to support mapping files

* Post review fixes

* Moving proguard mapping reader out of the analyzer and formatting fixes | 2019-08-30 16:54:20 | 66182a52069d9be59d0af6220aa9afd74218aa9b

fix images | 2019-08-27 20:02:50 | 8f5030e9faa8690217e1bd436274a3de5b9d3fb3

fix image links in docs | 2019-08-27 19:59:20 | edca56a947278508350bfa5dd33d3fa10699001f

Merge pull request #1549 from Armaxis/patch-1

Added section about using Detekt to Contributing | 2019-08-24 22:16:26 | c923d14909888860a99d5899af17f5b52c9b000f

Revert "Replaced accessor with a call to setter to fix the build issue"

This reverts commit 82db0398 | 2019-08-17 02:21:08 | c570cb9b0fd7bd7fcc88c4d3b529df8837e98fdc

Replaced accessor with a call to setter to fix the build issue | 2019-08-16 04:32:25 | 82db039843303044f91d36ba7c43595ab59bacd5

fix typo | 2019-08-02 15:31:17 | a2452f61e78e689efb59adaf71384d74447578b0

Add / fix android inspectors (#1491)

* Added MortarScope and ViewRootImpl inspectors
* Fixed the ContextWrapper inspector

Fixes #1490
Fixes #1389 | 2019-07-25 22:50:48 | 915f8359690a016a09e66608a041454b9c8c52cb

Documenting public APIs (#1476)

Also fixed naming and other things that weren't right.

Fixes #1474 | 2019-07-19 06:57:25 | 41c69a5d424b4236114c5ce1b077afdad38e57a5

Adding CLI for LeakCanary (#1456)

Example usage:
```
./gradlew leakcanary-cli:run --args='analyze-process com.example.leakcanary'

./gradlew leakcanary-cli:run --args='dump-process com.example.leakcanary'

./gradlew leakcanary-cli:run --args='analyze-file /path/to/heapdump.hprof'
```

Also fixed a bug in ShortestPathFinder which did not ignore null references in object arrays | 2019-07-11 19:11:30 | eded1c96e84f37393857ba4de2580aec784b2391

Behavior change & bugfixes for retained count notification (#1433)

* Bugfix: when tapping the "dump heap" notification, if the GC found no retained instance we didn't use a distinct notification id to communicate that, and then soon after we'd dismiss the notification that let's the user know there is no retained instances on tap.
* Bugfix: we weren't running the GC when checking for retained instances and the count was under the threshold
* Change: we now update the notification and keep it around for 30 seconds when the count goes to 0
* Change: the "no retained instance" notification that shows on tap is identical and also auto dismisses after 30 seconds.
* Change: we're checking for retained references (and running the GC) every 2 seconds instead of 5.

Fixes #1427 | 2019-07-03 20:55:47 | 968083a915343d881bd63e40587c070fde543732

Update how to fix a leak | 2019-06-25 05:46:56 | 177e7fd12933d99eca7a526851c53e598a03bf90

Text rendering tests (#1378)

* Added test coverage for text rendering
* Fixed bug: labels were not rendered on the last node (leaking instance)
* Matched exclusions are now rendered on their own line

Fixes #1375
Fixes #1350 | 2019-06-04 09:32:11 | 1926cb1db73f9583e11c557dbf2e5d46e3896a6e

Thread name based exclusions (#1353)

* Readded support for exclusions of local variable based on thread names
* Renamed ThreadExclusion to JavaLocalExclusion
* Fixed bug: KeyedWeakReference was not always ignored because its superclass is has a weakly reachable exclusion.
* Fixed bug: all root nodes had the same visit order as the first non root enqueued item, making it possible for a non root node to be dequeued before we're done with all roots.
* Redded gc root sorting
* Added tests to cover all uncovered bugs
* Added support for parsing StackFrameRecord

Fixes #1339 | 2019-05-20 13:17:18 | 6c2ee609efda323e88a4964d31fc5a5f0532f776

Reachability => LeakStatus (#1340)

* Combined leaking information from inspectors to solving conflicts while keeping all reasons
* Made reason from view leak inspector more obvious, and added label data about internals
* Moved reachability into LeakTraceElement
* Reachability renamed to LeakNodeStatus and leaking / not leaking
* ReachabilityInspector and Labeler are now functions with type aliases

Related to #1336: should fix the crash, though it's still unclear why AppCompatButton was a gc root there. | 2019-05-07 14:56:59 | 01210bbbfaecb3bcb6057c62b2195366d3bfa4f9

Revamp notifications (#1335)

* New notification that shows the count of retained instances. Tapping it triggers a heap dump. Fixes #1325
* Notifications are now split into two channels: default for results, and low for everything else.
* New config options: LeakCanary.config.dumpHeapWhenDebugging (default false) and LeakCanary.config.retainedVisibleThreshold (default 5)
* Replaced notification int constants and timestamps with resource ids.
* Don't show background notifications in instant apps (#1197) | 2019-05-05 16:38:26 | b14d9bc9c0a87119137bc0998bdec9314186dfcf

Highlighting new leaks (#1334)

New leaks are leaks that have a leak group that doesn't exist in any prior analysis.

* The notification now reports the count of leaks, with a split of new, known, and won't fix.
* The analysis success screen shows new leaks
* Moved description prefixes to be computed rather than inserted in the DB

Fixes #1328 | 2019-05-05 09:37:38 | f9a0518d4ddd69b782b6302caa3e3039787038e4

LeakSentry can be disabled (#1332)

LeakCanary has an enabled config option. Default is on in debug builds off in release builds.

Fixes #1327 | 2019-05-04 17:52:47 | f74f60901f34c751e8b8798d626678aa6233c893

Revert "fix trailing spaces per checkstyle"

This reverts commit ff17f879ec92ec326f8b1c6b7b8d77a5266d6622. | 2019-05-04 08:04:21 | 03136ca7dc1680299d710f79ca885412a1564144

Add test coverage for heap analysis (#1329)

* Fixed bug when reachability inspectors conflicts (reachable should win and erase unreachable)
* Added back support for leaking instances being empty objects, strings, primitive arrays or any object that we otherwise don't follow to find shortest paths. | 2019-05-04 07:51:02 | 59558e655d537c7654c411eebfd840773a8b77c9

Introducing exclusion priority (#1317)

* Add segmented FIFO queue

Unified several queues into one segmented FIFO queue. This will enable us to add several levels of priority.

* Introducing exclusion priority

* "excludedLeak" is now known as "won't fix leak", which matches its reality better. It's a leak that is known and real yet we're not fixing.
* Exclusion.alwaysExclude is replaced with Exclusion.status, with 3 possible values: NEVER_REACHABLE, WONT_FIX_LEAK, WEAKLY_REACHABLE.
* The shortest path finder will now follow weak references after all other paths have been exhausted.
* Removed class exclusion, was confusing, replaced with less lazy approach of listing fields to exclude
* VIEWLOCATIONHOLDER_ROOT should not have been always excluded, fixed.

Fixes #1173 ... well kinda. Instead of "non leaking retained instances", LeakCanary will report weakly reachable traces. Not sure if that'll help but it's a foundation we can build on. | 2019-04-30 17:44:15 | b0eedc553995e354e2382b3378bf0348801cd3c5

AllFieldsLabeler & cleanups (#1316)

* Add new optional labeler that prints all fields (useful for debugging)
* Move deprecated AnalysisResult to perflib
* Made DefaultAnalysisResultListener an object | 2019-04-30 07:08:29 | b9ee5356db265412db39c4c341880f305fbf2c76

fix format | 2019-04-22 06:25:09 | 4a2b158913e5a9eb0d5c6fdfbf949a80fc1b2c6b

Rename default to perflib and experimental to default (#1282)

* Remove experimental from module names

* Remove experimental prefix, add perflib prefix:

* update docs | 2019-04-19 06:01:39 | 425a9f24deb72691b02cdc85f80d177c05afebc5

fix list | 2019-04-18 21:55:43 | 8e3f9d26e8d3555bf934b99ac062aabc3aba528f

fix broken master | 2019-04-10 15:00:30 | f067ae53e050c5f52f47237440a6ac7eee3ca94c

fix broken build due to typo | 2019-04-10 05:44:19 | 7d4ddb4ffe3c9b0f30a84848675452dded0d4115

Leaking information aligned below simple class name. (#1258)

Also fixed issue where extraString + exclusionString were showing after the squiggly line.

Before: 
``` 
┬
├─ java.lang.Thread
│                 Leaking: NO (it's a GC root)
│                 ↓ thread Thread.<Java Local>
│                                ~~~~~~~~~~~~~ (named 'Thread-4')
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                 Leaking: UNKNOWN
│                 ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                     ~~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) 
```
After: 
``` 
┬
├─ java.lang.Thread
│            Leaking: NO (it's a GC root)
│            ↓ thread Thread.<Java Local> (named 'Thread-4')
│                            ~~~~~~~~~~~~
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                         Leaking: UNKNOWN
│                         ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                              ~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) ``` | 2019-04-05 20:11:47 | a938855585c7cf2522ffbd143d4bb66a234eea66

Add share to Stack Overflow button when viewing a leak (#1252)

* Add share to Stack Overflow button when viewing a leak

* Add question tag, lengthen toast and fix build failure. | 2019-04-04 20:49:50 | 8724d2aaffc07904517a3b823867802ca43233ae

Check if serviceInfo.processName is null. When LeakCanary runs on a seperate process and that process for some reason does not have a assigned processName, then we will crash on a NullPointerException. Also a debug log explaining this. (#1225) | 2019-04-01 19:20:40 | 3efc43608ed71dc20b0ad1e0e80e33d15249666f

fix master broken | 2019-04-01 19:07:27 | fe42130029174681a708b7d8622412efbaf81e73

fix trailing spaces per checkstyle | 2019-03-29 22:34:58 | ff17f879ec92ec326f8b1c6b7b8d77a5266d6622

Fix GC Root bugs that missed leaks (#1168)

In Perflib, Snapshot.getGcRoots() only returns the GC roots from the first heap. Based on empirical evidence, it seems like Android has 4 heaps, and the GC Roots used to only be in the first heap, but more recent versions of Android have GC Roots in other heaps as well.

This means LeakCanary would sometimes show "No Leak Found" when there actually was a leak.

Fixes #1163 | 2019-01-10 23:32:27 | 64b6e5a41796ae1587c50c8cc860cea25f28f382

fix typo | 2018-10-17 00:43:01 | 044b1e4827bc71ec008dc3f7e43c78f58885f1e1

Fix LeakCanary toasting (#1116)

- Prior attempts to get it to work with the application context turned out to be buggy.
- This makes LeakCanary use whatever the current resumed activity is, if any.
- If there is no resumed activity, then the toast isn't displayed.

This supersedes #1080 | 2018-10-16 13:23:14 | 0e39e2eea79bc05bf7147a4074dd7163f7c401ff

fix the wrong word (#1111) | 2018-10-16 01:25:28 | 636b9b6c2b39c0c887c9ed78e904239db9bc131e

Merge pull request #1104 from IlyaGulya/bug/travis-ci-cache-fix

Fix travis caching and improve build time. | 2018-09-22 21:25:59 | 344728b906daf6d010f66bdf4ccc29ad8fedede5

Error prone 2.3.1 + suggested fix and specify version

See http://errorprone.info/bugpattern/StringSplitter | 2018-08-22 07:37:33 | a6b6960d73a1da9661f4e85254570bf5f867f954

Merge pull request #1089 from hzsweers/z/fixAnother

Quick followup to #1088 | 2018-08-22 03:15:15 | be973f5f5da6a3516aedab98e639690697617747

Merge pull request #1087 from Goddchen/patch-2

Updated german translation | 2018-08-20 13:52:47 | b43c279b3e1623c193e1dc81955527f70e93f822

Merge pull request #1063 from javmarina/patch-1

Fixed wrong versions in AndroidExcludedRefs | 2018-07-25 18:31:55 | 3b4ebe3e2571377f93e9a6976e021324502a0f78

Fixed wrong versions in AndroidExcludedRefs

Commit https://android.googlesource.com/platform/frameworks/base/+/27db46850b708070452c0ce49daf5f79503fbde6 introduced this issue. This commit was first included in Jelly Bean 4.3 (JELLY_BEAN_MR2), not Jelly Bean 4.1 (JELLY_BEAN)
Commit https://android.googlesource.com/platform/frameworks/base/+/5200e1cb07190a1f6874d72a4561064cad3ee3e0 fixes this issue and was first included in Oreo 8.0 (O). Nougat still has this memory leak. | 2018-07-24 18:24:59 | e4778b25f2c6e65ebc485d255e38586c7d45ec97

Merge pull request #1057 from square/py/ui_bug

Fix drawing of start line | 2018-07-20 22:21:19 | af96577a7d19e4df9f63d95fd9c3bfd2adcddb5d

Avoid Toast crashes

Showing a toast can crash on API 25 because the Window Manager can throw a BadTokenException when addView is called.

This change fixes it by configuring the toast manually and calling the window manager directly. This is based on https://github.com/pyricau/frenchtoast/blob/master/frenchtoast/src/main/java/frenchtoast/Mixture.java#L49 .

Fixes #844 | 2018-07-20 16:11:22 | c9ebc5cf5099c093bde5d3309b2692cb0e2016d8

Fixing setup bug | 2018-06-28 04:07:09 | 505933817cf6e2eb0dad4a78d4c7c35a072b9868

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

Thread name based exclusions (#1353)

* Readded support for exclusions of local variable based on thread names
* Renamed ThreadExclusion to JavaLocalExclusion
* Fixed bug: KeyedWeakReference was not always ignored because its superclass is has a weakly reachable exclusion.
* Fixed bug: all root nodes had the same visit order as the first non root enqueued item, making it possible for a non root node to be dequeued before we're done with all roots.
* Redded gc root sorting
* Added tests to cover all uncovered bugs
* Added support for parsing StackFrameRecord

Fixes #1339 | 2019-05-20 13:17:18 | 6c2ee609efda323e88a4964d31fc5a5f0532f776

Reachability => LeakStatus (#1340)

* Combined leaking information from inspectors to solving conflicts while keeping all reasons
* Made reason from view leak inspector more obvious, and added label data about internals
* Moved reachability into LeakTraceElement
* Reachability renamed to LeakNodeStatus and leaking / not leaking
* ReachabilityInspector and Labeler are now functions with type aliases

Related to #1336: should fix the crash, though it's still unclear why AppCompatButton was a gc root there. | 2019-05-07 14:56:59 | 01210bbbfaecb3bcb6057c62b2195366d3bfa4f9

Revamp notifications (#1335)

* New notification that shows the count of retained instances. Tapping it triggers a heap dump. Fixes #1325
* Notifications are now split into two channels: default for results, and low for everything else.
* New config options: LeakCanary.config.dumpHeapWhenDebugging (default false) and LeakCanary.config.retainedVisibleThreshold (default 5)
* Replaced notification int constants and timestamps with resource ids.
* Don't show background notifications in instant apps (#1197) | 2019-05-05 16:38:26 | b14d9bc9c0a87119137bc0998bdec9314186dfcf

Highlighting new leaks (#1334)

New leaks are leaks that have a leak group that doesn't exist in any prior analysis.

* The notification now reports the count of leaks, with a split of new, known, and won't fix.
* The analysis success screen shows new leaks
* Moved description prefixes to be computed rather than inserted in the DB

Fixes #1328 | 2019-05-05 09:37:38 | f9a0518d4ddd69b782b6302caa3e3039787038e4

LeakSentry can be disabled (#1332)

LeakCanary has an enabled config option. Default is on in debug builds off in release builds.

Fixes #1327 | 2019-05-04 17:52:47 | f74f60901f34c751e8b8798d626678aa6233c893

Revert "fix trailing spaces per checkstyle"

This reverts commit ff17f879ec92ec326f8b1c6b7b8d77a5266d6622. | 2019-05-04 08:04:21 | 03136ca7dc1680299d710f79ca885412a1564144

Add test coverage for heap analysis (#1329)

* Fixed bug when reachability inspectors conflicts (reachable should win and erase unreachable)
* Added back support for leaking instances being empty objects, strings, primitive arrays or any object that we otherwise don't follow to find shortest paths. | 2019-05-04 07:51:02 | 59558e655d537c7654c411eebfd840773a8b77c9

Introducing exclusion priority (#1317)

* Add segmented FIFO queue

Unified several queues into one segmented FIFO queue. This will enable us to add several levels of priority.

* Introducing exclusion priority

* "excludedLeak" is now known as "won't fix leak", which matches its reality better. It's a leak that is known and real yet we're not fixing.
* Exclusion.alwaysExclude is replaced with Exclusion.status, with 3 possible values: NEVER_REACHABLE, WONT_FIX_LEAK, WEAKLY_REACHABLE.
* The shortest path finder will now follow weak references after all other paths have been exhausted.
* Removed class exclusion, was confusing, replaced with less lazy approach of listing fields to exclude
* VIEWLOCATIONHOLDER_ROOT should not have been always excluded, fixed.

Fixes #1173 ... well kinda. Instead of "non leaking retained instances", LeakCanary will report weakly reachable traces. Not sure if that'll help but it's a foundation we can build on. | 2019-04-30 17:44:15 | b0eedc553995e354e2382b3378bf0348801cd3c5

AllFieldsLabeler & cleanups (#1316)

* Add new optional labeler that prints all fields (useful for debugging)
* Move deprecated AnalysisResult to perflib
* Made DefaultAnalysisResultListener an object | 2019-04-30 07:08:29 | b9ee5356db265412db39c4c341880f305fbf2c76

fix format | 2019-04-22 06:25:09 | 4a2b158913e5a9eb0d5c6fdfbf949a80fc1b2c6b

Rename default to perflib and experimental to default (#1282)

* Remove experimental from module names

* Remove experimental prefix, add perflib prefix:

* update docs | 2019-04-19 06:01:39 | 425a9f24deb72691b02cdc85f80d177c05afebc5

fix list | 2019-04-18 21:55:43 | 8e3f9d26e8d3555bf934b99ac062aabc3aba528f

fix broken master | 2019-04-10 15:00:30 | f067ae53e050c5f52f47237440a6ac7eee3ca94c

fix broken build due to typo | 2019-04-10 05:44:19 | 7d4ddb4ffe3c9b0f30a84848675452dded0d4115

Leaking information aligned below simple class name. (#1258)

Also fixed issue where extraString + exclusionString were showing after the squiggly line.

Before: 
``` 
┬
├─ java.lang.Thread
│                 Leaking: NO (it's a GC root)
│                 ↓ thread Thread.<Java Local>
│                                ~~~~~~~~~~~~~ (named 'Thread-4')
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                 Leaking: UNKNOWN
│                 ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                     ~~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) 
```
After: 
``` 
┬
├─ java.lang.Thread
│            Leaking: NO (it's a GC root)
│            ↓ thread Thread.<Java Local> (named 'Thread-4')
│                            ~~~~~~~~~~~~
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                         Leaking: UNKNOWN
│                         ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                              ~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) ``` | 2019-04-05 20:11:47 | a938855585c7cf2522ffbd143d4bb66a234eea66

Add share to Stack Overflow button when viewing a leak (#1252)

* Add share to Stack Overflow button when viewing a leak

* Add question tag, lengthen toast and fix build failure. | 2019-04-04 20:49:50 | 8724d2aaffc07904517a3b823867802ca43233ae

Check if serviceInfo.processName is null. When LeakCanary runs on a seperate process and that process for some reason does not have a assigned processName, then we will crash on a NullPointerException. Also a debug log explaining this. (#1225) | 2019-04-01 19:20:40 | 3efc43608ed71dc20b0ad1e0e80e33d15249666f

fix master broken | 2019-04-01 19:07:27 | fe42130029174681a708b7d8622412efbaf81e73

fix trailing spaces per checkstyle | 2019-03-29 22:34:58 | ff17f879ec92ec326f8b1c6b7b8d77a5266d6622

Fix GC Root bugs that missed leaks (#1168)

In Perflib, Snapshot.getGcRoots() only returns the GC roots from the first heap. Based on empirical evidence, it seems like Android has 4 heaps, and the GC Roots used to only be in the first heap, but more recent versions of Android have GC Roots in other heaps as well.

This means LeakCanary would sometimes show "No Leak Found" when there actually was a leak.

Fixes #1163 | 2019-01-10 23:32:27 | 64b6e5a41796ae1587c50c8cc860cea25f28f382

fix typo | 2018-10-17 00:43:01 | 044b1e4827bc71ec008dc3f7e43c78f58885f1e1

Fix LeakCanary toasting (#1116)

- Prior attempts to get it to work with the application context turned out to be buggy.
- This makes LeakCanary use whatever the current resumed activity is, if any.
- If there is no resumed activity, then the toast isn't displayed.

This supersedes #1080 | 2018-10-16 13:23:14 | 0e39e2eea79bc05bf7147a4074dd7163f7c401ff

fix the wrong word (#1111) | 2018-10-16 01:25:28 | 636b9b6c2b39c0c887c9ed78e904239db9bc131e

Merge pull request #1104 from IlyaGulya/bug/travis-ci-cache-fix

Fix travis caching and improve build time. | 2018-09-22 21:25:59 | 344728b906daf6d010f66bdf4ccc29ad8fedede5

Error prone 2.3.1 + suggested fix and specify version

See http://errorprone.info/bugpattern/StringSplitter | 2018-08-22 07:37:33 | a6b6960d73a1da9661f4e85254570bf5f867f954

Merge pull request #1089 from hzsweers/z/fixAnother

Quick followup to #1088 | 2018-08-22 03:15:15 | be973f5f5da6a3516aedab98e639690697617747

Merge pull request #1087 from Goddchen/patch-2

Updated german translation | 2018-08-20 13:52:47 | b43c279b3e1623c193e1dc81955527f70e93f822

Merge pull request #1063 from javmarina/patch-1

Fixed wrong versions in AndroidExcludedRefs | 2018-07-25 18:31:55 | 3b4ebe3e2571377f93e9a6976e021324502a0f78

Fixed wrong versions in AndroidExcludedRefs

Commit https://android.googlesource.com/platform/frameworks/base/+/27db46850b708070452c0ce49daf5f79503fbde6 introduced this issue. This commit was first included in Jelly Bean 4.3 (JELLY_BEAN_MR2), not Jelly Bean 4.1 (JELLY_BEAN)
Commit https://android.googlesource.com/platform/frameworks/base/+/5200e1cb07190a1f6874d72a4561064cad3ee3e0 fixes this issue and was first included in Oreo 8.0 (O). Nougat still has this memory leak. | 2018-07-24 18:24:59 | e4778b25f2c6e65ebc485d255e38586c7d45ec97

Merge pull request #1057 from square/py/ui_bug

Fix drawing of start line | 2018-07-20 22:21:19 | af96577a7d19e4df9f63d95fd9c3bfd2adcddb5d

Avoid Toast crashes

Showing a toast can crash on API 25 because the Window Manager can throw a BadTokenException when addView is called.

This change fixes it by configuring the toast manually and calling the window manager directly. This is based on https://github.com/pyricau/frenchtoast/blob/master/frenchtoast/src/main/java/frenchtoast/Mixture.java#L49 .

Fixes #844 | 2018-07-20 16:11:22 | c9ebc5cf5099c093bde5d3309b2692cb0e2016d8

Fixing setup bug | 2018-06-28 04:07:09 | 505933817cf6e2eb0dad4a78d4c7c35a072b9868

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

Documenting public APIs (#1476)

Also fixed naming and other things that weren't right.

Fixes #1474 | 2019-07-19 06:57:25 | 41c69a5d424b4236114c5ce1b077afdad38e57a5

Adding CLI for LeakCanary (#1456)

Example usage:
```
./gradlew leakcanary-cli:run --args='analyze-process com.example.leakcanary'

./gradlew leakcanary-cli:run --args='dump-process com.example.leakcanary'

./gradlew leakcanary-cli:run --args='analyze-file /path/to/heapdump.hprof'
```

Also fixed a bug in ShortestPathFinder which did not ignore null references in object arrays | 2019-07-11 19:11:30 | eded1c96e84f37393857ba4de2580aec784b2391

Behavior change & bugfixes for retained count notification (#1433)

* Bugfix: when tapping the "dump heap" notification, if the GC found no retained instance we didn't use a distinct notification id to communicate that, and then soon after we'd dismiss the notification that let's the user know there is no retained instances on tap.
* Bugfix: we weren't running the GC when checking for retained instances and the count was under the threshold
* Change: we now update the notification and keep it around for 30 seconds when the count goes to 0
* Change: the "no retained instance" notification that shows on tap is identical and also auto dismisses after 30 seconds.
* Change: we're checking for retained references (and running the GC) every 2 seconds instead of 5.

Fixes #1427 | 2019-07-03 20:55:47 | 968083a915343d881bd63e40587c070fde543732

Update how to fix a leak | 2019-06-25 05:46:56 | 177e7fd12933d99eca7a526851c53e598a03bf90

Text rendering tests (#1378)

* Added test coverage for text rendering
* Fixed bug: labels were not rendered on the last node (leaking instance)
* Matched exclusions are now rendered on their own line

Fixes #1375
Fixes #1350 | 2019-06-04 09:32:11 | 1926cb1db73f9583e11c557dbf2e5d46e3896a6e

Thread name based exclusions (#1353)

* Readded support for exclusions of local variable based on thread names
* Renamed ThreadExclusion to JavaLocalExclusion
* Fixed bug: KeyedWeakReference was not always ignored because its superclass is has a weakly reachable exclusion.
* Fixed bug: all root nodes had the same visit order as the first non root enqueued item, making it possible for a non root node to be dequeued before we're done with all roots.
* Redded gc root sorting
* Added tests to cover all uncovered bugs
* Added support for parsing StackFrameRecord

Fixes #1339 | 2019-05-20 13:17:18 | 6c2ee609efda323e88a4964d31fc5a5f0532f776

Reachability => LeakStatus (#1340)

* Combined leaking information from inspectors to solving conflicts while keeping all reasons
* Made reason from view leak inspector more obvious, and added label data about internals
* Moved reachability into LeakTraceElement
* Reachability renamed to LeakNodeStatus and leaking / not leaking
* ReachabilityInspector and Labeler are now functions with type aliases

Related to #1336: should fix the crash, though it's still unclear why AppCompatButton was a gc root there. | 2019-05-07 14:56:59 | 01210bbbfaecb3bcb6057c62b2195366d3bfa4f9

Revamp notifications (#1335)

* New notification that shows the count of retained instances. Tapping it triggers a heap dump. Fixes #1325
* Notifications are now split into two channels: default for results, and low for everything else.
* New config options: LeakCanary.config.dumpHeapWhenDebugging (default false) and LeakCanary.config.retainedVisibleThreshold (default 5)
* Replaced notification int constants and timestamps with resource ids.
* Don't show background notifications in instant apps (#1197) | 2019-05-05 16:38:26 | b14d9bc9c0a87119137bc0998bdec9314186dfcf

Highlighting new leaks (#1334)

New leaks are leaks that have a leak group that doesn't exist in any prior analysis.

* The notification now reports the count of leaks, with a split of new, known, and won't fix.
* The analysis success screen shows new leaks
* Moved description prefixes to be computed rather than inserted in the DB

Fixes #1328 | 2019-05-05 09:37:38 | f9a0518d4ddd69b782b6302caa3e3039787038e4

LeakSentry can be disabled (#1332)

LeakCanary has an enabled config option. Default is on in debug builds off in release builds.

Fixes #1327 | 2019-05-04 17:52:47 | f74f60901f34c751e8b8798d626678aa6233c893

Revert "fix trailing spaces per checkstyle"

This reverts commit ff17f879ec92ec326f8b1c6b7b8d77a5266d6622. | 2019-05-04 08:04:21 | 03136ca7dc1680299d710f79ca885412a1564144

Add test coverage for heap analysis (#1329)

* Fixed bug when reachability inspectors conflicts (reachable should win and erase unreachable)
* Added back support for leaking instances being empty objects, strings, primitive arrays or any object that we otherwise don't follow to find shortest paths. | 2019-05-04 07:51:02 | 59558e655d537c7654c411eebfd840773a8b77c9

Introducing exclusion priority (#1317)

* Add segmented FIFO queue

Unified several queues into one segmented FIFO queue. This will enable us to add several levels of priority.

* Introducing exclusion priority

* "excludedLeak" is now known as "won't fix leak", which matches its reality better. It's a leak that is known and real yet we're not fixing.
* Exclusion.alwaysExclude is replaced with Exclusion.status, with 3 possible values: NEVER_REACHABLE, WONT_FIX_LEAK, WEAKLY_REACHABLE.
* The shortest path finder will now follow weak references after all other paths have been exhausted.
* Removed class exclusion, was confusing, replaced with less lazy approach of listing fields to exclude
* VIEWLOCATIONHOLDER_ROOT should not have been always excluded, fixed.

Fixes #1173 ... well kinda. Instead of "non leaking retained instances", LeakCanary will report weakly reachable traces. Not sure if that'll help but it's a foundation we can build on. | 2019-04-30 17:44:15 | b0eedc553995e354e2382b3378bf0348801cd3c5

AllFieldsLabeler & cleanups (#1316)

* Add new optional labeler that prints all fields (useful for debugging)
* Move deprecated AnalysisResult to perflib
* Made DefaultAnalysisResultListener an object | 2019-04-30 07:08:29 | b9ee5356db265412db39c4c341880f305fbf2c76

fix format | 2019-04-22 06:25:09 | 4a2b158913e5a9eb0d5c6fdfbf949a80fc1b2c6b

Rename default to perflib and experimental to default (#1282)

* Remove experimental from module names

* Remove experimental prefix, add perflib prefix:

* update docs | 2019-04-19 06:01:39 | 425a9f24deb72691b02cdc85f80d177c05afebc5

fix list | 2019-04-18 21:55:43 | 8e3f9d26e8d3555bf934b99ac062aabc3aba528f

fix broken master | 2019-04-10 15:00:30 | f067ae53e050c5f52f47237440a6ac7eee3ca94c

fix broken build due to typo | 2019-04-10 05:44:19 | 7d4ddb4ffe3c9b0f30a84848675452dded0d4115

Leaking information aligned below simple class name. (#1258)

Also fixed issue where extraString + exclusionString were showing after the squiggly line.

Before: 
``` 
┬
├─ java.lang.Thread
│                 Leaking: NO (it's a GC root)
│                 ↓ thread Thread.<Java Local>
│                                ~~~~~~~~~~~~~ (named 'Thread-4')
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                 Leaking: UNKNOWN
│                 ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                     ~~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) 
```
After: 
``` 
┬
├─ java.lang.Thread
│            Leaking: NO (it's a GC root)
│            ↓ thread Thread.<Java Local> (named 'Thread-4')
│                            ~~~~~~~~~~~~
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                         Leaking: UNKNOWN
│                         ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                              ~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) ``` | 2019-04-05 20:11:47 | a938855585c7cf2522ffbd143d4bb66a234eea66

Add share to Stack Overflow button when viewing a leak (#1252)

* Add share to Stack Overflow button when viewing a leak

* Add question tag, lengthen toast and fix build failure. | 2019-04-04 20:49:50 | 8724d2aaffc07904517a3b823867802ca43233ae

Check if serviceInfo.processName is null. When LeakCanary runs on a seperate process and that process for some reason does not have a assigned processName, then we will crash on a NullPointerException. Also a debug log explaining this. (#1225) | 2019-04-01 19:20:40 | 3efc43608ed71dc20b0ad1e0e80e33d15249666f

fix master broken | 2019-04-01 19:07:27 | fe42130029174681a708b7d8622412efbaf81e73

fix trailing spaces per checkstyle | 2019-03-29 22:34:58 | ff17f879ec92ec326f8b1c6b7b8d77a5266d6622

Fix GC Root bugs that missed leaks (#1168)

In Perflib, Snapshot.getGcRoots() only returns the GC roots from the first heap. Based on empirical evidence, it seems like Android has 4 heaps, and the GC Roots used to only be in the first heap, but more recent versions of Android have GC Roots in other heaps as well.

This means LeakCanary would sometimes show "No Leak Found" when there actually was a leak.

Fixes #1163 | 2019-01-10 23:32:27 | 64b6e5a41796ae1587c50c8cc860cea25f28f382

fix typo | 2018-10-17 00:43:01 | 044b1e4827bc71ec008dc3f7e43c78f58885f1e1

Fix LeakCanary toasting (#1116)

- Prior attempts to get it to work with the application context turned out to be buggy.
- This makes LeakCanary use whatever the current resumed activity is, if any.
- If there is no resumed activity, then the toast isn't displayed.

This supersedes #1080 | 2018-10-16 13:23:14 | 0e39e2eea79bc05bf7147a4074dd7163f7c401ff

fix the wrong word (#1111) | 2018-10-16 01:25:28 | 636b9b6c2b39c0c887c9ed78e904239db9bc131e

Merge pull request #1104 from IlyaGulya/bug/travis-ci-cache-fix

Fix travis caching and improve build time. | 2018-09-22 21:25:59 | 344728b906daf6d010f66bdf4ccc29ad8fedede5

Error prone 2.3.1 + suggested fix and specify version

See http://errorprone.info/bugpattern/StringSplitter | 2018-08-22 07:37:33 | a6b6960d73a1da9661f4e85254570bf5f867f954

Merge pull request #1089 from hzsweers/z/fixAnother

Quick followup to #1088 | 2018-08-22 03:15:15 | be973f5f5da6a3516aedab98e639690697617747

Merge pull request #1087 from Goddchen/patch-2

Updated german translation | 2018-08-20 13:52:47 | b43c279b3e1623c193e1dc81955527f70e93f822

Merge pull request #1063 from javmarina/patch-1

Fixed wrong versions in AndroidExcludedRefs | 2018-07-25 18:31:55 | 3b4ebe3e2571377f93e9a6976e021324502a0f78

Fixed wrong versions in AndroidExcludedRefs

Commit https://android.googlesource.com/platform/frameworks/base/+/27db46850b708070452c0ce49daf5f79503fbde6 introduced this issue. This commit was first included in Jelly Bean 4.3 (JELLY_BEAN_MR2), not Jelly Bean 4.1 (JELLY_BEAN)
Commit https://android.googlesource.com/platform/frameworks/base/+/5200e1cb07190a1f6874d72a4561064cad3ee3e0 fixes this issue and was first included in Oreo 8.0 (O). Nougat still has this memory leak. | 2018-07-24 18:24:59 | e4778b25f2c6e65ebc485d255e38586c7d45ec97

Merge pull request #1057 from square/py/ui_bug

Fix drawing of start line | 2018-07-20 22:21:19 | af96577a7d19e4df9f63d95fd9c3bfd2adcddb5d

Avoid Toast crashes

Showing a toast can crash on API 25 because the Window Manager can throw a BadTokenException when addView is called.

This change fixes it by configuring the toast manually and calling the window manager directly. This is based on https://github.com/pyricau/frenchtoast/blob/master/frenchtoast/src/main/java/frenchtoast/Mixture.java#L49 .

Fixes #844 | 2018-07-20 16:11:22 | c9ebc5cf5099c093bde5d3309b2692cb0e2016d8

Fixing setup bug | 2018-06-28 04:07:09 | 505933817cf6e2eb0dad4a78d4c7c35a072b9868

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

Merge pull request #1596 from fernandospr/patch-1

Update blog-articles.md | 2019-10-04 16:35:24 | e65236dae7c5827b7c9f64c19c8b1a16ea19e5a7

Merge pull request #1598 from PaulWoitaschek/patch-1

Fixed the german string placeholder for sharing the heap dump | 2019-10-03 16:16:23 | 029f28eefd7aa966520ac3649fd2688732c02867

Fix crash when pressing home from root screen (#1578)

This bug only happens on older Android devices.

Fixes #1555 | 2019-09-11 01:51:06 | 274f58f96e8de7dcd3000c06ba3e2b50e427747d

Merge pull request #1559 from bric3/fix-primitive-array-dump-skip

Fixes the primitive array dump record skipping | 2019-09-09 22:16:57 | c0fd4d812cb8d6c5723231e501c121da2af86f06

Parsing and applying proguard mapping during heap analysis (#1542)

* Parsing and applying proguard mapping during heap analysis

* Parsing and applying proguard mapping during heap analysis

* Rebased onto master

* Post review changes and updated shark-cli to support mapping files

* Post review fixes

* Moving proguard mapping reader out of the analyzer and formatting fixes | 2019-08-30 16:54:20 | 66182a52069d9be59d0af6220aa9afd74218aa9b

fix images | 2019-08-27 20:02:50 | 8f5030e9faa8690217e1bd436274a3de5b9d3fb3

fix image links in docs | 2019-08-27 19:59:20 | edca56a947278508350bfa5dd33d3fa10699001f

Merge pull request #1549 from Armaxis/patch-1

Added section about using Detekt to Contributing | 2019-08-24 22:16:26 | c923d14909888860a99d5899af17f5b52c9b000f

Revert "Replaced accessor with a call to setter to fix the build issue"

This reverts commit 82db0398 | 2019-08-17 02:21:08 | c570cb9b0fd7bd7fcc88c4d3b529df8837e98fdc

Replaced accessor with a call to setter to fix the build issue | 2019-08-16 04:32:25 | 82db039843303044f91d36ba7c43595ab59bacd5

fix typo | 2019-08-02 15:31:17 | a2452f61e78e689efb59adaf71384d74447578b0

Add / fix android inspectors (#1491)

* Added MortarScope and ViewRootImpl inspectors
* Fixed the ContextWrapper inspector

Fixes #1490
Fixes #1389 | 2019-07-25 22:50:48 | 915f8359690a016a09e66608a041454b9c8c52cb

Documenting public APIs (#1476)

Also fixed naming and other things that weren't right.

Fixes #1474 | 2019-07-19 06:57:25 | 41c69a5d424b4236114c5ce1b077afdad38e57a5

Adding CLI for LeakCanary (#1456)

Example usage:
```
./gradlew leakcanary-cli:run --args='analyze-process com.example.leakcanary'

./gradlew leakcanary-cli:run --args='dump-process com.example.leakcanary'

./gradlew leakcanary-cli:run --args='analyze-file /path/to/heapdump.hprof'
```

Also fixed a bug in ShortestPathFinder which did not ignore null references in object arrays | 2019-07-11 19:11:30 | eded1c96e84f37393857ba4de2580aec784b2391

Behavior change & bugfixes for retained count notification (#1433)

* Bugfix: when tapping the "dump heap" notification, if the GC found no retained instance we didn't use a distinct notification id to communicate that, and then soon after we'd dismiss the notification that let's the user know there is no retained instances on tap.
* Bugfix: we weren't running the GC when checking for retained instances and the count was under the threshold
* Change: we now update the notification and keep it around for 30 seconds when the count goes to 0
* Change: the "no retained instance" notification that shows on tap is identical and also auto dismisses after 30 seconds.
* Change: we're checking for retained references (and running the GC) every 2 seconds instead of 5.

Fixes #1427 | 2019-07-03 20:55:47 | 968083a915343d881bd63e40587c070fde543732

Update how to fix a leak | 2019-06-25 05:46:56 | 177e7fd12933d99eca7a526851c53e598a03bf90

Text rendering tests (#1378)

* Added test coverage for text rendering
* Fixed bug: labels were not rendered on the last node (leaking instance)
* Matched exclusions are now rendered on their own line

Fixes #1375
Fixes #1350 | 2019-06-04 09:32:11 | 1926cb1db73f9583e11c557dbf2e5d46e3896a6e

Thread name based exclusions (#1353)

* Readded support for exclusions of local variable based on thread names
* Renamed ThreadExclusion to JavaLocalExclusion
* Fixed bug: KeyedWeakReference was not always ignored because its superclass is has a weakly reachable exclusion.
* Fixed bug: all root nodes had the same visit order as the first non root enqueued item, making it possible for a non root node to be dequeued before we're done with all roots.
* Redded gc root sorting
* Added tests to cover all uncovered bugs
* Added support for parsing StackFrameRecord

Fixes #1339 | 2019-05-20 13:17:18 | 6c2ee609efda323e88a4964d31fc5a5f0532f776

Reachability => LeakStatus (#1340)

* Combined leaking information from inspectors to solving conflicts while keeping all reasons
* Made reason from view leak inspector more obvious, and added label data about internals
* Moved reachability into LeakTraceElement
* Reachability renamed to LeakNodeStatus and leaking / not leaking
* ReachabilityInspector and Labeler are now functions with type aliases

Related to #1336: should fix the crash, though it's still unclear why AppCompatButton was a gc root there. | 2019-05-07 14:56:59 | 01210bbbfaecb3bcb6057c62b2195366d3bfa4f9

Revamp notifications (#1335)

* New notification that shows the count of retained instances. Tapping it triggers a heap dump. Fixes #1325
* Notifications are now split into two channels: default for results, and low for everything else.
* New config options: LeakCanary.config.dumpHeapWhenDebugging (default false) and LeakCanary.config.retainedVisibleThreshold (default 5)
* Replaced notification int constants and timestamps with resource ids.
* Don't show background notifications in instant apps (#1197) | 2019-05-05 16:38:26 | b14d9bc9c0a87119137bc0998bdec9314186dfcf

Highlighting new leaks (#1334)

New leaks are leaks that have a leak group that doesn't exist in any prior analysis.

* The notification now reports the count of leaks, with a split of new, known, and won't fix.
* The analysis success screen shows new leaks
* Moved description prefixes to be computed rather than inserted in the DB

Fixes #1328 | 2019-05-05 09:37:38 | f9a0518d4ddd69b782b6302caa3e3039787038e4

LeakSentry can be disabled (#1332)

LeakCanary has an enabled config option. Default is on in debug builds off in release builds.

Fixes #1327 | 2019-05-04 17:52:47 | f74f60901f34c751e8b8798d626678aa6233c893

Revert "fix trailing spaces per checkstyle"

This reverts commit ff17f879ec92ec326f8b1c6b7b8d77a5266d6622. | 2019-05-04 08:04:21 | 03136ca7dc1680299d710f79ca885412a1564144

Add test coverage for heap analysis (#1329)

* Fixed bug when reachability inspectors conflicts (reachable should win and erase unreachable)
* Added back support for leaking instances being empty objects, strings, primitive arrays or any object that we otherwise don't follow to find shortest paths. | 2019-05-04 07:51:02 | 59558e655d537c7654c411eebfd840773a8b77c9

Introducing exclusion priority (#1317)

* Add segmented FIFO queue

Unified several queues into one segmented FIFO queue. This will enable us to add several levels of priority.

* Introducing exclusion priority

* "excludedLeak" is now known as "won't fix leak", which matches its reality better. It's a leak that is known and real yet we're not fixing.
* Exclusion.alwaysExclude is replaced with Exclusion.status, with 3 possible values: NEVER_REACHABLE, WONT_FIX_LEAK, WEAKLY_REACHABLE.
* The shortest path finder will now follow weak references after all other paths have been exhausted.
* Removed class exclusion, was confusing, replaced with less lazy approach of listing fields to exclude
* VIEWLOCATIONHOLDER_ROOT should not have been always excluded, fixed.

Fixes #1173 ... well kinda. Instead of "non leaking retained instances", LeakCanary will report weakly reachable traces. Not sure if that'll help but it's a foundation we can build on. | 2019-04-30 17:44:15 | b0eedc553995e354e2382b3378bf0348801cd3c5

AllFieldsLabeler & cleanups (#1316)

* Add new optional labeler that prints all fields (useful for debugging)
* Move deprecated AnalysisResult to perflib
* Made DefaultAnalysisResultListener an object | 2019-04-30 07:08:29 | b9ee5356db265412db39c4c341880f305fbf2c76

fix format | 2019-04-22 06:25:09 | 4a2b158913e5a9eb0d5c6fdfbf949a80fc1b2c6b

Rename default to perflib and experimental to default (#1282)

* Remove experimental from module names

* Remove experimental prefix, add perflib prefix:

* update docs | 2019-04-19 06:01:39 | 425a9f24deb72691b02cdc85f80d177c05afebc5

fix list | 2019-04-18 21:55:43 | 8e3f9d26e8d3555bf934b99ac062aabc3aba528f

fix broken master | 2019-04-10 15:00:30 | f067ae53e050c5f52f47237440a6ac7eee3ca94c

fix broken build due to typo | 2019-04-10 05:44:19 | 7d4ddb4ffe3c9b0f30a84848675452dded0d4115

Leaking information aligned below simple class name. (#1258)

Also fixed issue where extraString + exclusionString were showing after the squiggly line.

Before: 
``` 
┬
├─ java.lang.Thread
│                 Leaking: NO (it's a GC root)
│                 ↓ thread Thread.<Java Local>
│                                ~~~~~~~~~~~~~ (named 'Thread-4')
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                 Leaking: UNKNOWN
│                 ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                     ~~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) 
```
After: 
``` 
┬
├─ java.lang.Thread
│            Leaking: NO (it's a GC root)
│            ↓ thread Thread.<Java Local> (named 'Thread-4')
│                            ~~~~~~~~~~~~
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                         Leaking: UNKNOWN
│                         ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                              ~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) ``` | 2019-04-05 20:11:47 | a938855585c7cf2522ffbd143d4bb66a234eea66

Add share to Stack Overflow button when viewing a leak (#1252)

* Add share to Stack Overflow button when viewing a leak

* Add question tag, lengthen toast and fix build failure. | 2019-04-04 20:49:50 | 8724d2aaffc07904517a3b823867802ca43233ae

Check if serviceInfo.processName is null. When LeakCanary runs on a seperate process and that process for some reason does not have a assigned processName, then we will crash on a NullPointerException. Also a debug log explaining this. (#1225) | 2019-04-01 19:20:40 | 3efc43608ed71dc20b0ad1e0e80e33d15249666f

fix master broken | 2019-04-01 19:07:27 | fe42130029174681a708b7d8622412efbaf81e73

fix trailing spaces per checkstyle | 2019-03-29 22:34:58 | ff17f879ec92ec326f8b1c6b7b8d77a5266d6622

Fix GC Root bugs that missed leaks (#1168)

In Perflib, Snapshot.getGcRoots() only returns the GC roots from the first heap. Based on empirical evidence, it seems like Android has 4 heaps, and the GC Roots used to only be in the first heap, but more recent versions of Android have GC Roots in other heaps as well.

This means LeakCanary would sometimes show "No Leak Found" when there actually was a leak.

Fixes #1163 | 2019-01-10 23:32:27 | 64b6e5a41796ae1587c50c8cc860cea25f28f382

fix typo | 2018-10-17 00:43:01 | 044b1e4827bc71ec008dc3f7e43c78f58885f1e1

Fix LeakCanary toasting (#1116)

- Prior attempts to get it to work with the application context turned out to be buggy.
- This makes LeakCanary use whatever the current resumed activity is, if any.
- If there is no resumed activity, then the toast isn't displayed.

This supersedes #1080 | 2018-10-16 13:23:14 | 0e39e2eea79bc05bf7147a4074dd7163f7c401ff

fix the wrong word (#1111) | 2018-10-16 01:25:28 | 636b9b6c2b39c0c887c9ed78e904239db9bc131e

Merge pull request #1104 from IlyaGulya/bug/travis-ci-cache-fix

Fix travis caching and improve build time. | 2018-09-22 21:25:59 | 344728b906daf6d010f66bdf4ccc29ad8fedede5

Error prone 2.3.1 + suggested fix and specify version

See http://errorprone.info/bugpattern/StringSplitter | 2018-08-22 07:37:33 | a6b6960d73a1da9661f4e85254570bf5f867f954

Merge pull request #1089 from hzsweers/z/fixAnother

Quick followup to #1088 | 2018-08-22 03:15:15 | be973f5f5da6a3516aedab98e639690697617747

Merge pull request #1087 from Goddchen/patch-2

Updated german translation | 2018-08-20 13:52:47 | b43c279b3e1623c193e1dc81955527f70e93f822

Merge pull request #1063 from javmarina/patch-1

Fixed wrong versions in AndroidExcludedRefs | 2018-07-25 18:31:55 | 3b4ebe3e2571377f93e9a6976e021324502a0f78

Fixed wrong versions in AndroidExcludedRefs

Commit https://android.googlesource.com/platform/frameworks/base/+/27db46850b708070452c0ce49daf5f79503fbde6 introduced this issue. This commit was first included in Jelly Bean 4.3 (JELLY_BEAN_MR2), not Jelly Bean 4.1 (JELLY_BEAN)
Commit https://android.googlesource.com/platform/frameworks/base/+/5200e1cb07190a1f6874d72a4561064cad3ee3e0 fixes this issue and was first included in Oreo 8.0 (O). Nougat still has this memory leak. | 2018-07-24 18:24:59 | e4778b25f2c6e65ebc485d255e38586c7d45ec97

Merge pull request #1057 from square/py/ui_bug

Fix drawing of start line | 2018-07-20 22:21:19 | af96577a7d19e4df9f63d95fd9c3bfd2adcddb5d

Avoid Toast crashes

Showing a toast can crash on API 25 because the Window Manager can throw a BadTokenException when addView is called.

This change fixes it by configuring the toast manually and calling the window manager directly. This is based on https://github.com/pyricau/frenchtoast/blob/master/frenchtoast/src/main/java/frenchtoast/Mixture.java#L49 .

Fixes #844 | 2018-07-20 16:11:22 | c9ebc5cf5099c093bde5d3309b2692cb0e2016d8

Fixing setup bug | 2018-06-28 04:07:09 | 505933817cf6e2eb0dad4a78d4c7c35a072b9868

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

Update how to fix a leak | 2019-06-25 05:46:56 | 177e7fd12933d99eca7a526851c53e598a03bf90

Text rendering tests (#1378)

* Added test coverage for text rendering
* Fixed bug: labels were not rendered on the last node (leaking instance)
* Matched exclusions are now rendered on their own line

Fixes #1375
Fixes #1350 | 2019-06-04 09:32:11 | 1926cb1db73f9583e11c557dbf2e5d46e3896a6e

Thread name based exclusions (#1353)

* Readded support for exclusions of local variable based on thread names
* Renamed ThreadExclusion to JavaLocalExclusion
* Fixed bug: KeyedWeakReference was not always ignored because its superclass is has a weakly reachable exclusion.
* Fixed bug: all root nodes had the same visit order as the first non root enqueued item, making it possible for a non root node to be dequeued before we're done with all roots.
* Redded gc root sorting
* Added tests to cover all uncovered bugs
* Added support for parsing StackFrameRecord

Fixes #1339 | 2019-05-20 13:17:18 | 6c2ee609efda323e88a4964d31fc5a5f0532f776

Reachability => LeakStatus (#1340)

* Combined leaking information from inspectors to solving conflicts while keeping all reasons
* Made reason from view leak inspector more obvious, and added label data about internals
* Moved reachability into LeakTraceElement
* Reachability renamed to LeakNodeStatus and leaking / not leaking
* ReachabilityInspector and Labeler are now functions with type aliases

Related to #1336: should fix the crash, though it's still unclear why AppCompatButton was a gc root there. | 2019-05-07 14:56:59 | 01210bbbfaecb3bcb6057c62b2195366d3bfa4f9

Revamp notifications (#1335)

* New notification that shows the count of retained instances. Tapping it triggers a heap dump. Fixes #1325
* Notifications are now split into two channels: default for results, and low for everything else.
* New config options: LeakCanary.config.dumpHeapWhenDebugging (default false) and LeakCanary.config.retainedVisibleThreshold (default 5)
* Replaced notification int constants and timestamps with resource ids.
* Don't show background notifications in instant apps (#1197) | 2019-05-05 16:38:26 | b14d9bc9c0a87119137bc0998bdec9314186dfcf

Highlighting new leaks (#1334)

New leaks are leaks that have a leak group that doesn't exist in any prior analysis.

* The notification now reports the count of leaks, with a split of new, known, and won't fix.
* The analysis success screen shows new leaks
* Moved description prefixes to be computed rather than inserted in the DB

Fixes #1328 | 2019-05-05 09:37:38 | f9a0518d4ddd69b782b6302caa3e3039787038e4

LeakSentry can be disabled (#1332)

LeakCanary has an enabled config option. Default is on in debug builds off in release builds.

Fixes #1327 | 2019-05-04 17:52:47 | f74f60901f34c751e8b8798d626678aa6233c893

Revert "fix trailing spaces per checkstyle"

This reverts commit ff17f879ec92ec326f8b1c6b7b8d77a5266d6622. | 2019-05-04 08:04:21 | 03136ca7dc1680299d710f79ca885412a1564144

Add test coverage for heap analysis (#1329)

* Fixed bug when reachability inspectors conflicts (reachable should win and erase unreachable)
* Added back support for leaking instances being empty objects, strings, primitive arrays or any object that we otherwise don't follow to find shortest paths. | 2019-05-04 07:51:02 | 59558e655d537c7654c411eebfd840773a8b77c9

Introducing exclusion priority (#1317)

* Add segmented FIFO queue

Unified several queues into one segmented FIFO queue. This will enable us to add several levels of priority.

* Introducing exclusion priority

* "excludedLeak" is now known as "won't fix leak", which matches its reality better. It's a leak that is known and real yet we're not fixing.
* Exclusion.alwaysExclude is replaced with Exclusion.status, with 3 possible values: NEVER_REACHABLE, WONT_FIX_LEAK, WEAKLY_REACHABLE.
* The shortest path finder will now follow weak references after all other paths have been exhausted.
* Removed class exclusion, was confusing, replaced with less lazy approach of listing fields to exclude
* VIEWLOCATIONHOLDER_ROOT should not have been always excluded, fixed.

Fixes #1173 ... well kinda. Instead of "non leaking retained instances", LeakCanary will report weakly reachable traces. Not sure if that'll help but it's a foundation we can build on. | 2019-04-30 17:44:15 | b0eedc553995e354e2382b3378bf0348801cd3c5

AllFieldsLabeler & cleanups (#1316)

* Add new optional labeler that prints all fields (useful for debugging)
* Move deprecated AnalysisResult to perflib
* Made DefaultAnalysisResultListener an object | 2019-04-30 07:08:29 | b9ee5356db265412db39c4c341880f305fbf2c76

fix format | 2019-04-22 06:25:09 | 4a2b158913e5a9eb0d5c6fdfbf949a80fc1b2c6b

Rename default to perflib and experimental to default (#1282)

* Remove experimental from module names

* Remove experimental prefix, add perflib prefix:

* update docs | 2019-04-19 06:01:39 | 425a9f24deb72691b02cdc85f80d177c05afebc5

fix list | 2019-04-18 21:55:43 | 8e3f9d26e8d3555bf934b99ac062aabc3aba528f

fix broken master | 2019-04-10 15:00:30 | f067ae53e050c5f52f47237440a6ac7eee3ca94c

fix broken build due to typo | 2019-04-10 05:44:19 | 7d4ddb4ffe3c9b0f30a84848675452dded0d4115

Leaking information aligned below simple class name. (#1258)

Also fixed issue where extraString + exclusionString were showing after the squiggly line.

Before: 
``` 
┬
├─ java.lang.Thread
│                 Leaking: NO (it's a GC root)
│                 ↓ thread Thread.<Java Local>
│                                ~~~~~~~~~~~~~ (named 'Thread-4')
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                 Leaking: UNKNOWN
│                 ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                     ~~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) 
```
After: 
``` 
┬
├─ java.lang.Thread
│            Leaking: NO (it's a GC root)
│            ↓ thread Thread.<Java Local> (named 'Thread-4')
│                            ~~~~~~~~~~~~
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                         Leaking: UNKNOWN
│                         ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                              ~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) ``` | 2019-04-05 20:11:47 | a938855585c7cf2522ffbd143d4bb66a234eea66

Add share to Stack Overflow button when viewing a leak (#1252)

* Add share to Stack Overflow button when viewing a leak

* Add question tag, lengthen toast and fix build failure. | 2019-04-04 20:49:50 | 8724d2aaffc07904517a3b823867802ca43233ae

Check if serviceInfo.processName is null. When LeakCanary runs on a seperate process and that process for some reason does not have a assigned processName, then we will crash on a NullPointerException. Also a debug log explaining this. (#1225) | 2019-04-01 19:20:40 | 3efc43608ed71dc20b0ad1e0e80e33d15249666f

fix master broken | 2019-04-01 19:07:27 | fe42130029174681a708b7d8622412efbaf81e73

fix trailing spaces per checkstyle | 2019-03-29 22:34:58 | ff17f879ec92ec326f8b1c6b7b8d77a5266d6622

Fix GC Root bugs that missed leaks (#1168)

In Perflib, Snapshot.getGcRoots() only returns the GC roots from the first heap. Based on empirical evidence, it seems like Android has 4 heaps, and the GC Roots used to only be in the first heap, but more recent versions of Android have GC Roots in other heaps as well.

This means LeakCanary would sometimes show "No Leak Found" when there actually was a leak.

Fixes #1163 | 2019-01-10 23:32:27 | 64b6e5a41796ae1587c50c8cc860cea25f28f382

fix typo | 2018-10-17 00:43:01 | 044b1e4827bc71ec008dc3f7e43c78f58885f1e1

Fix LeakCanary toasting (#1116)

- Prior attempts to get it to work with the application context turned out to be buggy.
- This makes LeakCanary use whatever the current resumed activity is, if any.
- If there is no resumed activity, then the toast isn't displayed.

This supersedes #1080 | 2018-10-16 13:23:14 | 0e39e2eea79bc05bf7147a4074dd7163f7c401ff

fix the wrong word (#1111) | 2018-10-16 01:25:28 | 636b9b6c2b39c0c887c9ed78e904239db9bc131e

Merge pull request #1104 from IlyaGulya/bug/travis-ci-cache-fix

Fix travis caching and improve build time. | 2018-09-22 21:25:59 | 344728b906daf6d010f66bdf4ccc29ad8fedede5

Error prone 2.3.1 + suggested fix and specify version

See http://errorprone.info/bugpattern/StringSplitter | 2018-08-22 07:37:33 | a6b6960d73a1da9661f4e85254570bf5f867f954

Merge pull request #1089 from hzsweers/z/fixAnother

Quick followup to #1088 | 2018-08-22 03:15:15 | be973f5f5da6a3516aedab98e639690697617747

Merge pull request #1087 from Goddchen/patch-2

Updated german translation | 2018-08-20 13:52:47 | b43c279b3e1623c193e1dc81955527f70e93f822

Merge pull request #1063 from javmarina/patch-1

Fixed wrong versions in AndroidExcludedRefs | 2018-07-25 18:31:55 | 3b4ebe3e2571377f93e9a6976e021324502a0f78

Fixed wrong versions in AndroidExcludedRefs

Commit https://android.googlesource.com/platform/frameworks/base/+/27db46850b708070452c0ce49daf5f79503fbde6 introduced this issue. This commit was first included in Jelly Bean 4.3 (JELLY_BEAN_MR2), not Jelly Bean 4.1 (JELLY_BEAN)
Commit https://android.googlesource.com/platform/frameworks/base/+/5200e1cb07190a1f6874d72a4561064cad3ee3e0 fixes this issue and was first included in Oreo 8.0 (O). Nougat still has this memory leak. | 2018-07-24 18:24:59 | e4778b25f2c6e65ebc485d255e38586c7d45ec97

Merge pull request #1057 from square/py/ui_bug

Fix drawing of start line | 2018-07-20 22:21:19 | af96577a7d19e4df9f63d95fd9c3bfd2adcddb5d

Avoid Toast crashes

Showing a toast can crash on API 25 because the Window Manager can throw a BadTokenException when addView is called.

This change fixes it by configuring the toast manually and calling the window manager directly. This is based on https://github.com/pyricau/frenchtoast/blob/master/frenchtoast/src/main/java/frenchtoast/Mixture.java#L49 .

Fixes #844 | 2018-07-20 16:11:22 | c9ebc5cf5099c093bde5d3309b2692cb0e2016d8

Fixing setup bug | 2018-06-28 04:07:09 | 505933817cf6e2eb0dad4a78d4c7c35a072b9868

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

fix typo | 2019-08-02 15:31:17 | a2452f61e78e689efb59adaf71384d74447578b0

Add / fix android inspectors (#1491)

* Added MortarScope and ViewRootImpl inspectors
* Fixed the ContextWrapper inspector

Fixes #1490
Fixes #1389 | 2019-07-25 22:50:48 | 915f8359690a016a09e66608a041454b9c8c52cb

Documenting public APIs (#1476)

Also fixed naming and other things that weren't right.

Fixes #1474 | 2019-07-19 06:57:25 | 41c69a5d424b4236114c5ce1b077afdad38e57a5

Adding CLI for LeakCanary (#1456)

Example usage:
```
./gradlew leakcanary-cli:run --args='analyze-process com.example.leakcanary'

./gradlew leakcanary-cli:run --args='dump-process com.example.leakcanary'

./gradlew leakcanary-cli:run --args='analyze-file /path/to/heapdump.hprof'
```

Also fixed a bug in ShortestPathFinder which did not ignore null references in object arrays | 2019-07-11 19:11:30 | eded1c96e84f37393857ba4de2580aec784b2391

Behavior change & bugfixes for retained count notification (#1433)

* Bugfix: when tapping the "dump heap" notification, if the GC found no retained instance we didn't use a distinct notification id to communicate that, and then soon after we'd dismiss the notification that let's the user know there is no retained instances on tap.
* Bugfix: we weren't running the GC when checking for retained instances and the count was under the threshold
* Change: we now update the notification and keep it around for 30 seconds when the count goes to 0
* Change: the "no retained instance" notification that shows on tap is identical and also auto dismisses after 30 seconds.
* Change: we're checking for retained references (and running the GC) every 2 seconds instead of 5.

Fixes #1427 | 2019-07-03 20:55:47 | 968083a915343d881bd63e40587c070fde543732

Update how to fix a leak | 2019-06-25 05:46:56 | 177e7fd12933d99eca7a526851c53e598a03bf90

Text rendering tests (#1378)

* Added test coverage for text rendering
* Fixed bug: labels were not rendered on the last node (leaking instance)
* Matched exclusions are now rendered on their own line

Fixes #1375
Fixes #1350 | 2019-06-04 09:32:11 | 1926cb1db73f9583e11c557dbf2e5d46e3896a6e

Thread name based exclusions (#1353)

* Readded support for exclusions of local variable based on thread names
* Renamed ThreadExclusion to JavaLocalExclusion
* Fixed bug: KeyedWeakReference was not always ignored because its superclass is has a weakly reachable exclusion.
* Fixed bug: all root nodes had the same visit order as the first non root enqueued item, making it possible for a non root node to be dequeued before we're done with all roots.
* Redded gc root sorting
* Added tests to cover all uncovered bugs
* Added support for parsing StackFrameRecord

Fixes #1339 | 2019-05-20 13:17:18 | 6c2ee609efda323e88a4964d31fc5a5f0532f776

Reachability => LeakStatus (#1340)

* Combined leaking information from inspectors to solving conflicts while keeping all reasons
* Made reason from view leak inspector more obvious, and added label data about internals
* Moved reachability into LeakTraceElement
* Reachability renamed to LeakNodeStatus and leaking / not leaking
* ReachabilityInspector and Labeler are now functions with type aliases

Related to #1336: should fix the crash, though it's still unclear why AppCompatButton was a gc root there. | 2019-05-07 14:56:59 | 01210bbbfaecb3bcb6057c62b2195366d3bfa4f9

Revamp notifications (#1335)

* New notification that shows the count of retained instances. Tapping it triggers a heap dump. Fixes #1325
* Notifications are now split into two channels: default for results, and low for everything else.
* New config options: LeakCanary.config.dumpHeapWhenDebugging (default false) and LeakCanary.config.retainedVisibleThreshold (default 5)
* Replaced notification int constants and timestamps with resource ids.
* Don't show background notifications in instant apps (#1197) | 2019-05-05 16:38:26 | b14d9bc9c0a87119137bc0998bdec9314186dfcf

Highlighting new leaks (#1334)

New leaks are leaks that have a leak group that doesn't exist in any prior analysis.

* The notification now reports the count of leaks, with a split of new, known, and won't fix.
* The analysis success screen shows new leaks
* Moved description prefixes to be computed rather than inserted in the DB

Fixes #1328 | 2019-05-05 09:37:38 | f9a0518d4ddd69b782b6302caa3e3039787038e4

LeakSentry can be disabled (#1332)

LeakCanary has an enabled config option. Default is on in debug builds off in release builds.

Fixes #1327 | 2019-05-04 17:52:47 | f74f60901f34c751e8b8798d626678aa6233c893

Revert "fix trailing spaces per checkstyle"

This reverts commit ff17f879ec92ec326f8b1c6b7b8d77a5266d6622. | 2019-05-04 08:04:21 | 03136ca7dc1680299d710f79ca885412a1564144

Add test coverage for heap analysis (#1329)

* Fixed bug when reachability inspectors conflicts (reachable should win and erase unreachable)
* Added back support for leaking instances being empty objects, strings, primitive arrays or any object that we otherwise don't follow to find shortest paths. | 2019-05-04 07:51:02 | 59558e655d537c7654c411eebfd840773a8b77c9

Introducing exclusion priority (#1317)

* Add segmented FIFO queue

Unified several queues into one segmented FIFO queue. This will enable us to add several levels of priority.

* Introducing exclusion priority

* "excludedLeak" is now known as "won't fix leak", which matches its reality better. It's a leak that is known and real yet we're not fixing.
* Exclusion.alwaysExclude is replaced with Exclusion.status, with 3 possible values: NEVER_REACHABLE, WONT_FIX_LEAK, WEAKLY_REACHABLE.
* The shortest path finder will now follow weak references after all other paths have been exhausted.
* Removed class exclusion, was confusing, replaced with less lazy approach of listing fields to exclude
* VIEWLOCATIONHOLDER_ROOT should not have been always excluded, fixed.

Fixes #1173 ... well kinda. Instead of "non leaking retained instances", LeakCanary will report weakly reachable traces. Not sure if that'll help but it's a foundation we can build on. | 2019-04-30 17:44:15 | b0eedc553995e354e2382b3378bf0348801cd3c5

AllFieldsLabeler & cleanups (#1316)

* Add new optional labeler that prints all fields (useful for debugging)
* Move deprecated AnalysisResult to perflib
* Made DefaultAnalysisResultListener an object | 2019-04-30 07:08:29 | b9ee5356db265412db39c4c341880f305fbf2c76

fix format | 2019-04-22 06:25:09 | 4a2b158913e5a9eb0d5c6fdfbf949a80fc1b2c6b

Rename default to perflib and experimental to default (#1282)

* Remove experimental from module names

* Remove experimental prefix, add perflib prefix:

* update docs | 2019-04-19 06:01:39 | 425a9f24deb72691b02cdc85f80d177c05afebc5

fix list | 2019-04-18 21:55:43 | 8e3f9d26e8d3555bf934b99ac062aabc3aba528f

fix broken master | 2019-04-10 15:00:30 | f067ae53e050c5f52f47237440a6ac7eee3ca94c

fix broken build due to typo | 2019-04-10 05:44:19 | 7d4ddb4ffe3c9b0f30a84848675452dded0d4115

Leaking information aligned below simple class name. (#1258)

Also fixed issue where extraString + exclusionString were showing after the squiggly line.

Before: 
``` 
┬
├─ java.lang.Thread
│                 Leaking: NO (it's a GC root)
│                 ↓ thread Thread.<Java Local>
│                                ~~~~~~~~~~~~~ (named 'Thread-4')
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                 Leaking: UNKNOWN
│                 ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                     ~~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) 
```
After: 
``` 
┬
├─ java.lang.Thread
│            Leaking: NO (it's a GC root)
│            ↓ thread Thread.<Java Local> (named 'Thread-4')
│                            ~~~~~~~~~~~~
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                         Leaking: UNKNOWN
│                         ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                              ~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) ``` | 2019-04-05 20:11:47 | a938855585c7cf2522ffbd143d4bb66a234eea66

Add share to Stack Overflow button when viewing a leak (#1252)

* Add share to Stack Overflow button when viewing a leak

* Add question tag, lengthen toast and fix build failure. | 2019-04-04 20:49:50 | 8724d2aaffc07904517a3b823867802ca43233ae

Check if serviceInfo.processName is null. When LeakCanary runs on a seperate process and that process for some reason does not have a assigned processName, then we will crash on a NullPointerException. Also a debug log explaining this. (#1225) | 2019-04-01 19:20:40 | 3efc43608ed71dc20b0ad1e0e80e33d15249666f

fix master broken | 2019-04-01 19:07:27 | fe42130029174681a708b7d8622412efbaf81e73

fix trailing spaces per checkstyle | 2019-03-29 22:34:58 | ff17f879ec92ec326f8b1c6b7b8d77a5266d6622

Fix GC Root bugs that missed leaks (#1168)

In Perflib, Snapshot.getGcRoots() only returns the GC roots from the first heap. Based on empirical evidence, it seems like Android has 4 heaps, and the GC Roots used to only be in the first heap, but more recent versions of Android have GC Roots in other heaps as well.

This means LeakCanary would sometimes show "No Leak Found" when there actually was a leak.

Fixes #1163 | 2019-01-10 23:32:27 | 64b6e5a41796ae1587c50c8cc860cea25f28f382

fix typo | 2018-10-17 00:43:01 | 044b1e4827bc71ec008dc3f7e43c78f58885f1e1

Fix LeakCanary toasting (#1116)

- Prior attempts to get it to work with the application context turned out to be buggy.
- This makes LeakCanary use whatever the current resumed activity is, if any.
- If there is no resumed activity, then the toast isn't displayed.

This supersedes #1080 | 2018-10-16 13:23:14 | 0e39e2eea79bc05bf7147a4074dd7163f7c401ff

fix the wrong word (#1111) | 2018-10-16 01:25:28 | 636b9b6c2b39c0c887c9ed78e904239db9bc131e

Merge pull request #1104 from IlyaGulya/bug/travis-ci-cache-fix

Fix travis caching and improve build time. | 2018-09-22 21:25:59 | 344728b906daf6d010f66bdf4ccc29ad8fedede5

Error prone 2.3.1 + suggested fix and specify version

See http://errorprone.info/bugpattern/StringSplitter | 2018-08-22 07:37:33 | a6b6960d73a1da9661f4e85254570bf5f867f954

Merge pull request #1089 from hzsweers/z/fixAnother

Quick followup to #1088 | 2018-08-22 03:15:15 | be973f5f5da6a3516aedab98e639690697617747

Merge pull request #1087 from Goddchen/patch-2

Updated german translation | 2018-08-20 13:52:47 | b43c279b3e1623c193e1dc81955527f70e93f822

Merge pull request #1063 from javmarina/patch-1

Fixed wrong versions in AndroidExcludedRefs | 2018-07-25 18:31:55 | 3b4ebe3e2571377f93e9a6976e021324502a0f78

Fixed wrong versions in AndroidExcludedRefs

Commit https://android.googlesource.com/platform/frameworks/base/+/27db46850b708070452c0ce49daf5f79503fbde6 introduced this issue. This commit was first included in Jelly Bean 4.3 (JELLY_BEAN_MR2), not Jelly Bean 4.1 (JELLY_BEAN)
Commit https://android.googlesource.com/platform/frameworks/base/+/5200e1cb07190a1f6874d72a4561064cad3ee3e0 fixes this issue and was first included in Oreo 8.0 (O). Nougat still has this memory leak. | 2018-07-24 18:24:59 | e4778b25f2c6e65ebc485d255e38586c7d45ec97

Merge pull request #1057 from square/py/ui_bug

Fix drawing of start line | 2018-07-20 22:21:19 | af96577a7d19e4df9f63d95fd9c3bfd2adcddb5d

Avoid Toast crashes

Showing a toast can crash on API 25 because the Window Manager can throw a BadTokenException when addView is called.

This change fixes it by configuring the toast manually and calling the window manager directly. This is based on https://github.com/pyricau/frenchtoast/blob/master/frenchtoast/src/main/java/frenchtoast/Mixture.java#L49 .

Fixes #844 | 2018-07-20 16:11:22 | c9ebc5cf5099c093bde5d3309b2692cb0e2016d8

Fixing setup bug | 2018-06-28 04:07:09 | 505933817cf6e2eb0dad4a78d4c7c35a072b9868

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

Wait for heap to be done dumping

We've seen several cases where analyzing the heap right after the heap dump fails (missing objects) but retrying soon after succeeds, which would indicate that the heap dump file isn't done being written to disk. This is an attempt at fixing that by sleeping while the file is appended to. | 2020-01-15 20:56:28 | f12ac60a9faf78df0814b893a5dae61b7616d8c3

fix missing toString | 2020-01-04 01:28:33 | 47bad9fec441ea462129ece0c4f1125f578ba1ec

Use "x minutes ago" format for dates (#1675)

Also fixed some of the ordering (leaks types by counts desc, leaks by date desc)

Fixes #1672 | 2019-12-16 23:56:38 | 9fae7ed497e1760abe74cf2c22535fbd51f16331

Gradle plugin that puts proguard mapping file in the apk as an asset (#1589)

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Add unit tests for copy obfuscation file task

* Add recipe describing how to use the plugin

* Add plugin usage instruction

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Rebased onto master

* Add missing test dependencies

* Use lambda function instead of a collection for plugin configuration

* Post code review fixups

* Rename according to code review suggestions

* Fix detekt warning

* Pass empty file if mapping doesn't exist

* Improved recipe

* Code review fixups

* Fix CopyObfuscationMappingFileTask tests

* Code review fixes

* Fix detekt issues

* Add plugin tests

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Gradle plugin that puts proguard mapping file in the apk as an asset

* Make task cacheable and address code review comments

* Make task cacheable and address code review comments

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Added support for task configuration avoidance and publishing config

* Support library modules and renamed to avoid "proguard" name

* Rebased onto master

* Use lambda function instead of a collection for plugin configuration

* Post code review fixups

* Rename according to code review suggestions

* Fix detekt warning

* Pass empty file if mapping doesn't exist

* Improved recipe

* Code review fixups

* Fix CopyObfuscationMappingFileTask tests

* Code review fixes

* Fix detekt issues

* Add plugin tests

* Rebased onto master

* Add one more test for plugin

* Try fixing CI tests by reading $ANDROID_HOME value

* Try fixing CI tests by hardcoding android sdk path

* Debugging CI failing test

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Try fixing CI tests by hardcoding android sdk path

* Post review fixes

* Debugging failing test on CI

* Try fixing CI tests by hardcoding android sdk path

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debug failing test on CI

* Debug failing test on CI

* Debug failing test on CI

* Debug failing test on CI

* Debug failing test on CI

* Debug failing test on CI

* Use trusty dist in travis config

* Debug failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debug failing CI test

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Debugging failing CI test

* Prevent GradleRunner from running builds in a separate process

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* Debugging failing test on CI

* sni: modernize travis script. Solve emulator issue.
The build now uses build tools 28 which requires little adjustments
from the original recipe. In the future we can just use the original recipe
Original recipe: https://docs.travis-ci.com/user/languages/android/ | 2019-12-10 06:48:02 | 25a10fcd9f405235de63bd791ea4ae4eb5453924

Fix emulators  (#1667)

* Revert "Fix travis (#1665)"

This reverts commit 00b9bd32d535022800153f34916d4c4667d2a5cd.

* Fix emulators

A recent emulator update breaks a few CI projects.  This PR applies
a fix suggested by Google.

https://issuetracker.google.com/issues/145622251#comment33 | 2019-12-10 05:43:06 | b678e1508e9ef3618ce2c44d44ff733f350d4185

Fix travis (#1665)

According to [this tweet](https://twitter.com/colinwhi/status/1204102384458194944) from @colinrtwhite, Travis is failing due to a bug in the most recent version of the emulator. Pinning the emulator to an older version works around it. This commit steals the fix from https://github.com/coil-kt/coil/pull/195 . | 2019-12-09 19:54:40 | 00b9bd32d535022800153f34916d4c4667d2a5cd

Add ability to customize class used to detect tests (#1654)

Developers should not ship JUnit in their app, even in debug. However, some debug libraries unfortunately ship with JUnit as a dependency (e.g. see https://github.com/square/okhttp/issues/4667).

Developers can change the default to target a different class (e.g assertj) to help LeakCanary detect unit tests, by overriding a public string:

```
  <string name="leak_canary_test_class_name">org.assertj.core.api.Assertions</string>
```

Fixes #1649 | 2019-12-03 02:35:07 | dbbb969d59b066c3f9197ebc3863cc4f54dae5d2

fix changelog | 2019-11-25 19:32:41 | 50ae3ba7558e5a3f83fc11b4d17a281f072ff078

Fix bug in handling JNI roots (#1636)

* When adding support for native reference leaks (879ab7c) there was a missing bracket in an if/else branch that led to all native gc roots being ignored.

Fixes #1634 | 2019-11-25 19:00:23 | aff338544b5eebbb0b3c792c628cca11fa888373

fix typos | 2019-11-19 03:58:07 | 25b0df0da4f6e93dedcd90342c9cd1d0eab080ed

Merge pull request #1596 from fernandospr/patch-1

Update blog-articles.md | 2019-10-04 16:35:24 | e65236dae7c5827b7c9f64c19c8b1a16ea19e5a7

Merge pull request #1598 from PaulWoitaschek/patch-1

Fixed the german string placeholder for sharing the heap dump | 2019-10-03 16:16:23 | 029f28eefd7aa966520ac3649fd2688732c02867

Fix crash when pressing home from root screen (#1578)

This bug only happens on older Android devices.

Fixes #1555 | 2019-09-11 01:51:06 | 274f58f96e8de7dcd3000c06ba3e2b50e427747d

Merge pull request #1559 from bric3/fix-primitive-array-dump-skip

Fixes the primitive array dump record skipping | 2019-09-09 22:16:57 | c0fd4d812cb8d6c5723231e501c121da2af86f06

Parsing and applying proguard mapping during heap analysis (#1542)

* Parsing and applying proguard mapping during heap analysis

* Parsing and applying proguard mapping during heap analysis

* Rebased onto master

* Post review changes and updated shark-cli to support mapping files

* Post review fixes

* Moving proguard mapping reader out of the analyzer and formatting fixes | 2019-08-30 16:54:20 | 66182a52069d9be59d0af6220aa9afd74218aa9b

fix images | 2019-08-27 20:02:50 | 8f5030e9faa8690217e1bd436274a3de5b9d3fb3

fix image links in docs | 2019-08-27 19:59:20 | edca56a947278508350bfa5dd33d3fa10699001f

Merge pull request #1549 from Armaxis/patch-1

Added section about using Detekt to Contributing | 2019-08-24 22:16:26 | c923d14909888860a99d5899af17f5b52c9b000f

Revert "Replaced accessor with a call to setter to fix the build issue"

This reverts commit 82db0398 | 2019-08-17 02:21:08 | c570cb9b0fd7bd7fcc88c4d3b529df8837e98fdc

Replaced accessor with a call to setter to fix the build issue | 2019-08-16 04:32:25 | 82db039843303044f91d36ba7c43595ab59bacd5

fix typo | 2019-08-02 15:31:17 | a2452f61e78e689efb59adaf71384d74447578b0

Add / fix android inspectors (#1491)

* Added MortarScope and ViewRootImpl inspectors
* Fixed the ContextWrapper inspector

Fixes #1490
Fixes #1389 | 2019-07-25 22:50:48 | 915f8359690a016a09e66608a041454b9c8c52cb

Documenting public APIs (#1476)

Also fixed naming and other things that weren't right.

Fixes #1474 | 2019-07-19 06:57:25 | 41c69a5d424b4236114c5ce1b077afdad38e57a5

Adding CLI for LeakCanary (#1456)

Example usage:
```
./gradlew leakcanary-cli:run --args='analyze-process com.example.leakcanary'

./gradlew leakcanary-cli:run --args='dump-process com.example.leakcanary'

./gradlew leakcanary-cli:run --args='analyze-file /path/to/heapdump.hprof'
```

Also fixed a bug in ShortestPathFinder which did not ignore null references in object arrays | 2019-07-11 19:11:30 | eded1c96e84f37393857ba4de2580aec784b2391

Behavior change & bugfixes for retained count notification (#1433)

* Bugfix: when tapping the "dump heap" notification, if the GC found no retained instance we didn't use a distinct notification id to communicate that, and then soon after we'd dismiss the notification that let's the user know there is no retained instances on tap.
* Bugfix: we weren't running the GC when checking for retained instances and the count was under the threshold
* Change: we now update the notification and keep it around for 30 seconds when the count goes to 0
* Change: the "no retained instance" notification that shows on tap is identical and also auto dismisses after 30 seconds.
* Change: we're checking for retained references (and running the GC) every 2 seconds instead of 5.

Fixes #1427 | 2019-07-03 20:55:47 | 968083a915343d881bd63e40587c070fde543732

Update how to fix a leak | 2019-06-25 05:46:56 | 177e7fd12933d99eca7a526851c53e598a03bf90

Text rendering tests (#1378)

* Added test coverage for text rendering
* Fixed bug: labels were not rendered on the last node (leaking instance)
* Matched exclusions are now rendered on their own line

Fixes #1375
Fixes #1350 | 2019-06-04 09:32:11 | 1926cb1db73f9583e11c557dbf2e5d46e3896a6e

Thread name based exclusions (#1353)

* Readded support for exclusions of local variable based on thread names
* Renamed ThreadExclusion to JavaLocalExclusion
* Fixed bug: KeyedWeakReference was not always ignored because its superclass is has a weakly reachable exclusion.
* Fixed bug: all root nodes had the same visit order as the first non root enqueued item, making it possible for a non root node to be dequeued before we're done with all roots.
* Redded gc root sorting
* Added tests to cover all uncovered bugs
* Added support for parsing StackFrameRecord

Fixes #1339 | 2019-05-20 13:17:18 | 6c2ee609efda323e88a4964d31fc5a5f0532f776

Reachability => LeakStatus (#1340)

* Combined leaking information from inspectors to solving conflicts while keeping all reasons
* Made reason from view leak inspector more obvious, and added label data about internals
* Moved reachability into LeakTraceElement
* Reachability renamed to LeakNodeStatus and leaking / not leaking
* ReachabilityInspector and Labeler are now functions with type aliases

Related to #1336: should fix the crash, though it's still unclear why AppCompatButton was a gc root there. | 2019-05-07 14:56:59 | 01210bbbfaecb3bcb6057c62b2195366d3bfa4f9

Revamp notifications (#1335)

* New notification that shows the count of retained instances. Tapping it triggers a heap dump. Fixes #1325
* Notifications are now split into two channels: default for results, and low for everything else.
* New config options: LeakCanary.config.dumpHeapWhenDebugging (default false) and LeakCanary.config.retainedVisibleThreshold (default 5)
* Replaced notification int constants and timestamps with resource ids.
* Don't show background notifications in instant apps (#1197) | 2019-05-05 16:38:26 | b14d9bc9c0a87119137bc0998bdec9314186dfcf

Highlighting new leaks (#1334)

New leaks are leaks that have a leak group that doesn't exist in any prior analysis.

* The notification now reports the count of leaks, with a split of new, known, and won't fix.
* The analysis success screen shows new leaks
* Moved description prefixes to be computed rather than inserted in the DB

Fixes #1328 | 2019-05-05 09:37:38 | f9a0518d4ddd69b782b6302caa3e3039787038e4

LeakSentry can be disabled (#1332)

LeakCanary has an enabled config option. Default is on in debug builds off in release builds.

Fixes #1327 | 2019-05-04 17:52:47 | f74f60901f34c751e8b8798d626678aa6233c893

Revert "fix trailing spaces per checkstyle"

This reverts commit ff17f879ec92ec326f8b1c6b7b8d77a5266d6622. | 2019-05-04 08:04:21 | 03136ca7dc1680299d710f79ca885412a1564144

Add test coverage for heap analysis (#1329)

* Fixed bug when reachability inspectors conflicts (reachable should win and erase unreachable)
* Added back support for leaking instances being empty objects, strings, primitive arrays or any object that we otherwise don't follow to find shortest paths. | 2019-05-04 07:51:02 | 59558e655d537c7654c411eebfd840773a8b77c9

Introducing exclusion priority (#1317)

* Add segmented FIFO queue

Unified several queues into one segmented FIFO queue. This will enable us to add several levels of priority.

* Introducing exclusion priority

* "excludedLeak" is now known as "won't fix leak", which matches its reality better. It's a leak that is known and real yet we're not fixing.
* Exclusion.alwaysExclude is replaced with Exclusion.status, with 3 possible values: NEVER_REACHABLE, WONT_FIX_LEAK, WEAKLY_REACHABLE.
* The shortest path finder will now follow weak references after all other paths have been exhausted.
* Removed class exclusion, was confusing, replaced with less lazy approach of listing fields to exclude
* VIEWLOCATIONHOLDER_ROOT should not have been always excluded, fixed.

Fixes #1173 ... well kinda. Instead of "non leaking retained instances", LeakCanary will report weakly reachable traces. Not sure if that'll help but it's a foundation we can build on. | 2019-04-30 17:44:15 | b0eedc553995e354e2382b3378bf0348801cd3c5

AllFieldsLabeler & cleanups (#1316)

* Add new optional labeler that prints all fields (useful for debugging)
* Move deprecated AnalysisResult to perflib
* Made DefaultAnalysisResultListener an object | 2019-04-30 07:08:29 | b9ee5356db265412db39c4c341880f305fbf2c76

fix format | 2019-04-22 06:25:09 | 4a2b158913e5a9eb0d5c6fdfbf949a80fc1b2c6b

Rename default to perflib and experimental to default (#1282)

* Remove experimental from module names

* Remove experimental prefix, add perflib prefix:

* update docs | 2019-04-19 06:01:39 | 425a9f24deb72691b02cdc85f80d177c05afebc5

fix list | 2019-04-18 21:55:43 | 8e3f9d26e8d3555bf934b99ac062aabc3aba528f

fix broken master | 2019-04-10 15:00:30 | f067ae53e050c5f52f47237440a6ac7eee3ca94c

fix broken build due to typo | 2019-04-10 05:44:19 | 7d4ddb4ffe3c9b0f30a84848675452dded0d4115

Leaking information aligned below simple class name. (#1258)

Also fixed issue where extraString + exclusionString were showing after the squiggly line.

Before: 
``` 
┬
├─ java.lang.Thread
│                 Leaking: NO (it's a GC root)
│                 ↓ thread Thread.<Java Local>
│                                ~~~~~~~~~~~~~ (named 'Thread-4')
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                 Leaking: UNKNOWN
│                 ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                     ~~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) 
```
After: 
``` 
┬
├─ java.lang.Thread
│            Leaking: NO (it's a GC root)
│            ↓ thread Thread.<Java Local> (named 'Thread-4')
│                            ~~~~~~~~~~~~
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                         Leaking: UNKNOWN
│                         ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                              ~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) ``` | 2019-04-05 20:11:47 | a938855585c7cf2522ffbd143d4bb66a234eea66

Add share to Stack Overflow button when viewing a leak (#1252)

* Add share to Stack Overflow button when viewing a leak

* Add question tag, lengthen toast and fix build failure. | 2019-04-04 20:49:50 | 8724d2aaffc07904517a3b823867802ca43233ae

Check if serviceInfo.processName is null. When LeakCanary runs on a seperate process and that process for some reason does not have a assigned processName, then we will crash on a NullPointerException. Also a debug log explaining this. (#1225) | 2019-04-01 19:20:40 | 3efc43608ed71dc20b0ad1e0e80e33d15249666f

fix master broken | 2019-04-01 19:07:27 | fe42130029174681a708b7d8622412efbaf81e73

fix trailing spaces per checkstyle | 2019-03-29 22:34:58 | ff17f879ec92ec326f8b1c6b7b8d77a5266d6622

Fix GC Root bugs that missed leaks (#1168)

In Perflib, Snapshot.getGcRoots() only returns the GC roots from the first heap. Based on empirical evidence, it seems like Android has 4 heaps, and the GC Roots used to only be in the first heap, but more recent versions of Android have GC Roots in other heaps as well.

This means LeakCanary would sometimes show "No Leak Found" when there actually was a leak.

Fixes #1163 | 2019-01-10 23:32:27 | 64b6e5a41796ae1587c50c8cc860cea25f28f382

fix typo | 2018-10-17 00:43:01 | 044b1e4827bc71ec008dc3f7e43c78f58885f1e1

Fix LeakCanary toasting (#1116)

- Prior attempts to get it to work with the application context turned out to be buggy.
- This makes LeakCanary use whatever the current resumed activity is, if any.
- If there is no resumed activity, then the toast isn't displayed.

This supersedes #1080 | 2018-10-16 13:23:14 | 0e39e2eea79bc05bf7147a4074dd7163f7c401ff

fix the wrong word (#1111) | 2018-10-16 01:25:28 | 636b9b6c2b39c0c887c9ed78e904239db9bc131e

Merge pull request #1104 from IlyaGulya/bug/travis-ci-cache-fix

Fix travis caching and improve build time. | 2018-09-22 21:25:59 | 344728b906daf6d010f66bdf4ccc29ad8fedede5

Error prone 2.3.1 + suggested fix and specify version

See http://errorprone.info/bugpattern/StringSplitter | 2018-08-22 07:37:33 | a6b6960d73a1da9661f4e85254570bf5f867f954

Merge pull request #1089 from hzsweers/z/fixAnother

Quick followup to #1088 | 2018-08-22 03:15:15 | be973f5f5da6a3516aedab98e639690697617747

Merge pull request #1087 from Goddchen/patch-2

Updated german translation | 2018-08-20 13:52:47 | b43c279b3e1623c193e1dc81955527f70e93f822

Merge pull request #1063 from javmarina/patch-1

Fixed wrong versions in AndroidExcludedRefs | 2018-07-25 18:31:55 | 3b4ebe3e2571377f93e9a6976e021324502a0f78

Fixed wrong versions in AndroidExcludedRefs

Commit https://android.googlesource.com/platform/frameworks/base/+/27db46850b708070452c0ce49daf5f79503fbde6 introduced this issue. This commit was first included in Jelly Bean 4.3 (JELLY_BEAN_MR2), not Jelly Bean 4.1 (JELLY_BEAN)
Commit https://android.googlesource.com/platform/frameworks/base/+/5200e1cb07190a1f6874d72a4561064cad3ee3e0 fixes this issue and was first included in Oreo 8.0 (O). Nougat still has this memory leak. | 2018-07-24 18:24:59 | e4778b25f2c6e65ebc485d255e38586c7d45ec97

Merge pull request #1057 from square/py/ui_bug

Fix drawing of start line | 2018-07-20 22:21:19 | af96577a7d19e4df9f63d95fd9c3bfd2adcddb5d

Avoid Toast crashes

Showing a toast can crash on API 25 because the Window Manager can throw a BadTokenException when addView is called.

This change fixes it by configuring the toast manually and calling the window manager directly. This is based on https://github.com/pyricau/frenchtoast/blob/master/frenchtoast/src/main/java/frenchtoast/Mixture.java#L49 .

Fixes #844 | 2018-07-20 16:11:22 | c9ebc5cf5099c093bde5d3309b2692cb0e2016d8

Fixing setup bug | 2018-06-28 04:07:09 | 505933817cf6e2eb0dad4a78d4c7c35a072b9868

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

Thread name based exclusions (#1353)

* Readded support for exclusions of local variable based on thread names
* Renamed ThreadExclusion to JavaLocalExclusion
* Fixed bug: KeyedWeakReference was not always ignored because its superclass is has a weakly reachable exclusion.
* Fixed bug: all root nodes had the same visit order as the first non root enqueued item, making it possible for a non root node to be dequeued before we're done with all roots.
* Redded gc root sorting
* Added tests to cover all uncovered bugs
* Added support for parsing StackFrameRecord

Fixes #1339 | 2019-05-20 13:17:18 | 6c2ee609efda323e88a4964d31fc5a5f0532f776

Reachability => LeakStatus (#1340)

* Combined leaking information from inspectors to solving conflicts while keeping all reasons
* Made reason from view leak inspector more obvious, and added label data about internals
* Moved reachability into LeakTraceElement
* Reachability renamed to LeakNodeStatus and leaking / not leaking
* ReachabilityInspector and Labeler are now functions with type aliases

Related to #1336: should fix the crash, though it's still unclear why AppCompatButton was a gc root there. | 2019-05-07 14:56:59 | 01210bbbfaecb3bcb6057c62b2195366d3bfa4f9

Revamp notifications (#1335)

* New notification that shows the count of retained instances. Tapping it triggers a heap dump. Fixes #1325
* Notifications are now split into two channels: default for results, and low for everything else.
* New config options: LeakCanary.config.dumpHeapWhenDebugging (default false) and LeakCanary.config.retainedVisibleThreshold (default 5)
* Replaced notification int constants and timestamps with resource ids.
* Don't show background notifications in instant apps (#1197) | 2019-05-05 16:38:26 | b14d9bc9c0a87119137bc0998bdec9314186dfcf

Highlighting new leaks (#1334)

New leaks are leaks that have a leak group that doesn't exist in any prior analysis.

* The notification now reports the count of leaks, with a split of new, known, and won't fix.
* The analysis success screen shows new leaks
* Moved description prefixes to be computed rather than inserted in the DB

Fixes #1328 | 2019-05-05 09:37:38 | f9a0518d4ddd69b782b6302caa3e3039787038e4

LeakSentry can be disabled (#1332)

LeakCanary has an enabled config option. Default is on in debug builds off in release builds.

Fixes #1327 | 2019-05-04 17:52:47 | f74f60901f34c751e8b8798d626678aa6233c893

Revert "fix trailing spaces per checkstyle"

This reverts commit ff17f879ec92ec326f8b1c6b7b8d77a5266d6622. | 2019-05-04 08:04:21 | 03136ca7dc1680299d710f79ca885412a1564144

Add test coverage for heap analysis (#1329)

* Fixed bug when reachability inspectors conflicts (reachable should win and erase unreachable)
* Added back support for leaking instances being empty objects, strings, primitive arrays or any object that we otherwise don't follow to find shortest paths. | 2019-05-04 07:51:02 | 59558e655d537c7654c411eebfd840773a8b77c9

Introducing exclusion priority (#1317)

* Add segmented FIFO queue

Unified several queues into one segmented FIFO queue. This will enable us to add several levels of priority.

* Introducing exclusion priority

* "excludedLeak" is now known as "won't fix leak", which matches its reality better. It's a leak that is known and real yet we're not fixing.
* Exclusion.alwaysExclude is replaced with Exclusion.status, with 3 possible values: NEVER_REACHABLE, WONT_FIX_LEAK, WEAKLY_REACHABLE.
* The shortest path finder will now follow weak references after all other paths have been exhausted.
* Removed class exclusion, was confusing, replaced with less lazy approach of listing fields to exclude
* VIEWLOCATIONHOLDER_ROOT should not have been always excluded, fixed.

Fixes #1173 ... well kinda. Instead of "non leaking retained instances", LeakCanary will report weakly reachable traces. Not sure if that'll help but it's a foundation we can build on. | 2019-04-30 17:44:15 | b0eedc553995e354e2382b3378bf0348801cd3c5

AllFieldsLabeler & cleanups (#1316)

* Add new optional labeler that prints all fields (useful for debugging)
* Move deprecated AnalysisResult to perflib
* Made DefaultAnalysisResultListener an object | 2019-04-30 07:08:29 | b9ee5356db265412db39c4c341880f305fbf2c76

fix format | 2019-04-22 06:25:09 | 4a2b158913e5a9eb0d5c6fdfbf949a80fc1b2c6b

Rename default to perflib and experimental to default (#1282)

* Remove experimental from module names

* Remove experimental prefix, add perflib prefix:

* update docs | 2019-04-19 06:01:39 | 425a9f24deb72691b02cdc85f80d177c05afebc5

fix list | 2019-04-18 21:55:43 | 8e3f9d26e8d3555bf934b99ac062aabc3aba528f

fix broken master | 2019-04-10 15:00:30 | f067ae53e050c5f52f47237440a6ac7eee3ca94c

fix broken build due to typo | 2019-04-10 05:44:19 | 7d4ddb4ffe3c9b0f30a84848675452dded0d4115

Leaking information aligned below simple class name. (#1258)

Also fixed issue where extraString + exclusionString were showing after the squiggly line.

Before: 
``` 
┬
├─ java.lang.Thread
│                 Leaking: NO (it's a GC root)
│                 ↓ thread Thread.<Java Local>
│                                ~~~~~~~~~~~~~ (named 'Thread-4')
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                 Leaking: UNKNOWN
│                 ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                     ~~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) 
```
After: 
``` 
┬
├─ java.lang.Thread
│            Leaking: NO (it's a GC root)
│            ↓ thread Thread.<Java Local> (named 'Thread-4')
│                            ~~~~~~~~~~~~
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                         Leaking: UNKNOWN
│                         ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                              ~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) ``` | 2019-04-05 20:11:47 | a938855585c7cf2522ffbd143d4bb66a234eea66

Add share to Stack Overflow button when viewing a leak (#1252)

* Add share to Stack Overflow button when viewing a leak

* Add question tag, lengthen toast and fix build failure. | 2019-04-04 20:49:50 | 8724d2aaffc07904517a3b823867802ca43233ae

Check if serviceInfo.processName is null. When LeakCanary runs on a seperate process and that process for some reason does not have a assigned processName, then we will crash on a NullPointerException. Also a debug log explaining this. (#1225) | 2019-04-01 19:20:40 | 3efc43608ed71dc20b0ad1e0e80e33d15249666f

fix master broken | 2019-04-01 19:07:27 | fe42130029174681a708b7d8622412efbaf81e73

fix trailing spaces per checkstyle | 2019-03-29 22:34:58 | ff17f879ec92ec326f8b1c6b7b8d77a5266d6622

Fix GC Root bugs that missed leaks (#1168)

In Perflib, Snapshot.getGcRoots() only returns the GC roots from the first heap. Based on empirical evidence, it seems like Android has 4 heaps, and the GC Roots used to only be in the first heap, but more recent versions of Android have GC Roots in other heaps as well.

This means LeakCanary would sometimes show "No Leak Found" when there actually was a leak.

Fixes #1163 | 2019-01-10 23:32:27 | 64b6e5a41796ae1587c50c8cc860cea25f28f382

fix typo | 2018-10-17 00:43:01 | 044b1e4827bc71ec008dc3f7e43c78f58885f1e1

Fix LeakCanary toasting (#1116)

- Prior attempts to get it to work with the application context turned out to be buggy.
- This makes LeakCanary use whatever the current resumed activity is, if any.
- If there is no resumed activity, then the toast isn't displayed.

This supersedes #1080 | 2018-10-16 13:23:14 | 0e39e2eea79bc05bf7147a4074dd7163f7c401ff

fix the wrong word (#1111) | 2018-10-16 01:25:28 | 636b9b6c2b39c0c887c9ed78e904239db9bc131e

Merge pull request #1104 from IlyaGulya/bug/travis-ci-cache-fix

Fix travis caching and improve build time. | 2018-09-22 21:25:59 | 344728b906daf6d010f66bdf4ccc29ad8fedede5

Error prone 2.3.1 + suggested fix and specify version

See http://errorprone.info/bugpattern/StringSplitter | 2018-08-22 07:37:33 | a6b6960d73a1da9661f4e85254570bf5f867f954

Merge pull request #1089 from hzsweers/z/fixAnother

Quick followup to #1088 | 2018-08-22 03:15:15 | be973f5f5da6a3516aedab98e639690697617747

Merge pull request #1087 from Goddchen/patch-2

Updated german translation | 2018-08-20 13:52:47 | b43c279b3e1623c193e1dc81955527f70e93f822

Merge pull request #1063 from javmarina/patch-1

Fixed wrong versions in AndroidExcludedRefs | 2018-07-25 18:31:55 | 3b4ebe3e2571377f93e9a6976e021324502a0f78

Fixed wrong versions in AndroidExcludedRefs

Commit https://android.googlesource.com/platform/frameworks/base/+/27db46850b708070452c0ce49daf5f79503fbde6 introduced this issue. This commit was first included in Jelly Bean 4.3 (JELLY_BEAN_MR2), not Jelly Bean 4.1 (JELLY_BEAN)
Commit https://android.googlesource.com/platform/frameworks/base/+/5200e1cb07190a1f6874d72a4561064cad3ee3e0 fixes this issue and was first included in Oreo 8.0 (O). Nougat still has this memory leak. | 2018-07-24 18:24:59 | e4778b25f2c6e65ebc485d255e38586c7d45ec97

Merge pull request #1057 from square/py/ui_bug

Fix drawing of start line | 2018-07-20 22:21:19 | af96577a7d19e4df9f63d95fd9c3bfd2adcddb5d

Avoid Toast crashes

Showing a toast can crash on API 25 because the Window Manager can throw a BadTokenException when addView is called.

This change fixes it by configuring the toast manually and calling the window manager directly. This is based on https://github.com/pyricau/frenchtoast/blob/master/frenchtoast/src/main/java/frenchtoast/Mixture.java#L49 .

Fixes #844 | 2018-07-20 16:11:22 | c9ebc5cf5099c093bde5d3309b2692cb0e2016d8

Fixing setup bug | 2018-06-28 04:07:09 | 505933817cf6e2eb0dad4a78d4c7c35a072b9868

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

fix typo | 2019-12-03 15:03:48 | 422adda535efc58406f35c5e256040b918ca4182

fix changelog | 2019-11-25 19:32:41 | 50ae3ba7558e5a3f83fc11b4d17a281f072ff078

Fix bug in handling JNI roots (#1636)

* When adding support for native reference leaks (879ab7c) there was a missing bracket in an if/else branch that led to all native gc roots being ignored.

Fixes #1634 | 2019-11-25 19:00:23 | aff338544b5eebbb0b3c792c628cca11fa888373

fix typos | 2019-11-19 03:58:07 | 25b0df0da4f6e93dedcd90342c9cd1d0eab080ed

Merge pull request #1596 from fernandospr/patch-1

Update blog-articles.md | 2019-10-04 16:35:24 | e65236dae7c5827b7c9f64c19c8b1a16ea19e5a7

Merge pull request #1598 from PaulWoitaschek/patch-1

Fixed the german string placeholder for sharing the heap dump | 2019-10-03 16:16:23 | 029f28eefd7aa966520ac3649fd2688732c02867

Fix crash when pressing home from root screen (#1578)

This bug only happens on older Android devices.

Fixes #1555 | 2019-09-11 01:51:06 | 274f58f96e8de7dcd3000c06ba3e2b50e427747d

Merge pull request #1559 from bric3/fix-primitive-array-dump-skip

Fixes the primitive array dump record skipping | 2019-09-09 22:16:57 | c0fd4d812cb8d6c5723231e501c121da2af86f06

Parsing and applying proguard mapping during heap analysis (#1542)

* Parsing and applying proguard mapping during heap analysis

* Parsing and applying proguard mapping during heap analysis

* Rebased onto master

* Post review changes and updated shark-cli to support mapping files

* Post review fixes

* Moving proguard mapping reader out of the analyzer and formatting fixes | 2019-08-30 16:54:20 | 66182a52069d9be59d0af6220aa9afd74218aa9b

fix images | 2019-08-27 20:02:50 | 8f5030e9faa8690217e1bd436274a3de5b9d3fb3

fix image links in docs | 2019-08-27 19:59:20 | edca56a947278508350bfa5dd33d3fa10699001f

Merge pull request #1549 from Armaxis/patch-1

Added section about using Detekt to Contributing | 2019-08-24 22:16:26 | c923d14909888860a99d5899af17f5b52c9b000f

Revert "Replaced accessor with a call to setter to fix the build issue"

This reverts commit 82db0398 | 2019-08-17 02:21:08 | c570cb9b0fd7bd7fcc88c4d3b529df8837e98fdc

Replaced accessor with a call to setter to fix the build issue | 2019-08-16 04:32:25 | 82db039843303044f91d36ba7c43595ab59bacd5

fix typo | 2019-08-02 15:31:17 | a2452f61e78e689efb59adaf71384d74447578b0

Add / fix android inspectors (#1491)

* Added MortarScope and ViewRootImpl inspectors
* Fixed the ContextWrapper inspector

Fixes #1490
Fixes #1389 | 2019-07-25 22:50:48 | 915f8359690a016a09e66608a041454b9c8c52cb

Documenting public APIs (#1476)

Also fixed naming and other things that weren't right.

Fixes #1474 | 2019-07-19 06:57:25 | 41c69a5d424b4236114c5ce1b077afdad38e57a5

Adding CLI for LeakCanary (#1456)

Example usage:
```
./gradlew leakcanary-cli:run --args='analyze-process com.example.leakcanary'

./gradlew leakcanary-cli:run --args='dump-process com.example.leakcanary'

./gradlew leakcanary-cli:run --args='analyze-file /path/to/heapdump.hprof'
```

Also fixed a bug in ShortestPathFinder which did not ignore null references in object arrays | 2019-07-11 19:11:30 | eded1c96e84f37393857ba4de2580aec784b2391

Behavior change & bugfixes for retained count notification (#1433)

* Bugfix: when tapping the "dump heap" notification, if the GC found no retained instance we didn't use a distinct notification id to communicate that, and then soon after we'd dismiss the notification that let's the user know there is no retained instances on tap.
* Bugfix: we weren't running the GC when checking for retained instances and the count was under the threshold
* Change: we now update the notification and keep it around for 30 seconds when the count goes to 0
* Change: the "no retained instance" notification that shows on tap is identical and also auto dismisses after 30 seconds.
* Change: we're checking for retained references (and running the GC) every 2 seconds instead of 5.

Fixes #1427 | 2019-07-03 20:55:47 | 968083a915343d881bd63e40587c070fde543732

Update how to fix a leak | 2019-06-25 05:46:56 | 177e7fd12933d99eca7a526851c53e598a03bf90

Text rendering tests (#1378)

* Added test coverage for text rendering
* Fixed bug: labels were not rendered on the last node (leaking instance)
* Matched exclusions are now rendered on their own line

Fixes #1375
Fixes #1350 | 2019-06-04 09:32:11 | 1926cb1db73f9583e11c557dbf2e5d46e3896a6e

Thread name based exclusions (#1353)

* Readded support for exclusions of local variable based on thread names
* Renamed ThreadExclusion to JavaLocalExclusion
* Fixed bug: KeyedWeakReference was not always ignored because its superclass is has a weakly reachable exclusion.
* Fixed bug: all root nodes had the same visit order as the first non root enqueued item, making it possible for a non root node to be dequeued before we're done with all roots.
* Redded gc root sorting
* Added tests to cover all uncovered bugs
* Added support for parsing StackFrameRecord

Fixes #1339 | 2019-05-20 13:17:18 | 6c2ee609efda323e88a4964d31fc5a5f0532f776

Reachability => LeakStatus (#1340)

* Combined leaking information from inspectors to solving conflicts while keeping all reasons
* Made reason from view leak inspector more obvious, and added label data about internals
* Moved reachability into LeakTraceElement
* Reachability renamed to LeakNodeStatus and leaking / not leaking
* ReachabilityInspector and Labeler are now functions with type aliases

Related to #1336: should fix the crash, though it's still unclear why AppCompatButton was a gc root there. | 2019-05-07 14:56:59 | 01210bbbfaecb3bcb6057c62b2195366d3bfa4f9

Revamp notifications (#1335)

* New notification that shows the count of retained instances. Tapping it triggers a heap dump. Fixes #1325
* Notifications are now split into two channels: default for results, and low for everything else.
* New config options: LeakCanary.config.dumpHeapWhenDebugging (default false) and LeakCanary.config.retainedVisibleThreshold (default 5)
* Replaced notification int constants and timestamps with resource ids.
* Don't show background notifications in instant apps (#1197) | 2019-05-05 16:38:26 | b14d9bc9c0a87119137bc0998bdec9314186dfcf

Highlighting new leaks (#1334)

New leaks are leaks that have a leak group that doesn't exist in any prior analysis.

* The notification now reports the count of leaks, with a split of new, known, and won't fix.
* The analysis success screen shows new leaks
* Moved description prefixes to be computed rather than inserted in the DB

Fixes #1328 | 2019-05-05 09:37:38 | f9a0518d4ddd69b782b6302caa3e3039787038e4

LeakSentry can be disabled (#1332)

LeakCanary has an enabled config option. Default is on in debug builds off in release builds.

Fixes #1327 | 2019-05-04 17:52:47 | f74f60901f34c751e8b8798d626678aa6233c893

Revert "fix trailing spaces per checkstyle"

This reverts commit ff17f879ec92ec326f8b1c6b7b8d77a5266d6622. | 2019-05-04 08:04:21 | 03136ca7dc1680299d710f79ca885412a1564144

Add test coverage for heap analysis (#1329)

* Fixed bug when reachability inspectors conflicts (reachable should win and erase unreachable)
* Added back support for leaking instances being empty objects, strings, primitive arrays or any object that we otherwise don't follow to find shortest paths. | 2019-05-04 07:51:02 | 59558e655d537c7654c411eebfd840773a8b77c9

Introducing exclusion priority (#1317)

* Add segmented FIFO queue

Unified several queues into one segmented FIFO queue. This will enable us to add several levels of priority.

* Introducing exclusion priority

* "excludedLeak" is now known as "won't fix leak", which matches its reality better. It's a leak that is known and real yet we're not fixing.
* Exclusion.alwaysExclude is replaced with Exclusion.status, with 3 possible values: NEVER_REACHABLE, WONT_FIX_LEAK, WEAKLY_REACHABLE.
* The shortest path finder will now follow weak references after all other paths have been exhausted.
* Removed class exclusion, was confusing, replaced with less lazy approach of listing fields to exclude
* VIEWLOCATIONHOLDER_ROOT should not have been always excluded, fixed.

Fixes #1173 ... well kinda. Instead of "non leaking retained instances", LeakCanary will report weakly reachable traces. Not sure if that'll help but it's a foundation we can build on. | 2019-04-30 17:44:15 | b0eedc553995e354e2382b3378bf0348801cd3c5

AllFieldsLabeler & cleanups (#1316)

* Add new optional labeler that prints all fields (useful for debugging)
* Move deprecated AnalysisResult to perflib
* Made DefaultAnalysisResultListener an object | 2019-04-30 07:08:29 | b9ee5356db265412db39c4c341880f305fbf2c76

fix format | 2019-04-22 06:25:09 | 4a2b158913e5a9eb0d5c6fdfbf949a80fc1b2c6b

Rename default to perflib and experimental to default (#1282)

* Remove experimental from module names

* Remove experimental prefix, add perflib prefix:

* update docs | 2019-04-19 06:01:39 | 425a9f24deb72691b02cdc85f80d177c05afebc5

fix list | 2019-04-18 21:55:43 | 8e3f9d26e8d3555bf934b99ac062aabc3aba528f

fix broken master | 2019-04-10 15:00:30 | f067ae53e050c5f52f47237440a6ac7eee3ca94c

fix broken build due to typo | 2019-04-10 05:44:19 | 7d4ddb4ffe3c9b0f30a84848675452dded0d4115

Leaking information aligned below simple class name. (#1258)

Also fixed issue where extraString + exclusionString were showing after the squiggly line.

Before: 
``` 
┬
├─ java.lang.Thread
│                 Leaking: NO (it's a GC root)
│                 ↓ thread Thread.<Java Local>
│                                ~~~~~~~~~~~~~ (named 'Thread-4')
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                 Leaking: UNKNOWN
│                 ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                     ~~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) 
```
After: 
``` 
┬
├─ java.lang.Thread
│            Leaking: NO (it's a GC root)
│            ↓ thread Thread.<Java Local> (named 'Thread-4')
│                            ~~~~~~~~~~~~
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                         Leaking: UNKNOWN
│                         ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                              ~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) ``` | 2019-04-05 20:11:47 | a938855585c7cf2522ffbd143d4bb66a234eea66

Add share to Stack Overflow button when viewing a leak (#1252)

* Add share to Stack Overflow button when viewing a leak

* Add question tag, lengthen toast and fix build failure. | 2019-04-04 20:49:50 | 8724d2aaffc07904517a3b823867802ca43233ae

Check if serviceInfo.processName is null. When LeakCanary runs on a seperate process and that process for some reason does not have a assigned processName, then we will crash on a NullPointerException. Also a debug log explaining this. (#1225) | 2019-04-01 19:20:40 | 3efc43608ed71dc20b0ad1e0e80e33d15249666f

fix master broken | 2019-04-01 19:07:27 | fe42130029174681a708b7d8622412efbaf81e73

fix trailing spaces per checkstyle | 2019-03-29 22:34:58 | ff17f879ec92ec326f8b1c6b7b8d77a5266d6622

Fix GC Root bugs that missed leaks (#1168)

In Perflib, Snapshot.getGcRoots() only returns the GC roots from the first heap. Based on empirical evidence, it seems like Android has 4 heaps, and the GC Roots used to only be in the first heap, but more recent versions of Android have GC Roots in other heaps as well.

This means LeakCanary would sometimes show "No Leak Found" when there actually was a leak.

Fixes #1163 | 2019-01-10 23:32:27 | 64b6e5a41796ae1587c50c8cc860cea25f28f382

fix typo | 2018-10-17 00:43:01 | 044b1e4827bc71ec008dc3f7e43c78f58885f1e1

Fix LeakCanary toasting (#1116)

- Prior attempts to get it to work with the application context turned out to be buggy.
- This makes LeakCanary use whatever the current resumed activity is, if any.
- If there is no resumed activity, then the toast isn't displayed.

This supersedes #1080 | 2018-10-16 13:23:14 | 0e39e2eea79bc05bf7147a4074dd7163f7c401ff

fix the wrong word (#1111) | 2018-10-16 01:25:28 | 636b9b6c2b39c0c887c9ed78e904239db9bc131e

Merge pull request #1104 from IlyaGulya/bug/travis-ci-cache-fix

Fix travis caching and improve build time. | 2018-09-22 21:25:59 | 344728b906daf6d010f66bdf4ccc29ad8fedede5

Error prone 2.3.1 + suggested fix and specify version

See http://errorprone.info/bugpattern/StringSplitter | 2018-08-22 07:37:33 | a6b6960d73a1da9661f4e85254570bf5f867f954

Merge pull request #1089 from hzsweers/z/fixAnother

Quick followup to #1088 | 2018-08-22 03:15:15 | be973f5f5da6a3516aedab98e639690697617747

Merge pull request #1087 from Goddchen/patch-2

Updated german translation | 2018-08-20 13:52:47 | b43c279b3e1623c193e1dc81955527f70e93f822

Merge pull request #1063 from javmarina/patch-1

Fixed wrong versions in AndroidExcludedRefs | 2018-07-25 18:31:55 | 3b4ebe3e2571377f93e9a6976e021324502a0f78

Fixed wrong versions in AndroidExcludedRefs

Commit https://android.googlesource.com/platform/frameworks/base/+/27db46850b708070452c0ce49daf5f79503fbde6 introduced this issue. This commit was first included in Jelly Bean 4.3 (JELLY_BEAN_MR2), not Jelly Bean 4.1 (JELLY_BEAN)
Commit https://android.googlesource.com/platform/frameworks/base/+/5200e1cb07190a1f6874d72a4561064cad3ee3e0 fixes this issue and was first included in Oreo 8.0 (O). Nougat still has this memory leak. | 2018-07-24 18:24:59 | e4778b25f2c6e65ebc485d255e38586c7d45ec97

Merge pull request #1057 from square/py/ui_bug

Fix drawing of start line | 2018-07-20 22:21:19 | af96577a7d19e4df9f63d95fd9c3bfd2adcddb5d

Avoid Toast crashes

Showing a toast can crash on API 25 because the Window Manager can throw a BadTokenException when addView is called.

This change fixes it by configuring the toast manually and calling the window manager directly. This is based on https://github.com/pyricau/frenchtoast/blob/master/frenchtoast/src/main/java/frenchtoast/Mixture.java#L49 .

Fixes #844 | 2018-07-20 16:11:22 | c9ebc5cf5099c093bde5d3309b2692cb0e2016d8

Fixing setup bug | 2018-06-28 04:07:09 | 505933817cf6e2eb0dad4a78d4c7c35a072b9868

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

Add / fix android inspectors (#1491)

* Added MortarScope and ViewRootImpl inspectors
* Fixed the ContextWrapper inspector

Fixes #1490
Fixes #1389 | 2019-07-25 22:50:48 | 915f8359690a016a09e66608a041454b9c8c52cb

Documenting public APIs (#1476)

Also fixed naming and other things that weren't right.

Fixes #1474 | 2019-07-19 06:57:25 | 41c69a5d424b4236114c5ce1b077afdad38e57a5

Adding CLI for LeakCanary (#1456)

Example usage:
```
./gradlew leakcanary-cli:run --args='analyze-process com.example.leakcanary'

./gradlew leakcanary-cli:run --args='dump-process com.example.leakcanary'

./gradlew leakcanary-cli:run --args='analyze-file /path/to/heapdump.hprof'
```

Also fixed a bug in ShortestPathFinder which did not ignore null references in object arrays | 2019-07-11 19:11:30 | eded1c96e84f37393857ba4de2580aec784b2391

Behavior change & bugfixes for retained count notification (#1433)

* Bugfix: when tapping the "dump heap" notification, if the GC found no retained instance we didn't use a distinct notification id to communicate that, and then soon after we'd dismiss the notification that let's the user know there is no retained instances on tap.
* Bugfix: we weren't running the GC when checking for retained instances and the count was under the threshold
* Change: we now update the notification and keep it around for 30 seconds when the count goes to 0
* Change: the "no retained instance" notification that shows on tap is identical and also auto dismisses after 30 seconds.
* Change: we're checking for retained references (and running the GC) every 2 seconds instead of 5.

Fixes #1427 | 2019-07-03 20:55:47 | 968083a915343d881bd63e40587c070fde543732

Update how to fix a leak | 2019-06-25 05:46:56 | 177e7fd12933d99eca7a526851c53e598a03bf90

Text rendering tests (#1378)

* Added test coverage for text rendering
* Fixed bug: labels were not rendered on the last node (leaking instance)
* Matched exclusions are now rendered on their own line

Fixes #1375
Fixes #1350 | 2019-06-04 09:32:11 | 1926cb1db73f9583e11c557dbf2e5d46e3896a6e

Thread name based exclusions (#1353)

* Readded support for exclusions of local variable based on thread names
* Renamed ThreadExclusion to JavaLocalExclusion
* Fixed bug: KeyedWeakReference was not always ignored because its superclass is has a weakly reachable exclusion.
* Fixed bug: all root nodes had the same visit order as the first non root enqueued item, making it possible for a non root node to be dequeued before we're done with all roots.
* Redded gc root sorting
* Added tests to cover all uncovered bugs
* Added support for parsing StackFrameRecord

Fixes #1339 | 2019-05-20 13:17:18 | 6c2ee609efda323e88a4964d31fc5a5f0532f776

Reachability => LeakStatus (#1340)

* Combined leaking information from inspectors to solving conflicts while keeping all reasons
* Made reason from view leak inspector more obvious, and added label data about internals
* Moved reachability into LeakTraceElement
* Reachability renamed to LeakNodeStatus and leaking / not leaking
* ReachabilityInspector and Labeler are now functions with type aliases

Related to #1336: should fix the crash, though it's still unclear why AppCompatButton was a gc root there. | 2019-05-07 14:56:59 | 01210bbbfaecb3bcb6057c62b2195366d3bfa4f9

Revamp notifications (#1335)

* New notification that shows the count of retained instances. Tapping it triggers a heap dump. Fixes #1325
* Notifications are now split into two channels: default for results, and low for everything else.
* New config options: LeakCanary.config.dumpHeapWhenDebugging (default false) and LeakCanary.config.retainedVisibleThreshold (default 5)
* Replaced notification int constants and timestamps with resource ids.
* Don't show background notifications in instant apps (#1197) | 2019-05-05 16:38:26 | b14d9bc9c0a87119137bc0998bdec9314186dfcf

Highlighting new leaks (#1334)

New leaks are leaks that have a leak group that doesn't exist in any prior analysis.

* The notification now reports the count of leaks, with a split of new, known, and won't fix.
* The analysis success screen shows new leaks
* Moved description prefixes to be computed rather than inserted in the DB

Fixes #1328 | 2019-05-05 09:37:38 | f9a0518d4ddd69b782b6302caa3e3039787038e4

LeakSentry can be disabled (#1332)

LeakCanary has an enabled config option. Default is on in debug builds off in release builds.

Fixes #1327 | 2019-05-04 17:52:47 | f74f60901f34c751e8b8798d626678aa6233c893

Revert "fix trailing spaces per checkstyle"

This reverts commit ff17f879ec92ec326f8b1c6b7b8d77a5266d6622. | 2019-05-04 08:04:21 | 03136ca7dc1680299d710f79ca885412a1564144

Add test coverage for heap analysis (#1329)

* Fixed bug when reachability inspectors conflicts (reachable should win and erase unreachable)
* Added back support for leaking instances being empty objects, strings, primitive arrays or any object that we otherwise don't follow to find shortest paths. | 2019-05-04 07:51:02 | 59558e655d537c7654c411eebfd840773a8b77c9

Introducing exclusion priority (#1317)

* Add segmented FIFO queue

Unified several queues into one segmented FIFO queue. This will enable us to add several levels of priority.

* Introducing exclusion priority

* "excludedLeak" is now known as "won't fix leak", which matches its reality better. It's a leak that is known and real yet we're not fixing.
* Exclusion.alwaysExclude is replaced with Exclusion.status, with 3 possible values: NEVER_REACHABLE, WONT_FIX_LEAK, WEAKLY_REACHABLE.
* The shortest path finder will now follow weak references after all other paths have been exhausted.
* Removed class exclusion, was confusing, replaced with less lazy approach of listing fields to exclude
* VIEWLOCATIONHOLDER_ROOT should not have been always excluded, fixed.

Fixes #1173 ... well kinda. Instead of "non leaking retained instances", LeakCanary will report weakly reachable traces. Not sure if that'll help but it's a foundation we can build on. | 2019-04-30 17:44:15 | b0eedc553995e354e2382b3378bf0348801cd3c5

AllFieldsLabeler & cleanups (#1316)

* Add new optional labeler that prints all fields (useful for debugging)
* Move deprecated AnalysisResult to perflib
* Made DefaultAnalysisResultListener an object | 2019-04-30 07:08:29 | b9ee5356db265412db39c4c341880f305fbf2c76

fix format | 2019-04-22 06:25:09 | 4a2b158913e5a9eb0d5c6fdfbf949a80fc1b2c6b

Rename default to perflib and experimental to default (#1282)

* Remove experimental from module names

* Remove experimental prefix, add perflib prefix:

* update docs | 2019-04-19 06:01:39 | 425a9f24deb72691b02cdc85f80d177c05afebc5

fix list | 2019-04-18 21:55:43 | 8e3f9d26e8d3555bf934b99ac062aabc3aba528f

fix broken master | 2019-04-10 15:00:30 | f067ae53e050c5f52f47237440a6ac7eee3ca94c

fix broken build due to typo | 2019-04-10 05:44:19 | 7d4ddb4ffe3c9b0f30a84848675452dded0d4115

Leaking information aligned below simple class name. (#1258)

Also fixed issue where extraString + exclusionString were showing after the squiggly line.

Before: 
``` 
┬
├─ java.lang.Thread
│                 Leaking: NO (it's a GC root)
│                 ↓ thread Thread.<Java Local>
│                                ~~~~~~~~~~~~~ (named 'Thread-4')
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                 Leaking: UNKNOWN
│                 ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                     ~~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) 
```
After: 
``` 
┬
├─ java.lang.Thread
│            Leaking: NO (it's a GC root)
│            ↓ thread Thread.<Java Local> (named 'Thread-4')
│                            ~~~~~~~~~~~~
├─ com.example.leakcanary.MainActivity$startAsyncWork$work$1
│                         Leaking: UNKNOWN
│                         ↓ MainActivity$startAsyncWork$work$1.this$0
│                                                              ~~~~~~
╰→ com.example.leakcanary.MainActivity
                          Leaking: YES (it's the leaking instance) ``` | 2019-04-05 20:11:47 | a938855585c7cf2522ffbd143d4bb66a234eea66

Add share to Stack Overflow button when viewing a leak (#1252)

* Add share to Stack Overflow button when viewing a leak

* Add question tag, lengthen toast and fix build failure. | 2019-04-04 20:49:50 | 8724d2aaffc07904517a3b823867802ca43233ae

Check if serviceInfo.processName is null. When LeakCanary runs on a seperate process and that process for some reason does not have a assigned processName, then we will crash on a NullPointerException. Also a debug log explaining this. (#1225) | 2019-04-01 19:20:40 | 3efc43608ed71dc20b0ad1e0e80e33d15249666f

fix master broken | 2019-04-01 19:07:27 | fe42130029174681a708b7d8622412efbaf81e73

fix trailing spaces per checkstyle | 2019-03-29 22:34:58 | ff17f879ec92ec326f8b1c6b7b8d77a5266d6622

Fix GC Root bugs that missed leaks (#1168)

In Perflib, Snapshot.getGcRoots() only returns the GC roots from the first heap. Based on empirical evidence, it seems like Android has 4 heaps, and the GC Roots used to only be in the first heap, but more recent versions of Android have GC Roots in other heaps as well.

This means LeakCanary would sometimes show "No Leak Found" when there actually was a leak.

Fixes #1163 | 2019-01-10 23:32:27 | 64b6e5a41796ae1587c50c8cc860cea25f28f382

fix typo | 2018-10-17 00:43:01 | 044b1e4827bc71ec008dc3f7e43c78f58885f1e1

Fix LeakCanary toasting (#1116)

- Prior attempts to get it to work with the application context turned out to be buggy.
- This makes LeakCanary use whatever the current resumed activity is, if any.
- If there is no resumed activity, then the toast isn't displayed.

This supersedes #1080 | 2018-10-16 13:23:14 | 0e39e2eea79bc05bf7147a4074dd7163f7c401ff

fix the wrong word (#1111) | 2018-10-16 01:25:28 | 636b9b6c2b39c0c887c9ed78e904239db9bc131e

Merge pull request #1104 from IlyaGulya/bug/travis-ci-cache-fix

Fix travis caching and improve build time. | 2018-09-22 21:25:59 | 344728b906daf6d010f66bdf4ccc29ad8fedede5

Error prone 2.3.1 + suggested fix and specify version

See http://errorprone.info/bugpattern/StringSplitter | 2018-08-22 07:37:33 | a6b6960d73a1da9661f4e85254570bf5f867f954

Merge pull request #1089 from hzsweers/z/fixAnother

Quick followup to #1088 | 2018-08-22 03:15:15 | be973f5f5da6a3516aedab98e639690697617747

Merge pull request #1087 from Goddchen/patch-2

Updated german translation | 2018-08-20 13:52:47 | b43c279b3e1623c193e1dc81955527f70e93f822

Merge pull request #1063 from javmarina/patch-1

Fixed wrong versions in AndroidExcludedRefs | 2018-07-25 18:31:55 | 3b4ebe3e2571377f93e9a6976e021324502a0f78

Fixed wrong versions in AndroidExcludedRefs

Commit https://android.googlesource.com/platform/frameworks/base/+/27db46850b708070452c0ce49daf5f79503fbde6 introduced this issue. This commit was first included in Jelly Bean 4.3 (JELLY_BEAN_MR2), not Jelly Bean 4.1 (JELLY_BEAN)
Commit https://android.googlesource.com/platform/frameworks/base/+/5200e1cb07190a1f6874d72a4561064cad3ee3e0 fixes this issue and was first included in Oreo 8.0 (O). Nougat still has this memory leak. | 2018-07-24 18:24:59 | e4778b25f2c6e65ebc485d255e38586c7d45ec97

Merge pull request #1057 from square/py/ui_bug

Fix drawing of start line | 2018-07-20 22:21:19 | af96577a7d19e4df9f63d95fd9c3bfd2adcddb5d

Avoid Toast crashes

Showing a toast can crash on API 25 because the Window Manager can throw a BadTokenException when addView is called.

This change fixes it by configuring the toast manually and calling the window manager directly. This is based on https://github.com/pyricau/frenchtoast/blob/master/frenchtoast/src/main/java/frenchtoast/Mixture.java#L49 .

Fixes #844 | 2018-07-20 16:11:22 | c9ebc5cf5099c093bde5d3309b2692cb0e2016d8

Fixing setup bug | 2018-06-28 04:07:09 | 505933817cf6e2eb0dad4a78d4c7c35a072b9868

Update to support-core-utils 26.0.0

We don't need the latest version of the support library (there are no bugs that impact what
LeakCanary relies on), we're sticking a bit older because most apps will be using a more
recent version and they'll automatically resolve to higher version without having to
necessarily resort to a resolution strategy. This is also the version we use in
leakcanary-support-fragment.

Fixes #986 | 2018-06-19 00:50:42 | 38953201826cfb22bb8dec5e3561de040baaccc0

Fragment support, part 2.

- Reverted fragment related changes to ActivityRefWatcher
- We shouldn't remove the fragment lifecycle callback on activity destroy: it's automatically removed and the activity destroy callback happens before the fragment destroy.
- Added configuration for watching fragments directly on AndroidRefWatcherBuilder
- Moved ActivityRefWatcher to the internal package, it shouldn't have been an API. This is a breaking change, but should have a small impact (it's easy to recreate this class and tailor it to ones's needs)
- New `leakcanary-support-fragment` module to watch support fragments.
- Watching Fragments is enabled by default (can be disabled). If enabled, it'll automatically watch native Fragments on Android O and it'll watch support fragments if the `leakcanary-support-fragment` dependency is in the classpath.
- Added instrumentation tests, which led to finding bugs and fixing them. | 2018-06-18 00:31:32 | 68fc96c8198fef82b4a98ae96a8d71075a348913

Remove internal packages from javadoc

This also fixes a build error because the support library isn't in the javadoc classpath. | 2018-06-18 00:55:19 | 3a4d7efcb202d2b1e1499b8c5e4fb489a7e5d1b0

Merge pull request #824 from jankovd/link_to_fix_762

Link to fix for #762 | 2018-04-21 15:54:18 | c3cfb681a2e176848b7b44fbf4991b1bb4ba3e96

Merge pull request #976 from square/py/fix_action_bar

Handle action bar being null | 2018-04-21 01:12:36 | 30213f67a9a5ccbd4542a0ed191cade7f39b7ce1

Merge pull request #971 from square/pyricau-patch-1

Update ISSUE_TEMPLATE.md | 2018-04-20 21:45:23 | 55a5e2060bdd8a0f70d24b807581c0ef534115dc

Merge pull request #950 from SalvatoreT/salvatoret/775/fix-sharing-heap-dump-crash

Allow Android O devices to share heap dumps | 2018-03-27 21:48:12 | d4f865de0f2b7a9dfcd2f52c7b31ed0627886740

Merge pull request #944 from AdityaAnand1/patch-1

Update 'compile' to 'implementation' | 2018-02-24 05:27:21 | 746035b28bd670b6183e515cae032d147eb71a3d

Merge pull request #932 from NightlyNexus/patch-1

Update an InputMethodManager leak exclusion. | 2018-02-02 07:47:47 | b217c4a1730b68870c25fc6e12966f7aa99cf72e

Merge pull request #910 from christxph/patch-1

Add missing DE translation | 2017-12-06 15:50:02 | 8d72f7ff472b4f72fc45aa6d494dc810f8f6b7c9

Merge pull request #830 from colinmadere/fix-readme-code-827

README code sample fix when using Robolectric | 2017-08-17 20:55:30 | 6ec890e58d5531cc572eefc4de90ae1d7648ca86

README code sample fix when using Robolectric 

`setupLeakCanary()` method that was added for Robolectric test's ability to override setting up LeakCanary wasn't returning any value for the analyzer process check, which does not compile.  Added the `DISABLED` return value for when in the "Analyzer" process is detected. | 2017-08-17 20:51:28 | 04c77079f46e9bf03ad8d24c17b8759b4a096d93

Link to fix for #762 | 2017-08-14 12:25:09 | 48b8ea41231ff17b6af3cdb5acd49a0f8d940de7

Merge pull request #787 from square/fix-new-lints

Fix Lint errors introduced in AGP 3.0 | 2017-06-28 14:58:17 | ab2385ace1069488b344934c37a1be1ac497b9ab

Fix Lint errors introduced in AGP 3.0

* Remove unused resources; obsolete since minSdk=14
* Suppress StaticFieldLeak in sample app
* Suppress missing German translation on sample app strings
* Bump assertj-core to fix GradleDependency lint failure | 2017-06-28 09:19:52 | 2b661803967e4de24df219903079798afea023b1

Merge branch 'matpag-fix-textviewhoveredview'

* matpag-fix-textviewhoveredview:
  Extended TEXT_VIEW__MLAST_HOVERED_VIEW leaks to LOLLIPOP_MR1 | 2017-02-26 08:12:58 | f0bfbbd14dc3818bb31a225e57cd9ede005e76bf

Exclude SpellChecker check on N+

The bug seems to have returned, exactly as it was from before. | 2016-11-21 14:38:01 | bb687578fc23c3cbdb8aae5805905a9be39ad0a2

Improvements to heap dumping

* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct "pending" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.
* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.
* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.
* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.
* Leak notifications now each use a distinct notification instead of erasing each other.
* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.

Fixes #595.
Fixes #612. | 2016-09-26 12:46:43 | 3286a1acfbd7162a8e29e88a164eed83bbd6e209

Merge pull request #625 from square/jrod/fix-noop

Add isInAnalyzerProcess to android-no-op | 2016-09-22 15:49:50 | 1f773c8b2e3178a19959fd9b429d6a697dcc3fa6

Merge pull request #479 from cypressious/patch-1

Update Samsung ClipboardUIManager Excluded Ref | 2016-09-19 02:34:59 | 27b419da8a34c3042de0b85d28da78d2011a04ca

Merge pull request #602 from square/jrod/fix-master-oom

Fix master; increase dex max heap size | 2016-09-11 03:44:16 | 61f8fceab8811f98df788cc4b06f30e0cc0bb7d6

Merge pull request #516 from Rhedox/patch-1

Corrected some mistakes in the German translation | 2016-05-11 22:32:38 | e03fb8ed606062623cb8095550a675a087dc09a7

Merge pull request #477 from square/py/no_underscores

Remove old references to "__" prefixed resources initiated by #159 | 2016-03-30 02:39:47 | 67e09710c9849c45c213ec3bfe5aa0aa071d829b

Remove old references to "__" prefixed resources initiated by #159 | 2015-08-29 11:05:46 | 5cf8dc2c3c2d94dffe6fde9d8902fdf2323c4038

Merge pull request #458 from square/py/fix_npe

Fix NPE | 2016-03-20 08:17:22 | e5c0eee2747fcaba5ed89b6c539b6e064e146c56

Merge pull request #437 from Goddchen/patch-1

German translation | 2016-03-15 18:50:50 | 2757790c746c9bfa8fbc0ebe94ab5de43b22409d

Merge pull request #444 from jrodbx/fix-oom

Lower memory usage when parsing heap dumps on M | 2016-03-15 17:52:57 | 0163dfaa6360f51f2e861b8ded20109e52e857d2

Fixes to allow LeakCanary to work with ProGuard.

Fix ProGuard rules for debug builds.

Kill Eclipse | 2016-01-19 05:35:56 | 3ac5b36900d7393947ae0d5c6ff43f61400bac1d

Merge pull request #327 from shubhamchaudhary/patch-1

Add indication to using no-op in unit test | #143 | 2016-01-18 20:27:45 | 4950e1756c79fba871f524d5d9c47ed9322b23b3

Merge pull request #391 from jrodbx/fix-docs

update documentation | 2016-01-18 20:01:08 | 41b23cec681f4ce39bc4d57a0954e78e0454867b

Merge pull request #272 from shaybarak/patch-1

Fix SDK_INT range expression | 2016-01-04 17:25:27 | 66bcd40178f63cb9d1204c06d23ac9965c75728d

Merge pull request #283 from matthewmichihara/patch-1

Exclude TextLine.sCached leak in Lollipop MR1 too | 2016-01-04 15:49:41 | 2b98914f1b59995dfcad20bf9e42da02397a4d9a

Configure public resources, ref #238

Public resources are:
 - activity icon
 - activity name
 - max stored leaks value
 - dump toast layout

Gradle 1.3.0 is required, seems to change the value of "testDebug" task to "testDebugUnitTest".
A public.xml file is now exported in the aar output. | 2015-08-29 11:40:49 | 1705b7047b87b60f77895cf54a2418f660781a1b

Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager

Add fix suggestion for ClipboardUIManager leak. | 2015-08-28 14:49:20 | 6d6690fea92ba7ecc3ad81b5a9f004b343a7a252

Merge pull request #230 from agrieve/patch-1

Fix lint warnings in res/layout/leak_canary_ref_row.xml | 2015-08-27 21:28:55 | 116da284cc736b028c330cd76ead22ebdadfd744

Add fix suggestion for ClipboardUIManager leak. Fixes #133. | 2015-05-21 14:56:29 | 79317f779520f412dbccca21c68c10aefaf52517

#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
- Added resourcePrefix lint check to validate all resource names are correct. | 2015-07-15 17:45:18 | 87aec26ffbb304468c2010d682cd02834aabd876

Merge pull request #145 from square/npe-fix

Fix NPE in HeapAnalyzerService | 2015-06-03 17:39:51 | a2f9c6e2db84c1cb6b853c005c639c14ce688f07

Merge pull request #124 from mortonfox/patch-1

Fix links to KeyedWeakReference, AndroidExcludedRefs | 2015-05-18 17:11:16 | 18f1de5031b4a47f5c81860357d98ae37ff7e217

fix master | 2015-05-14 18:35:19 | 41a7ddeaa7d64c406115ef2241759e2fc07bb4c5

Merge pull request #82 from dmarcato/patch-1

INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN | 2015-05-14 13:27:34 | 0389ba7f6451e3fc1035a7735200fa556e51af6a

fix build | 2015-05-13 21:14:46 | c997c35d04a2fcb4deb921e516941811b2e36dac

Merge pull request #80 from pepyakin/sp/fix-changelog

Fix links to issues. | 2015-05-13 17:09:48 | 432abe0d6f498af39bea1fa5d9f024654c0995ba

More granularity for AndroidExcludedRefs

The goal is to allow an app that fixed a known leak to stop excluding that leak, so that it gets reported if it's not correctly fixed.

* `AndroidExcludedRefs` is an enum
* `AndroidExcludedRefs` static methods are still here
* However, you can also create you own enum set and build the corresponding ExcludedRefs from that.

API changes:

* `LeakCanary.install(Application, Class<? extends AbstractAnalysisResultService>, ExcludedRefs)`
* `LeakCanary.androidWatcher(HeapDump.Listener, ExcludedRefs)` | 2015-05-13 01:42:32 | 1b1c6525be7a14e4d1a37302c9003920e3b31a5b

Merge pull request #68 from liaohuqiu/master

down minSDK to 8, fix #57 | 2015-05-12 16:27:32 | d16aa4da806b5ef71f50e0478f9ea1054bd0152c

down minSDK to 8, fix #57 | 2015-05-12 16:09:58 | dbc45908928232e807316199c67e207ff3136a44

Merge pull request #67 from pepyakin/sp/fix-excluded-refs

Fix ExcludedRefs creation. | 2015-05-12 15:00:11 | 83f2e1ed4f536a2c7ba967a1c9dfd79f02213437

Update to HAHA 1.2

* HAHA 1.2 has no .properties resource file which should fix #46 | 2015-05-12 04:47:24 | 307a0becb21bd6993216b569ab9fdf066b78721d

Merge pull request #34 from square/py/fix_tests

Fix unit tests | 2015-05-10 20:23:33 | 923e9f3f352e0f44058e58446396b25346594f48

Heap dumps on SD card

* Heap dumps and analysis results were previously saved in the app directory. They are now saved on the external storage (sd card).
* Centralized internal static helper methods to a dedicated class: `LeakCanaryInternals`.

BREAKING CHANGES

* When upgrading, previously saved heap dumps will be lost, but won't be removed from the app directory. You should probably uninstall your app.
* Added permission WRITE_EXTERNAL_STORAGE
* Public API change: Removed `Application` parameter in `LeakCanary.androidWatcher()`
* Public API change: Removed `Application` parameter in `AndroidHeapDumper()`

* Fixes #21 (can't share heap dump)
* This is a step towards fixing #15 (strict mode violations), although there's still more work. | 2015-05-10 16:01:34 | 8b9f85ead2c03b047dd89f6c7a76c2424fee1f95

Merge pull request #6 from nhachicha/patch-1

Typo :) | 2015-05-09 11:59:08 | f23db8699f6fc05687eddd60a041a7fd80aa1cba

